{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\login\\\\Verification.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { colors } from \"../../../utils/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { getOPTCode } from \"../../../netWorking/authService\";\nimport Loading from \"../../../components/dialogs/Loading\";\n\nvar Verification = function Verification(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var refInput1 = useRef(),\n      refInput2 = useRef(),\n      refInput3 = useRef(),\n      refInput4 = useRef(),\n      refInput5 = useRef(),\n      refInput6 = useRef();\n\n  var _useState3 = useState({\n    input1: \"\",\n    input2: \"\",\n    input3: \"\",\n    input4: \"\",\n    input5: \"\",\n    input6: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var onHandleInput = function onHandleInput(key, value) {\n    setInput(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, key, value));\n    });\n  };\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      otp = _useState6[0],\n      setOtp = _useState6[1];\n\n  var _useState7 = useState(59),\n      _useState8 = _slicedToArray(_useState7, 2),\n      time = _useState8[0],\n      setTime = _useState8[1];\n\n  var _useState9 = useState(300),\n      _useState10 = _slicedToArray(_useState9, 2),\n      expireOTP = _useState10[0],\n      setExpireOTP = _useState10[1];\n\n  var onSubmit = function onSubmit() {\n    if (expireOTP === 0) {\n      alert(\"OTP expired, please resend OTP!\");\n      return;\n    }\n\n    if (otp == \"\" + input.input1 + input.input2 + input.input3 + input.input4 + input.input5 + input.input6) {\n      props.navigation.navigate(\"CreateNewPassword\", {\n        otp: otp\n      });\n    } else {\n      alert(\"Wrong OTP!\");\n    }\n  };\n\n  var sendOTP = function sendOTP() {\n    var res;\n    return _regeneratorRuntime.async(function sendOTP$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getOPTCode(props.route.params.input));\n\n          case 3:\n            res = _context.sent;\n            setIsLoading(false);\n\n            if (res.isSuccess === 1) {\n              setExpireOTP(300);\n              setOtp(res.data);\n              alert(res.message);\n            } else {\n              alert(res.message);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var reSend = function reSend() {\n    if (time == 0) {\n      setTime(59);\n      sendOTP();\n    }\n  };\n\n  useEffect(function () {\n    sendOTP();\n  }, []);\n  useEffect(function () {\n    if (!time) return;\n    var intervalId = setInterval(function () {\n      setTime(time - 1);\n    }, 1000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, [time]);\n  useEffect(function () {\n    if (!expireOTP) return;\n    var intervalId = setInterval(function () {\n      setExpireOTP(expireOTP - 1);\n    }, 1000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, [expireOTP]);\n  return React.createElement(TouchableNativeFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.rowlogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formlogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Please enter OTP code send to \", props.route.params.input), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    ref: refInput1,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    value: input.input1,\n    onChangeText: function onChangeText(text) {\n      onHandleInput(\"input1\", text);\n\n      if (input.input1 === \"\") {\n        refInput2.current.focus();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    ref: refInput2,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    value: input.input2,\n    onChangeText: function onChangeText(text) {\n      onHandleInput(\"input2\", text);\n\n      if (input.input2 === \"\") {\n        refInput3.current.focus();\n      } else {\n        refInput1.current.focus();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    ref: refInput3,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    value: input.input3,\n    onChangeText: function onChangeText(text) {\n      onHandleInput(\"input3\", text);\n\n      if (input.input3 === \"\") {\n        refInput4.current.focus();\n      } else {\n        refInput2.current.focus();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    ref: refInput4,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    value: input.input4,\n    onChangeText: function onChangeText(text) {\n      onHandleInput(\"input4\", text);\n\n      if (input.input4 === \"\") {\n        refInput5.current.focus();\n      } else {\n        refInput3.current.focus();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    ref: refInput5,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    value: input.input5,\n    onChangeText: function onChangeText(text) {\n      onHandleInput(\"input5\", text);\n\n      if (input.input5 === \"\") {\n        refInput6.current.focus();\n      } else {\n        refInput4.current.focus();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    ref: refInput6,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    value: input.input6,\n    onChangeText: function onChangeText(text) {\n      onHandleInput(\"input6\", text);\n\n      if (input.input6 !== \"\") {\n        refInput5.current.focus();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      marginTop: 32\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return reSend();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#DAB451\",\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"Resend OTP\")), React.createElement(Text, {\n    style: {\n      color: \"#A4A4A4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, time, \"s\")), React.createElement(LinearGradient, {\n    style: styles.button,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      onSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Next\"))))), isLoading && React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default Verification;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#17151C\"\n  },\n  title: {\n    color: colors.gray,\n    fontSize: 14,\n    textAlign: \"center\",\n    marginBottom: 30,\n    fontWeight: \"400\"\n  },\n  textButton: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 17\n  },\n  rowlogin: {\n    flex: 7,\n    justifyContent: \"space-between\",\n    paddingTop: 60,\n    paddingBottom: 0\n  },\n  formlogin: {\n    justifyContent: \"flex-start\",\n    paddingRight: 30,\n    paddingLeft: 30\n  },\n  viewInput: {\n    flexDirection: \"row\",\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\n    height: 46,\n    borderRadius: 4,\n    zIndex: 1\n  },\n  textInput: {\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\n    width: 44,\n    height: 56,\n    color: \"white\",\n    textAlign: \"center\",\n    borderRadius: 4,\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  button: {\n    marginTop: 32,\n    borderRadius: 4,\n    height: 46,\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/login/Verification.tsx"],"names":["React","useState","useEffect","useRef","colors","LinearGradient","getOPTCode","Loading","Verification","props","isLoading","setIsLoading","refInput1","refInput2","refInput3","refInput4","refInput5","refInput6","input1","input2","input3","input4","input5","input6","input","setInput","onHandleInput","key","value","prevState","otp","setOtp","time","setTime","expireOTP","setExpireOTP","onSubmit","alert","navigation","navigate","sendOTP","route","params","res","isSuccess","data","message","reSend","intervalId","setInterval","clearInterval","Keyboard","dismiss","styles","container","rowlogin","formlogin","title","flexDirection","justifyContent","textInput","text","current","focus","marginTop","color","marginRight","button","textButton","StyleSheet","create","flex","backgroundColor","gray","fontSize","textAlign","marginBottom","fontWeight","paddingTop","paddingBottom","paddingRight","paddingLeft","viewInput","height","borderRadius","zIndex","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Keyboard,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { AuthorStackParamList } from \"../../../types\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getOPTCode } from \"../../../netWorking/authService\";\r\nimport Loading from \"../../../components/dialogs/Loading\";\r\ninterface Props {\r\n  navigation: StackNavigationProp<AuthorStackParamList>;\r\n  route: RouteProp<AuthorStackParamList, \"Verification\">;\r\n}\r\nconst Verification = (props: Props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const refInput1: React.MutableRefObject<any> = useRef(),\r\n    refInput2: React.MutableRefObject<any> = useRef(),\r\n    refInput3: React.MutableRefObject<any> = useRef(),\r\n    refInput4: React.MutableRefObject<any> = useRef(),\r\n    refInput5: React.MutableRefObject<any> = useRef(),\r\n    refInput6: React.MutableRefObject<any> = useRef();\r\n  const [input, setInput] = useState({\r\n    input1: \"\",\r\n    input2: \"\",\r\n    input3: \"\",\r\n    input4: \"\",\r\n    input5: \"\",\r\n    input6: \"\",\r\n  });\r\n\r\n  const onHandleInput = (key, value) => {\r\n    setInput(prevState => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }));\r\n  };\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [time, setTime] = useState(59);\r\n  const [expireOTP, setExpireOTP] = useState(300);\r\n  const onSubmit = () => {\r\n    if (expireOTP === 0) {\r\n      alert(\"OTP expired, please resend OTP!\");\r\n      return;\r\n    }\r\n    if (otp == `${input.input1}${input.input2}${input.input3}${input.input4}${input.input5}${input.input6}`) {\r\n      props.navigation.navigate(\"CreateNewPassword\", { otp });\r\n    } else {\r\n      alert(\"Wrong OTP!\");\r\n    }\r\n  };\r\n\r\n  const sendOTP = async () => {\r\n    setIsLoading(true);\r\n    const res = await getOPTCode(props.route.params.input);\r\n    setIsLoading(false);\r\n    if (res.isSuccess === 1) {\r\n      setExpireOTP(300);\r\n      setOtp(res.data);\r\n      alert(res.message);\r\n    } else {\r\n      alert(res.message);\r\n    }\r\n  };\r\n  const reSend = () => {\r\n    if (time == 0) {\r\n      setTime(59);\r\n      sendOTP();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendOTP();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!time) return;\r\n    const intervalId = setInterval(() => {\r\n      setTime(time - 1);\r\n    }, 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [time]);\r\n  useEffect(() => {\r\n    if (!expireOTP) return;\r\n    const intervalId = setInterval(() => {\r\n      setExpireOTP(expireOTP - 1);\r\n    }, 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [expireOTP]);\r\n  return (\r\n    <TouchableNativeFeedback onPress={Keyboard.dismiss}>\r\n      <View style={styles.container}>\r\n        <View style={styles.rowlogin}>\r\n          <View style={styles.formlogin}>\r\n            <Text style={styles.title}>Please enter OTP code send to {props.route.params.input}</Text>\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n              <TextInput\r\n                ref={refInput1}\r\n                maxLength={1}\r\n                keyboardType=\"numeric\"\r\n                style={styles.textInput}\r\n                value={input.input1}\r\n                onChangeText={text => {\r\n                  onHandleInput(\"input1\", text);\r\n                  if (input.input1 === \"\") {\r\n                    refInput2.current.focus();\r\n                  }\r\n                }}\r\n              ></TextInput>\r\n              <TextInput\r\n                ref={refInput2}\r\n                maxLength={1}\r\n                keyboardType=\"numeric\"\r\n                style={styles.textInput}\r\n                value={input.input2}\r\n                onChangeText={text => {\r\n                  onHandleInput(\"input2\", text);\r\n                  if (input.input2 === \"\") {\r\n                    refInput3.current.focus();\r\n                  } else {\r\n                    refInput1.current.focus();\r\n                  }\r\n                }}\r\n              ></TextInput>\r\n              <TextInput\r\n                ref={refInput3}\r\n                maxLength={1}\r\n                keyboardType=\"numeric\"\r\n                style={styles.textInput}\r\n                value={input.input3}\r\n                onChangeText={text => {\r\n                  onHandleInput(\"input3\", text);\r\n                  if (input.input3 === \"\") {\r\n                    refInput4.current.focus();\r\n                  } else {\r\n                    refInput2.current.focus();\r\n                  }\r\n                }}\r\n              ></TextInput>\r\n              <TextInput\r\n                ref={refInput4}\r\n                maxLength={1}\r\n                keyboardType=\"numeric\"\r\n                style={styles.textInput}\r\n                value={input.input4}\r\n                onChangeText={text => {\r\n                  onHandleInput(\"input4\", text);\r\n                  if (input.input4 === \"\") {\r\n                    refInput5.current.focus();\r\n                  } else {\r\n                    refInput3.current.focus();\r\n                  }\r\n                }}\r\n              ></TextInput>\r\n              <TextInput\r\n                ref={refInput5}\r\n                maxLength={1}\r\n                keyboardType=\"numeric\"\r\n                style={styles.textInput}\r\n                value={input.input5}\r\n                onChangeText={text => {\r\n                  onHandleInput(\"input5\", text);\r\n                  if (input.input5 === \"\") {\r\n                    refInput6.current.focus();\r\n                  } else {\r\n                    refInput4.current.focus();\r\n                  }\r\n                }}\r\n              ></TextInput>\r\n              <TextInput\r\n                ref={refInput6}\r\n                maxLength={1}\r\n                keyboardType=\"numeric\"\r\n                style={styles.textInput}\r\n                value={input.input6}\r\n                onChangeText={text => {\r\n                  onHandleInput(\"input6\", text);\r\n                  if (input.input6 !== \"\") {\r\n                    refInput5.current.focus();\r\n                  }\r\n                }}\r\n              ></TextInput>\r\n            </View>\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"center\", marginTop: 32 }}>\r\n              <TouchableOpacity onPress={() => reSend()}>\r\n                <Text style={{ color: \"#DAB451\", marginRight: 8 }}>Resend OTP</Text>\r\n              </TouchableOpacity>\r\n              <Text style={{ color: \"#A4A4A4\" }}>{time}s</Text>\r\n            </View>\r\n            <LinearGradient style={styles.button} colors={[\"#DAB451\", \"#988050\"]}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  onSubmit();\r\n                }}\r\n              >\r\n                <Text style={styles.textButton}>Next</Text>\r\n              </TouchableOpacity>\r\n            </LinearGradient>\r\n          </View>\r\n        </View>\r\n        {isLoading && <Loading></Loading>}\r\n      </View>\r\n    </TouchableNativeFeedback>\r\n  );\r\n};\r\n\r\nexport default Verification;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#17151C\",\r\n  },\r\n  title: {\r\n    color: colors.gray,\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n    fontWeight: \"400\",\r\n  },\r\n  textButton: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 17,\r\n  },\r\n  rowlogin: {\r\n    flex: 7,\r\n    justifyContent: \"space-between\",\r\n    paddingTop: 60,\r\n    paddingBottom: 0,\r\n  },\r\n  formlogin: {\r\n    justifyContent: \"flex-start\",\r\n    paddingRight: 30,\r\n    paddingLeft: 30,\r\n  },\r\n  viewInput: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\r\n    height: 46,\r\n    borderRadius: 4,\r\n    // marginBottom: 20,\r\n    zIndex: 1,\r\n  },\r\n  textInput: {\r\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\r\n    width: 44,\r\n    height: 56,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    borderRadius: 4,\r\n    fontWeight: \"700\",\r\n    fontSize: 16,\r\n  },\r\n  button: {\r\n    marginTop: 32,\r\n    borderRadius: 4,\r\n    height: 46,\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}