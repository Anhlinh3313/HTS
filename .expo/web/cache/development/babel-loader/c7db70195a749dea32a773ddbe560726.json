{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\StaffManagement\\\\Reports\\\\items\\\\itemServiceTeam.tsx\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { colors } from \"../../../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nexport default function itemServiceTeam(props) {\n  var _ref, _props$item$dutyName, _props$item;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisibleDetail = _useState2[0],\n      setIsVisibleDetail = _useState2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.row_between, {\n      paddingHorizontal: 15,\n      paddingVertical: 10,\n      backgroundColor: \"#8D7550\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setIsVisibleDetail(!isVisibleDetail);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, isVisibleDetail ? React.createElement(Ionicons, {\n    name: \"remove-circle-outline\",\n    size: 20,\n    color: \"#000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }) : React.createElement(Ionicons, {\n    name: \"add-circle-outline\",\n    size: 20,\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [{\n      fontWeight: \"700\",\n      color: colors.colorText,\n      fontSize: 14,\n      textAlign: \"right\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, props.item ? props.item.staffName : \"-\"), !isVisibleDetail && React.createElement(Text, {\n    style: [{\n      fontWeight: \"400\",\n      color: colors.colorLine,\n      fontSize: 12,\n      textAlign: \"right\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, (_ref = (_props$item$dutyName = (_props$item = props.item) == null ? void 0 : _props$item.dutyName) != null ? _props$item$dutyName : props.item.roster) != null ? _ref : \"-\"))), isVisibleDetail && React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }\n  }, props.children));\n}\nvar styles = StyleSheet.create({\n  row_between: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/StaffManagement/Reports/items/itemServiceTeam.tsx"],"names":["React","useState","colors","Ionicons","itemServiceTeam","props","isVisibleDetail","setIsVisibleDetail","styles","row_between","paddingHorizontal","paddingVertical","backgroundColor","fontWeight","color","colorText","fontSize","textAlign","item","staffName","colorLine","dutyName","roster","children","StyleSheet","create","flexDirection","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAqC;AAAA;;AAClD,kBAA8CJ,QAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAOK,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLC,MAAM,CAACC,WADF,EAEL;AACEC,MAAAA,iBAAiB,EAAE,EADrB;AAEEC,MAAAA,eAAe,EAAE,EAFnB;AAGEC,MAAAA,eAAe,EAAE;AAHnB,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbL,MAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,eAAe,GACd,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,uBAAf;AAAuC,IAAA,IAAI,EAAE,EAA7C;AAAiD,IAAA,KAAK,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,GAGd,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,oBAAf;AAAoC,IAAA,IAAI,EAAE,EAA1C;AAA8C,IAAA,KAAK,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAVF,EAqBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACL;AACEO,MAAAA,UAAU,EAAE,KADd;AAEEC,MAAAA,KAAK,EAAEZ,MAAM,CAACa,SAFhB;AAGEC,MAAAA,QAAQ,EAAE,EAHZ;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGZ,KAAK,CAACa,IAAN,GAAab,KAAK,CAACa,IAAN,CAAWC,SAAxB,GAAoC,GAVvC,CADF,EAaG,CAACb,eAAD,IACC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACL;AACEO,MAAAA,UAAU,EAAE,KADd;AAEEC,MAAAA,KAAK,EAAEZ,MAAM,CAACkB,SAFhB;AAGEJ,MAAAA,QAAQ,EAAE,EAHZ;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAUGZ,KAAK,CAACa,IAVT,qBAUG,YAAYG,QAVf,mCAU2BhB,KAAK,CAACa,IAAN,CAAWI,MAVtC,mBAUgD,GAVhD,CAdJ,CArBF,CADF,EAmDGhB,eAAe,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAK,CAACkB,QAAb,CAnDtB,CADF;AAuDD;AAED,IAAMf,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,WAAW,EAAE;AACXiB,IAAAA,aAAa,EAAE,KADJ;AAEXC,IAAAA,cAAc,EAAE,eAFL;AAGXC,IAAAA,UAAU,EAAE;AAHD;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\n\r\nimport { colors } from \"../../../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nexport default function itemServiceTeam(props: any) {\r\n  const [isVisibleDetail, setIsVisibleDetail] = useState(false);\r\n  return (\r\n    <View>\r\n      <View\r\n        style={[\r\n          styles.row_between,\r\n          {\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n            backgroundColor: \"#8D7550\",\r\n          },\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            setIsVisibleDetail(!isVisibleDetail);\r\n          }}\r\n        >\r\n          {isVisibleDetail ? (\r\n            <Ionicons name=\"remove-circle-outline\" size={20} color=\"#000\"></Ionicons>\r\n          ) : (\r\n            <Ionicons name=\"add-circle-outline\" size={20} color=\"#fff\"></Ionicons>\r\n          )}\r\n        </TouchableOpacity>\r\n        <View>\r\n          <Text\r\n            style={[\r\n              {\r\n                fontWeight: \"700\",\r\n                color: colors.colorText,\r\n                fontSize: 14,\r\n                textAlign: \"right\",\r\n              },\r\n            ]}\r\n          >\r\n            {props.item ? props.item.staffName : \"-\"}\r\n          </Text>\r\n          {!isVisibleDetail && (\r\n            <Text\r\n              style={[\r\n                {\r\n                  fontWeight: \"400\",\r\n                  color: colors.colorLine,\r\n                  fontSize: 12,\r\n                  textAlign: \"right\",\r\n                },\r\n              ]}\r\n            >\r\n              {props.item?.dutyName ?? props.item.roster ?? \"-\"}\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </View>\r\n      {isVisibleDetail && <View>{props.children}</View>}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row_between: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}