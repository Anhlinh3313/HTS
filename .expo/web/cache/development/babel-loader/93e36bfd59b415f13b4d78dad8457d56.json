{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\StaffManagement\\\\Reports\\\\OvertimeRecord.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { colors } from \"../../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Table, Row, TableWrapper, Cell } from \"react-native-table-component\";\nimport ModalSendEmail from \"../../../../../components/ModalSendEmail\";\nimport ModalCancel from \"../../../../../components/management/items/modalCancel\";\nimport SendSuccess from \"../../../../../components/modalNotification/SendSuccess\";\nimport SendFail from \"../../../../../components/modalNotification/SendFail\";\nimport ModalReason from \"../../../../../components/modalNotification/ModalReason\";\nimport { ReportStaffService, MailStaffService } from \"../../../../../netWorking/staffService\";\nimport Loading from \"../../../../../components/dialogs/Loading\";\nimport { useSelector } from \"react-redux\";\nimport { getDayInWeekArray } from \"../../../../../components/management/utils\";\nimport moment from \"moment\";\nvar widthArr = [150, 100, 200, 30, 30, 30, 30, 30, 30, 30, 30, 150, 150];\n\nvar OvertimeRecord = function OvertimeRecord() {\n  var reports = useSelector(function (state) {\n    return state.reports;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.staff;\n  }),\n      record_area = _useSelector.record_area;\n\n  var dimensions = Dimensions.get(\"window\");\n  var windowHeight = dimensions.height;\n  var windowWidth = dimensions.width;\n  var dataTable = {\n    tableHead: [\"ID\", \"FULL NAME\", \"Hours OT\", \"MANAGER\", \"EXTRA\"],\n    tableHead1: [\"FULL NAME\", \"E.Code\", \"Role\"],\n    tableHead2: getDayInWeekArray(new Date(moment(reports.fromDate).format(\"YYYY-MM-DD\")), new Date(new Date().setDate(new Date(moment(reports.endDate).format(\"YYYY-MM-DD\")).getDate() + 1))),\n    tableHead3: [\"TOT OT BY HOUR\", \"TOT OT BY DAYS\"],\n    tableHead0: [\"\", \"\", \"\", \"Mon\", \"\", \"\", \"\", \"\", \"\", \"\", \"Mon\", \"\", \"\"]\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(record_area[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickerValue = _useState4[0],\n      setPickerValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDone = _useState6[0],\n      setDone = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalSendMail = _useState10[0],\n      setModalSendMail = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalCancel = _useState12[0],\n      setModalCancel = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sent = _useState14[0],\n      setSent = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      statusSent = _useState16[0],\n      setStatusSent = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      modalReason = _useState18[0],\n      setModalReason = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      valueModalReason = _useState20[0],\n      setValueModalReason = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      staffsTable = _useState22[0],\n      setStaffsTable = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      staffsTableDone = _useState24[0],\n      setStaffsTableDone = _useState24[1];\n\n  var _useState25 = useState(0),\n      _useState26 = _slicedToArray(_useState25, 2),\n      idScheduleNotExtra = _useState26[0],\n      setIdScheduleNotExtra = _useState26[1];\n\n  var _useState27 = useState(reports.fromDate),\n      _useState28 = _slicedToArray(_useState27, 2),\n      currentDate = _useState28[0],\n      setCurrentDate = _useState28[1];\n\n  var handleSendMail = function handleSendMail(description, email) {\n    var res;\n    return _regeneratorRuntime.async(function handleSendMail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setModalSendMail(!modalSendMail);\n            setIsLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(MailStaffService.sendMailOverTimeOTRecord(description, email, reports.fromDate, reports.endDate));\n\n          case 4:\n            res = _context.sent;\n            setIsLoading(false);\n\n            if (res.isSuccess == 1 && res.data) {\n              setSent(\"success\");\n              setStatusSent(\"Email sent successfully!\");\n            } else {\n              setSent(\"fail\");\n              setStatusSent(\"Email sent failed!\");\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var showCell = function showCell(data, id) {\n    switch (data) {\n      case true:\n        return React.createElement(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: [styles.iconChecked, {\n            backgroundColor: \"#76D146\"\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }, React.createElement(Ionicons, {\n          name: \"checkmark\",\n          size: 14,\n          color: \"#fff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        })));\n\n      case false:\n        return React.createElement(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: [styles.iconChecked, {\n            backgroundColor: \"#FF3232\"\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        }, React.createElement(Ionicons, {\n          name: \"close\",\n          size: 14,\n          color: \"#fff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }\n        })));\n\n      case null:\n        return React.createElement(View, {\n          style: {\n            alignItems: \"center\",\n            flexDirection: \"row\",\n            justifyContent: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return updateOverTimeOTRecordByDay(id, null, true);\n          },\n          style: [styles.iconChecked, {\n            backgroundColor: \"#76D146\",\n            marginRight: 8\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }\n        }, React.createElement(Ionicons, {\n          name: \"checkmark\",\n          size: 14,\n          color: \"#fff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }\n        })), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            setModalCancel(!modalCancel);\n            setIdScheduleNotExtra(id);\n          },\n          style: [styles.iconChecked, {\n            backgroundColor: \"#FF3232\"\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }\n        }, React.createElement(Ionicons, {\n          name: \"close\",\n          size: 14,\n          color: \"#fff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }\n        })));\n\n      default:\n        return data;\n    }\n  };\n\n  var showCellDone = function showCellDone(data, index) {\n    if (index > 2 && index < 11) {\n      if (typeof data === \"object\") {\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            data.checkNotExtra === false ? setModalReason(true) : undefined;\n            setValueModalReason(data.notExtra);\n          },\n          style: {},\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: [styles.iconChecked, {\n            backgroundColor: !data.checkNotExtra ? \"#FF3232\" : \"#76D146\"\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.textTitleHeader400,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }\n        }, data.hoursOTRank)));\n      } else {\n        return data;\n      }\n    }\n\n    return data;\n  };\n\n  var widthCellDone = function widthCellDone(index) {\n    switch (index) {\n      case 0:\n        return 150;\n\n      case 1:\n        return 100;\n\n      case 2:\n        return 200;\n\n      case 11:\n        return 150;\n\n      case 12:\n        return 150;\n\n      default:\n        return 30;\n    }\n  };\n\n  var onPick = function onPick(value) {\n    setPickerValue(value);\n    setModalVisible(false);\n  };\n\n  var onConfirm = function onConfirm() {\n    if (isDone) {\n      setModalSendMail(!modalSendMail);\n    } else {\n      if (new Date(moment(currentDate).format(\"YYYY-MM-DD\")).getDay() === 0) {\n        setDone(!isDone);\n      } else {\n        var _date = new Date(moment(currentDate).format(\"YYYY-MM-DD\"));\n\n        setCurrentDate(moment(_date.setDate(_date.getDate() + 1)).format(\"YYYY-MM-DD 00:00\"));\n      }\n    }\n  };\n\n  var handleDayInfo = function handleDayInfo(data) {\n    var listDays = getDayInWeekArray(new Date(moment(reports.fromDate).format(\"YYYY-MM-DD\")), new Date(moment(reports.endDate).format(\"YYYY-MM-DD\")), \"dddd\");\n    var result = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n    data.map(function (item) {\n      var index = listDays.findIndex(function (day) {\n        return day === item.rank;\n      });\n\n      if (item.checkNotExtra !== null) {\n        result[index] = {\n          checkNotExtra: item.checkNotExtra,\n          hoursOTRank: item.hoursOTRank,\n          notExtra: item.notExtra\n        };\n      }\n    });\n    return result;\n  };\n\n  var loadOverTimeOTRecordInfo = function loadOverTimeOTRecordInfo() {\n    var res, _data;\n\n    return _regeneratorRuntime.async(function loadOverTimeOTRecordInfo$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsLoading(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ReportStaffService.getOverTimeOTRecordInfo(reports.fromDate, reports.endDate, pickerValue.id));\n\n          case 3:\n            res = _context2.sent;\n\n            if (res.isSuccess == 1 && res.data) {\n              _data = [];\n\n              if (res.data.length > 0) {\n                res.data.map(function (item) {\n                  var _item$staffCode;\n\n                  _data.push({\n                    info: item,\n                    headChart: [item.staffName, (_item$staffCode = item.staffCode) != null ? _item$staffCode : item.staffId, item.dutyName],\n                    bodyChart: handleDayInfo(item.dayInfo),\n                    footChart: [item.hoursOT, item.dayNumber]\n                  });\n                });\n              }\n\n              setStaffsTableDone(_data);\n            }\n\n            setIsLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadOverTimeOTRecord = function loadOverTimeOTRecord() {\n    var res, _data;\n\n    return _regeneratorRuntime.async(function loadOverTimeOTRecord$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setIsLoading(true);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(ReportStaffService.getOverTimeOTRecord(moment(currentDate).format(\"YYYY-MM-DD 00:00\"), pickerValue.id));\n\n          case 3:\n            res = _context3.sent;\n\n            if (res.isSuccess == 1 && res.data) {\n              _data = [];\n\n              if (res.data.length > 0) {\n                res.data.map(function (item) {\n                  _data.push({\n                    workingScheduleId: item.workingScheduleId,\n                    charts: [item.staffId, item.staffName, item.hoursOT, !!item.manager, item.checkNotExtra]\n                  });\n                });\n              }\n\n              setStaffsTable(_data);\n            }\n\n            setIsLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateOverTimeOTRecordByDay = function updateOverTimeOTRecordByDay(id, reason, check) {\n    var res;\n    return _regeneratorRuntime.async(function updateOverTimeOTRecordByDay$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(ReportStaffService.updateOverTimeOTRecordByDay([{\n              WorkingScheduleId: id,\n              NotExtra: reason,\n              CheckNotExtra: +check\n            }]));\n\n          case 2:\n            res = _context4.sent;\n\n            if (res.isSuccess == 1 && res.data) {\n              loadOverTimeOTRecord();\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadOverTimeOTRecord();\n  }, [pickerValue, currentDate]);\n  useEffect(function () {\n    if (isDone) {\n      loadOverTimeOTRecordInfo();\n    }\n  }, [pickerValue, reports.fromDate, reports.endDate, isDone]);\n  useEffect(function () {\n    setCurrentDate(reports.fromDate);\n  }, [reports.fromDate]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.titleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.textTitleHeader, {\n      textAlign: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, \"OVERTIME (OT) RECORD\")), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.pickerModal, styles.row_between],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, pickerValue.name), React.createElement(Ionicons, {\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }))), modalVisible && React.createElement(View, {\n    style: [styles.styleModalPicker, {\n      width: windowWidth - 30\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, record_area.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: \"\" + item.id + item.code,\n      style: {\n        marginBottom: 15\n      },\n      onPress: function onPress() {\n        return onPick(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.textTitleHeader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, item.name));\n  })), isDone ? React.createElement(ScrollView, {\n    horizontal: true,\n    style: {\n      borderRadius: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"#414141\",\n      borderRadius: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, React.createElement(Table, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, React.createElement(Row, {\n    data: dataTable.tableHead0,\n    style: {\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      height: 36,\n      backgroundColor: \"#878787\"\n    },\n    widthArr: widthArr,\n    textStyle: styles.textTitleHeader400,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }), React.createElement(Row, {\n    data: dataTable.tableHead1.concat(dataTable.tableHead2, dataTable.tableHead3),\n    style: {\n      height: 45,\n      paddingLeft: 10\n    },\n    widthArr: widthArr,\n    textStyle: styles.textGray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }), staffsTableDone.map(function (item, index) {\n    return React.createElement(TableWrapper, {\n      key: index,\n      style: {\n        flexDirection: \"row\",\n        height: 36,\n        backgroundColor: index % 2 === 0 ? \"#8D7550\" : \"transparent\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }, item.headChart.concat(item.bodyChart, item.footChart).map(function (cellData, cellIndex) {\n      return React.createElement(Cell, {\n        key: cellIndex,\n        data: showCellDone(cellData, cellIndex),\n        textStyle: [styles.textTitleHeader400, {\n          marginLeft: cellIndex === 0 || cellIndex === 1 || cellIndex === 2 ? 10 : 0\n        }, {\n          textAlign: cellIndex === 11 || cellIndex === 12 ? \"center\" : undefined\n        }],\n        width: widthCellDone(cellIndex),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 23\n        }\n      });\n    }));\n  })))) : React.createElement(View, {\n    style: {\n      backgroundColor: \"#414141\",\n      borderRadius: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.center, {\n      backgroundColor: \"#878787\"\n    }, styles.radius_top],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, \"THE LIST OF EMPLOYEE\")), React.createElement(Text, {\n    style: [styles.textTitleHeader400, styles.textDate],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 11\n    }\n  }, moment(currentDate).format(\"dddd, DD/MM/YYYY\")), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, React.createElement(Table, {\n    borderStyle: {\n      borderColor: \"transparent\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, React.createElement(Row, {\n    data: dataTable.tableHead,\n    style: {\n      height: 40\n    },\n    textStyle: [styles.textGray, {\n      textAlign: \"center\"\n    }],\n    widthArr: [30, 150, 75, 75, 75],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }), staffsTable.map(function (rowData, index) {\n    return React.createElement(TableWrapper, {\n      key: index,\n      style: {\n        flexDirection: \"row\",\n        height: 40,\n        backgroundColor: index % 2 === 0 ? \"#8D7550\" : \"transparent\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, rowData.charts.map(function (cellData, cellIndex) {\n      return React.createElement(Cell, {\n        key: cellIndex,\n        data: showCell(cellData, rowData.workingScheduleId),\n        textStyle: [styles.textTitleHeader400, {\n          textAlign: \"center\"\n        }],\n        width: cellIndex === 0 ? 30 : cellIndex === 1 ? 150 : 75,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }\n      });\n    }));\n  })))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      onConfirm();\n    },\n    style: {\n      marginVertical: 32,\n      width: 150,\n      alignSelf: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }\n  }, React.createElement(LinearGradient, {\n    style: styles.buttonSend,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }, isDone ? \"Confirm\" : \"Next\"))), React.createElement(ModalSendEmail, {\n    title: \"OVERTIME (OT) RECORD\",\n    visible: modalSendMail,\n    onRequestClose: function onRequestClose() {\n      setModalSendMail(!modalSendMail);\n    },\n    onRequestSend: function onRequestSend(description, email) {\n      handleSendMail(description, email);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }\n  }), React.createElement(ModalCancel, {\n    visible: modalCancel,\n    onRequestClose: function onRequestClose() {\n      setModalCancel(!modalCancel);\n    },\n    onRequestSend: function onRequestSend(reason) {\n      updateOverTimeOTRecordByDay(idScheduleNotExtra, reason, false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }\n  }), React.createElement(SendSuccess, {\n    visible: sent === \"success\",\n    onRequestClose: function onRequestClose() {\n      return setSent(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }), React.createElement(SendFail, {\n    visible: sent === \"fail\",\n    onRequestClose: function onRequestClose() {\n      return setSent(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }\n  }), React.createElement(ModalReason, {\n    content: valueModalReason,\n    visible: modalReason,\n    onRequestClose: function onRequestClose() {\n      setModalReason(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }\n  }), isLoading && React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default OvertimeRecord;\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 15\n  },\n  center: {\n    paddingVertical: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleHeader: {\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.colorLine\n  },\n  textTitleHeader: {\n    color: colors.colorText,\n    fontWeight: \"500\",\n    fontSize: 14\n  },\n  row_between: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  containerPicker: {\n    marginTop: 10,\n    backgroundColor: colors.backgroundApp,\n    paddingBottom: 15\n  },\n  pickerModal: {\n    borderRadius: 4,\n    padding: 12,\n    marginVertical: 16,\n    backgroundColor: colors.grayLight,\n    color: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  },\n  textButton: {\n    fontSize: 16,\n    color: colors.colorText\n  },\n  buttonSend: {\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  radius_top: {\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4\n  },\n  textTitleHeader400: {\n    color: colors.colorText,\n    fontWeight: \"400\",\n    fontSize: 14\n  },\n  textDate: {\n    marginTop: 13,\n    marginLeft: 8,\n    marginBottom: 20\n  },\n  textGray: {\n    color: colors.gray,\n    fontWeight: \"400\",\n    fontSize: 14\n  },\n  iconChecked: {\n    borderRadius: 4,\n    width: 20,\n    height: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  styleRowTable: {\n    height: 36\n  },\n  containerModal: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modal: {\n    backgroundColor: \"#414141\",\n    borderRadius: 4,\n    padding: 15,\n    width: \"90%\"\n  },\n  headerModal: {\n    borderBottomWidth: 0.5,\n    borderBottomColor: colors.colorLine,\n    paddingBottom: 15,\n    alignItems: \"center\"\n  },\n  textMain: {\n    color: \"#DAB451\",\n    fontWeight: \"500\",\n    alignItems: \"center\"\n  },\n  bodyInputModal: {\n    marginTop: 15\n  },\n  textTitleModal: {\n    fontWeight: \"600\",\n    color: colors.gray,\n    fontSize: 12,\n    marginBottom: 4\n  },\n  inputModal: {\n    borderRadius: 4,\n    backgroundColor: \"#303030\",\n    paddingHorizontal: 10,\n    color: colors.colorText,\n    paddingVertical: 8\n  },\n  styleModalPicker: {\n    position: \"absolute\",\n    backgroundColor: \"#636363\",\n    top: 115,\n    right: 15,\n    zIndex: 9,\n    borderRadius: 4,\n    paddingHorizontal: 12,\n    paddingTop: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/StaffManagement/Reports/OvertimeRecord.tsx"],"names":["React","useState","useEffect","LinearGradient","colors","Ionicons","Table","Row","TableWrapper","Cell","ModalSendEmail","ModalCancel","SendSuccess","SendFail","ModalReason","ReportStaffService","MailStaffService","Loading","useSelector","getDayInWeekArray","moment","widthArr","OvertimeRecord","reports","state","staff","record_area","dimensions","Dimensions","get","windowHeight","height","windowWidth","width","dataTable","tableHead","tableHead1","tableHead2","Date","fromDate","format","setDate","endDate","getDate","tableHead3","tableHead0","isLoading","setIsLoading","pickerValue","setPickerValue","isDone","setDone","modalVisible","setModalVisible","modalSendMail","setModalSendMail","modalCancel","setModalCancel","sent","setSent","statusSent","setStatusSent","modalReason","setModalReason","valueModalReason","setValueModalReason","staffsTable","setStaffsTable","staffsTableDone","setStaffsTableDone","idScheduleNotExtra","setIdScheduleNotExtra","currentDate","setCurrentDate","handleSendMail","description","email","sendMailOverTimeOTRecord","res","isSuccess","data","showCell","id","alignItems","styles","iconChecked","backgroundColor","flexDirection","justifyContent","updateOverTimeOTRecordByDay","marginRight","showCellDone","index","checkNotExtra","undefined","notExtra","textTitleHeader400","hoursOTRank","widthCellDone","onPick","value","onConfirm","getDay","_date","handleDayInfo","listDays","result","map","item","findIndex","day","rank","loadOverTimeOTRecordInfo","getOverTimeOTRecordInfo","_data","length","push","info","headChart","staffName","staffCode","staffId","dutyName","bodyChart","dayInfo","footChart","hoursOT","dayNumber","loadOverTimeOTRecord","getOverTimeOTRecord","workingScheduleId","charts","manager","reason","check","WorkingScheduleId","NotExtra","CheckNotExtra","container","titleHeader","textTitleHeader","textAlign","pickerModal","row_between","name","styleModalPicker","code","marginBottom","borderRadius","borderTopLeftRadius","borderTopRightRadius","concat","paddingLeft","textGray","cellData","cellIndex","marginLeft","center","radius_top","textDate","borderColor","rowData","marginVertical","alignSelf","buttonSend","textButton","StyleSheet","create","paddingHorizontal","paddingVertical","borderBottomWidth","borderBottomColor","colorLine","color","colorText","fontWeight","fontSize","containerPicker","marginTop","backgroundApp","paddingBottom","padding","grayLight","shadowColor","shadowOffset","gray","styleRowTable","containerModal","flex","modal","headerModal","textMain","bodyInputModal","textTitleModal","inputModal","position","top","right","zIndex","paddingTop","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableWithoutFeedback,\r\n  Modal,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Dimensions,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Icons, Images } from \"../../../../../assets\";\r\nimport { colors } from \"../../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { Table, Row, TableWrapper, Cell } from \"react-native-table-component\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport ModalSendEmail from \"../../../../../components/ModalSendEmail\";\r\nimport ModalCancel from \"../../../../../components/management/items/modalCancel\";\r\nimport SendSuccess from \"../../../../../components/modalNotification/SendSuccess\";\r\nimport SendFail from \"../../../../../components/modalNotification/SendFail\";\r\nimport ModalReason from \"../../../../../components/modalNotification/ModalReason\";\r\nimport { ReportStaffService, MailStaffService } from \"../../../../../netWorking/staffService\";\r\nimport Loading from \"../../../../../components/dialogs/Loading\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../../../../redux/reducers\";\r\nimport { IPicker, IOverTimeOTRecord, IOverTimeOTRecordInfo } from \"../../../../../models/staffModel\";\r\nimport { getDayInWeekArray } from \"../../../../../components/management/utils\";\r\nimport moment from \"moment\";\r\nconst widthArr = [150, 100, 200, 30, 30, 30, 30, 30, 30, 30, 30, 150, 150];\r\nconst OvertimeRecord = () => {\r\n  const reports = useSelector((state: RootState) => state.reports);\r\n  const { record_area } = useSelector((state: RootState) => state.staff);\r\n  const dimensions = Dimensions.get(\"window\");\r\n  const windowHeight = dimensions.height;\r\n  const windowWidth = dimensions.width;\r\n\r\n  const dataTable = {\r\n    tableHead: [\"ID\", \"FULL NAME\", \"Hours OT\", \"MANAGER\", \"EXTRA\"],\r\n    tableHead1: [\"FULL NAME\", \"E.Code\", \"Role\"],\r\n    tableHead2: getDayInWeekArray(\r\n      new Date(moment(reports.fromDate).format(\"YYYY-MM-DD\")),\r\n      new Date(new Date().setDate(new Date(moment(reports.endDate).format(\"YYYY-MM-DD\")).getDate() + 1))\r\n    ),\r\n    tableHead3: [\"TOT OT BY HOUR\", \"TOT OT BY DAYS\"],\r\n    tableHead0: [\"\", \"\", \"\", \"Mon\", \"\", \"\", \"\", \"\", \"\", \"\", \"Mon\", \"\", \"\"],\r\n  };\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [pickerValue, setPickerValue] = useState(record_area[0]);\r\n  const [isDone, setDone] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [modalSendMail, setModalSendMail] = useState(false);\r\n  const [modalCancel, setModalCancel] = useState(false);\r\n  const [sent, setSent] = useState(\"\");\r\n  const [statusSent, setStatusSent] = useState(\"\");\r\n  const [modalReason, setModalReason] = useState(false);\r\n  const [valueModalReason, setValueModalReason] = useState(\"\");\r\n  const [staffsTable, setStaffsTable] = useState([]);\r\n  const [staffsTableDone, setStaffsTableDone] = useState([]);\r\n  const [idScheduleNotExtra, setIdScheduleNotExtra] = useState(0);\r\n  const [currentDate, setCurrentDate] = useState(reports.fromDate);\r\n\r\n  const handleSendMail = async (description: string, email: string) => {\r\n    setModalSendMail(!modalSendMail);\r\n    setIsLoading(true);\r\n    const res = await MailStaffService.sendMailOverTimeOTRecord(description, email, reports.fromDate, reports.endDate);\r\n    setIsLoading(false);\r\n    if (res.isSuccess == 1 && res.data) {\r\n      setSent(\"success\");\r\n      setStatusSent(\"Email sent successfully!\");\r\n    } else {\r\n      setSent(\"fail\");\r\n      setStatusSent(\"Email sent failed!\");\r\n    }\r\n  };\r\n\r\n  const showCell = (data: any, id: number) => {\r\n    switch (data) {\r\n      case true:\r\n        return (\r\n          <View style={{ alignItems: \"center\" }}>\r\n            <View style={[styles.iconChecked, { backgroundColor: \"#76D146\" }]}>\r\n              <Ionicons name={\"checkmark\"} size={14} color=\"#fff\"></Ionicons>\r\n            </View>\r\n          </View>\r\n        );\r\n      case false:\r\n        return (\r\n          <View style={{ alignItems: \"center\" }}>\r\n            <View style={[styles.iconChecked, { backgroundColor: \"#FF3232\" }]}>\r\n              <Ionicons name={\"close\"} size={14} color=\"#fff\"></Ionicons>\r\n            </View>\r\n          </View>\r\n        );\r\n      case null:\r\n        return (\r\n          <View\r\n            style={{\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => updateOverTimeOTRecordByDay(id, null, true)}\r\n              style={[styles.iconChecked, { backgroundColor: \"#76D146\", marginRight: 8 }]}\r\n            >\r\n              <Ionicons name={\"checkmark\"} size={14} color=\"#fff\"></Ionicons>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setModalCancel(!modalCancel);\r\n                setIdScheduleNotExtra(id);\r\n              }}\r\n              style={[styles.iconChecked, { backgroundColor: \"#FF3232\" }]}\r\n            >\r\n              <Ionicons name={\"close\"} size={14} color=\"#fff\"></Ionicons>\r\n            </TouchableOpacity>\r\n          </View>\r\n        );\r\n\r\n      default:\r\n        return data;\r\n    }\r\n  };\r\n  const showCellDone = (data: any, index: number) => {\r\n    if (index > 2 && index < 11) {\r\n      if (typeof data === \"object\") {\r\n        return (\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              data.checkNotExtra === false ? setModalReason(true) : undefined;\r\n              setValueModalReason(data.notExtra);\r\n            }}\r\n            style={{}}\r\n          >\r\n            <View style={[styles.iconChecked, { backgroundColor: !data.checkNotExtra ? \"#FF3232\" : \"#76D146\" }]}>\r\n              <Text style={styles.textTitleHeader400}>{data.hoursOTRank}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        );\r\n      } else {\r\n        return data;\r\n      }\r\n    }\r\n    return data;\r\n  };\r\n  const widthCellDone = (index: number) => {\r\n    switch (index) {\r\n      case 0:\r\n        return 150;\r\n      case 1:\r\n        return 100;\r\n      case 2:\r\n        return 200;\r\n      case 11:\r\n        return 150;\r\n      case 12:\r\n        return 150;\r\n\r\n      default:\r\n        return 30;\r\n    }\r\n  };\r\n  const onPick = (value: IPicker) => {\r\n    setPickerValue(value);\r\n    setModalVisible(false);\r\n  };\r\n  const onConfirm = () => {\r\n    if (isDone) {\r\n      setModalSendMail(!modalSendMail);\r\n    } else {\r\n      if (new Date(moment(currentDate).format(\"YYYY-MM-DD\")).getDay() === 0) {\r\n        setDone(!isDone);\r\n      } else {\r\n        let _date = new Date(moment(currentDate).format(\"YYYY-MM-DD\"))\r\n        setCurrentDate(moment(_date.setDate(_date.getDate() + 1)).format(\"YYYY-MM-DD 00:00\"))\r\n      }\r\n    }\r\n  };\r\n  const handleDayInfo = (data: any[]) => {\r\n    const listDays = getDayInWeekArray(\r\n      new Date(moment(reports.fromDate).format(\"YYYY-MM-DD\")),\r\n      new Date(moment(reports.endDate).format(\"YYYY-MM-DD\")),\r\n      \"dddd\"\r\n    );\r\n    const result: any[] = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    data.map(item => {\r\n      let index = listDays.findIndex(day => day === item.rank);\r\n      if (item.checkNotExtra !== null) {\r\n        result[index] = { checkNotExtra: item.checkNotExtra, hoursOTRank: item.hoursOTRank, notExtra: item.notExtra };\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n  const loadOverTimeOTRecordInfo = async () => {\r\n    setIsLoading(true);\r\n    const res = await ReportStaffService.getOverTimeOTRecordInfo(reports.fromDate, reports.endDate, pickerValue.id);\r\n    if (res.isSuccess == 1 && res.data) {\r\n      let _data = [];\r\n      if (res.data.length > 0) {\r\n        res.data.map(item => {\r\n          _data.push({\r\n            info: item,\r\n            headChart: [item.staffName, item.staffCode ?? item.staffId, item.dutyName],\r\n            bodyChart: handleDayInfo(item.dayInfo),\r\n            footChart: [item.hoursOT, item.dayNumber],\r\n          });\r\n        });\r\n      }\r\n      setStaffsTableDone(_data);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const loadOverTimeOTRecord = async () => {\r\n    setIsLoading(true);\r\n    const res = await ReportStaffService.getOverTimeOTRecord(moment(currentDate).format(\"YYYY-MM-DD 00:00\"), pickerValue.id);\r\n    if (res.isSuccess == 1 && res.data) {\r\n      let _data = [];\r\n      if (res.data.length > 0) {\r\n        res.data.map(item => {\r\n          _data.push({\r\n            workingScheduleId: item.workingScheduleId,\r\n            charts: [item.staffId, item.staffName, item.hoursOT, !!item.manager, item.checkNotExtra],\r\n          });\r\n        });\r\n      }\r\n      setStaffsTable(_data);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const updateOverTimeOTRecordByDay = async (id: number, reason: string, check: boolean) => {\r\n    const res = await ReportStaffService.updateOverTimeOTRecordByDay([\r\n      { WorkingScheduleId: id, NotExtra: reason, CheckNotExtra: +check },\r\n    ]);\r\n    if (res.isSuccess == 1 && res.data) {\r\n      loadOverTimeOTRecord();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadOverTimeOTRecord();\r\n  }, [pickerValue, currentDate]);\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      loadOverTimeOTRecordInfo();\r\n    }\r\n  }, [pickerValue, reports.fromDate, reports.endDate, isDone]);\r\n  useEffect(() => {\r\n    setCurrentDate(reports.fromDate)\r\n  }, [reports.fromDate]);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.titleHeader}>\r\n        <Text style={[styles.textTitleHeader, { textAlign: \"center\" }]}>OVERTIME (OT) RECORD</Text>\r\n      </View>\r\n      <TouchableWithoutFeedback\r\n        onPress={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={[styles.pickerModal, styles.row_between]}>\r\n          <Text style={styles.textTitleHeader}>{pickerValue.name}</Text>\r\n          <Ionicons name=\"caret-down\" size={20} color=\"#fff\" />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n      {modalVisible && (\r\n        <View\r\n          style={[\r\n            styles.styleModalPicker,\r\n            {\r\n              width: windowWidth - 30,\r\n            },\r\n          ]}\r\n        >\r\n          {record_area.map(item => {\r\n            return (\r\n              <TouchableOpacity key={`${item.id}${item.code}`} style={{ marginBottom: 15 }} onPress={() => onPick(item)}>\r\n                <Text style={styles.textTitleHeader}>{item.name}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n      )}\r\n      {/* ------------------------ */}\r\n      {isDone ? (\r\n        <ScrollView horizontal style={{ borderRadius: 4 }}>\r\n          <View style={{ backgroundColor: \"#414141\", borderRadius: 4 }}>\r\n            <Table style={{}}>\r\n              <Row\r\n                data={dataTable.tableHead0}\r\n                style={{\r\n                  borderTopLeftRadius: 4,\r\n                  borderTopRightRadius: 4,\r\n                  height: 36,\r\n                  backgroundColor: \"#878787\",\r\n                }}\r\n                widthArr={widthArr}\r\n                textStyle={styles.textTitleHeader400}\r\n              />\r\n              <Row\r\n                data={dataTable.tableHead1.concat(dataTable.tableHead2, dataTable.tableHead3)}\r\n                style={{\r\n                  height: 45,\r\n                  paddingLeft: 10,\r\n                }}\r\n                widthArr={widthArr}\r\n                textStyle={styles.textGray}\r\n              />\r\n              {staffsTableDone.map((item, index) => {\r\n                return (\r\n                  <TableWrapper\r\n                    key={index}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      height: 36,\r\n                      backgroundColor: index % 2 === 0 ? \"#8D7550\" : \"transparent\",\r\n                    }}\r\n                  >\r\n                    {item.headChart.concat(item.bodyChart, item.footChart).map((cellData, cellIndex) => (\r\n                      <Cell\r\n                        key={cellIndex}\r\n                        data={showCellDone(cellData, cellIndex)}\r\n                        textStyle={[\r\n                          styles.textTitleHeader400,\r\n                          {\r\n                            marginLeft: cellIndex === 0 || cellIndex === 1 || cellIndex === 2 ? 10 : 0,\r\n                          },\r\n                          {\r\n                            textAlign: cellIndex === 11 || cellIndex === 12 ? \"center\" : undefined,\r\n                          },\r\n                        ]}\r\n                        width={widthCellDone(cellIndex)}\r\n                      />\r\n                    ))}\r\n                  </TableWrapper>\r\n                  // <Row\r\n                  //   key={index}\r\n                  //   data={item}\r\n                  //   style={[\r\n                  //     styles.styleRowTable,\r\n                  //     index % 2 === 0 && { backgroundColor: \"#8D7550\" },\r\n                  //     { paddingLeft: 10 },\r\n                  //   ]}\r\n                  //   widthArr={widthArr}\r\n                  //   textStyle={[styles.textTitleHeader400, {backgroundColor:'#ff0', alignSelf: 'flex-start'}]}\r\n                  // />\r\n                );\r\n              })}\r\n            </Table>\r\n          </View>\r\n        </ScrollView>\r\n      ) : (\r\n        <View style={{ backgroundColor: \"#414141\", borderRadius: 4 }}>\r\n          <View\r\n            style={[\r\n              styles.center,\r\n              {\r\n                backgroundColor: \"#878787\",\r\n              },\r\n              styles.radius_top,\r\n            ]}\r\n          >\r\n            <Text style={styles.textTitleHeader}>THE LIST OF EMPLOYEE</Text>\r\n          </View>\r\n          <Text style={[styles.textTitleHeader400, styles.textDate]}>{moment(currentDate).format(\"dddd, DD/MM/YYYY\")}</Text>\r\n          <ScrollView horizontal>\r\n            <Table borderStyle={{ borderColor: \"transparent\" }}>\r\n              <Row\r\n                data={dataTable.tableHead}\r\n                style={{ height: 40 }}\r\n                textStyle={[styles.textGray, { textAlign: \"center\" }]}\r\n                widthArr={[30, 150, 75, 75, 75]}\r\n              />\r\n              {staffsTable.map((rowData, index) => (\r\n                <TableWrapper\r\n                  key={index}\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    height: 40,\r\n                    backgroundColor: index % 2 === 0 ? \"#8D7550\" : \"transparent\",\r\n                  }}\r\n                >\r\n                  {rowData.charts.map((cellData, cellIndex) => (\r\n                    <Cell\r\n                      key={cellIndex}\r\n                      data={showCell(cellData, rowData.workingScheduleId)}\r\n                      textStyle={[styles.textTitleHeader400, { textAlign: \"center\" }]}\r\n                      width={cellIndex === 0 ? 30 : cellIndex === 1 ? 150 : 75}\r\n                    />\r\n                  ))}\r\n                </TableWrapper>\r\n              ))}\r\n            </Table>\r\n          </ScrollView>\r\n        </View>\r\n      )}\r\n\r\n      {/* ------------------------ */}\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          onConfirm();\r\n        }}\r\n        style={{ marginVertical: 32, width: 150, alignSelf: \"center\" }}\r\n      >\r\n        <LinearGradient style={styles.buttonSend} colors={[\"#DAB451\", \"#988050\"]}>\r\n          <Text style={styles.textButton}>{isDone ? \"Confirm\" : \"Next\"}</Text>\r\n        </LinearGradient>\r\n      </TouchableOpacity>\r\n      <ModalSendEmail\r\n        title={\"OVERTIME (OT) RECORD\"}\r\n        visible={modalSendMail}\r\n        onRequestClose={() => {\r\n          setModalSendMail(!modalSendMail);\r\n        }}\r\n        onRequestSend={(description, email) => {\r\n          handleSendMail(description, email);\r\n        }}\r\n      ></ModalSendEmail>\r\n      <ModalCancel\r\n        visible={modalCancel}\r\n        onRequestClose={() => {\r\n          setModalCancel(!modalCancel);\r\n        }}\r\n        onRequestSend={reason => {\r\n          updateOverTimeOTRecordByDay(idScheduleNotExtra, reason, false);\r\n        }}\r\n      ></ModalCancel>\r\n      {/* ------------------------------------------------------ */}\r\n      <SendSuccess visible={sent === \"success\"} onRequestClose={() => setSent(\"\")}></SendSuccess>\r\n      <SendFail visible={sent === \"fail\"} onRequestClose={() => setSent(\"\")}></SendFail>\r\n      <ModalReason\r\n        content={valueModalReason}\r\n        visible={modalReason}\r\n        onRequestClose={() => {\r\n          setModalReason(false);\r\n        }}\r\n      ></ModalReason>\r\n      {isLoading && <Loading />}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default OvertimeRecord;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 15,\r\n  },\r\n  center: {\r\n    paddingVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  titleHeader: {\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.colorLine,\r\n  },\r\n  textTitleHeader: {\r\n    color: colors.colorText,\r\n    fontWeight: \"500\",\r\n    fontSize: 14,\r\n  },\r\n  row_between: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  containerPicker: {\r\n    marginTop: 10,\r\n    backgroundColor: colors.backgroundApp,\r\n    paddingBottom: 15,\r\n  },\r\n  pickerModal: {\r\n    borderRadius: 4,\r\n    padding: 12,\r\n    marginVertical: 16,\r\n    backgroundColor: colors.grayLight,\r\n    color: \"#fff\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n  },\r\n  textButton: {\r\n    fontSize: 16,\r\n    color: colors.colorText,\r\n  },\r\n  buttonSend: {\r\n    height: 36,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n\r\n  radius_top: {\r\n    borderTopLeftRadius: 4,\r\n    borderTopRightRadius: 4,\r\n  },\r\n  textTitleHeader400: {\r\n    color: colors.colorText,\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n  textDate: {\r\n    marginTop: 13,\r\n    marginLeft: 8,\r\n    marginBottom: 20,\r\n  },\r\n  textGray: {\r\n    color: colors.gray,\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n\r\n  iconChecked: {\r\n    borderRadius: 4,\r\n    width: 20,\r\n    height: 20,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  styleRowTable: {\r\n    height: 36,\r\n  },\r\n  /// modal\r\n  containerModal: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modal: {\r\n    backgroundColor: \"#414141\",\r\n    borderRadius: 4,\r\n    padding: 15,\r\n    width: \"90%\",\r\n  },\r\n  headerModal: {\r\n    borderBottomWidth: 0.5,\r\n    borderBottomColor: colors.colorLine,\r\n    paddingBottom: 15,\r\n    alignItems: \"center\",\r\n  },\r\n  textMain: {\r\n    color: \"#DAB451\",\r\n    fontWeight: \"500\",\r\n    alignItems: \"center\",\r\n  },\r\n  bodyInputModal: {\r\n    marginTop: 15,\r\n  },\r\n  textTitleModal: {\r\n    fontWeight: \"600\",\r\n    color: colors.gray,\r\n    fontSize: 12,\r\n    marginBottom: 4,\r\n  },\r\n  inputModal: {\r\n    borderRadius: 4,\r\n    backgroundColor: \"#303030\",\r\n    paddingHorizontal: 10,\r\n    color: colors.colorText,\r\n    paddingVertical: 8,\r\n  },\r\n  styleModalPicker: {\r\n    position: \"absolute\",\r\n    backgroundColor: \"#636363\",\r\n    top: 115,\r\n    right: 15,\r\n    zIndex: 9,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 12,\r\n    paddingTop: 20,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}