{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\OnlineSystem\\\\Report.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { colors } from \"../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport DateTimePicker from \"../../../../components/datetimepicker\";\nimport PickerModel from \"../../../../components/picker/PickerModel\";\nimport { Table, Row } from \"react-native-table-component\";\nvar outletModel = [{\n  label: \"Spa\",\n  value: 1\n}, {\n  label: \"Ola Restaurant\",\n  value: 2\n}];\nvar dataTable = {\n  tableHead: [\"Number of uses\", \"Time\", \"Promotion\"],\n  tableData: [[\"12\", \"06:00 AM - 10:00 AM\", \"10\"], [\"12\", \"06:00 AM - 10:00 AM\", \"10\"], [\"12\", \"06:00 AM - 10:00 AM\", \"10\"], [\"12\", \"06:00 AM - 10:00 AM\", \"10\"]]\n};\n\nvar Report = function Report(props) {\n  var dataReports = props.route.params;\n\n  var _useState = useState(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      outlet = _useState2[0],\n      setOutlet = _useState2[1];\n\n  var toDate = new Date();\n\n  var _useState3 = useState(moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD 00:00\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromDateTime = _useState4[0],\n      setFromDateTime = _useState4[1];\n\n  var _useState5 = useState(moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD 23:59\")),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endDateTime = _useState6[0],\n      setEndDateTime = _useState6[1];\n\n  var onchangeOutlet = function onchangeOutlet(data) {\n    return _regeneratorRuntime.async(function onchangeOutlet$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setOutlet(data);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var dimensions = Dimensions.get(\"window\");\n  var windowHeight = dimensions.height;\n  var windowWidth = dimensions.width;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(PickerModel, {\n    data: outletModel,\n    defaultValue: \"Ola Restaurant\",\n    onSelectedValue: function onSelectedValue(value) {\n      onchangeOutlet(value.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(DateTimePicker, {\n    onSubmitFromDate: function onSubmitFromDate(date) {\n      return setFromDateTime(date);\n    },\n    onSubmitEndDate: function onSubmitEndDate(date) {\n      return setEndDateTime(date);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingHorizontal: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 17,\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.titleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      textAlign: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, dataReports.data.screenName))), dataReports.data.reports.map(function (item) {\n    return React.createElement(ScrollView, {\n      horizontal: true,\n      style: {\n        borderRadius: 4,\n        marginBottom: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, item.child.length > 0 && React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        props.navigation.navigate(\"ReportOnlineSystem\", {\n          title: \"OPERATION - ONLINE SYSTEM\",\n          data: {\n            screenName: item.title,\n            reports: item.child\n          }\n        });\n      },\n      style: {\n        position: \"absolute\",\n        zIndex: 10,\n        right: 10,\n        top: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, React.createElement(Ionicons, {\n      name: \"caret-forward\",\n      size: 20,\n      color: \"#fff\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        backgroundColor: \"#414141\",\n        borderRadius: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, React.createElement(Table, {\n      style: {\n        width: windowWidth - 30\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, React.createElement(Row, {\n      data: [item.title],\n      style: {\n        borderTopLeftRadius: 4,\n        borderTopRightRadius: 4,\n        height: 36,\n        backgroundColor: \"#878787\"\n      },\n      flexArr: [1],\n      textStyle: [styles.text, {\n        alignSelf: \"center\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), React.createElement(Row, {\n      data: item.data[0].length === 2 ? [\"Number of uses\", \"Time\"] : [\"Number of uses\", \"Time\", \"Promotion\"],\n      style: {\n        borderTopLeftRadius: 4,\n        borderTopRightRadius: 4,\n        height: 36,\n        backgroundColor: \"#414141\",\n        paddingLeft: 10,\n        alignItems: \"center\"\n      },\n      flexArr: [1, 2, 1],\n      textStyle: [styles.text12, {\n        alignSelf: \"center\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }), item.data.map(function (report, index) {\n      return React.createElement(Row, {\n        key: index,\n        data: report,\n        style: [styles.styleRowTable, index % 2 === 0 && {\n          backgroundColor: \"#8D7550\"\n        }, {\n          paddingLeft: 10\n        }],\n        flexArr: [1, 2, 1],\n        textStyle: [styles.textTitleHeader400, {\n          alignSelf: \"center\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      });\n    }))));\n  }))));\n};\n\nexport default Report;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  text: {\n    color: colors.colorText,\n    fontSize: 14,\n    fontWeight: \"500\"\n  },\n  titleHeader: {\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.colorLine\n  },\n  textTitleHeader400: {\n    color: colors.colorText,\n    fontWeight: \"400\",\n    fontSize: 14\n  },\n  text12: {\n    color: colors.gray,\n    fontWeight: \"400\",\n    fontSize: 12\n  },\n  styleRowTable: {\n    height: 36,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/OnlineSystem/Report.tsx"],"names":["React","useState","colors","Ionicons","moment","DateTimePicker","PickerModel","Table","Row","outletModel","label","value","dataTable","tableHead","tableData","Report","props","dataReports","route","params","outlet","setOutlet","toDate","Date","setDate","getDate","format","fromDateTime","setFromDateTime","endDateTime","setEndDateTime","onchangeOutlet","data","dimensions","Dimensions","get","windowHeight","height","windowWidth","width","styles","container","line","date","paddingHorizontal","marginBottom","titleHeader","text","textAlign","screenName","reports","map","item","borderRadius","child","length","navigation","navigate","title","position","zIndex","right","top","backgroundColor","borderTopLeftRadius","borderTopRightRadius","alignSelf","paddingLeft","alignItems","text12","report","index","styleRowTable","textTitleHeader400","StyleSheet","create","flex","backgroundApp","backgroundTab","color","colorText","fontSize","fontWeight","paddingVertical","borderBottomWidth","borderBottomColor","colorLine","gray"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { TabManageParamList } from \"../../../../types\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  KeyboardTypeOptions,\r\n  ImageProps,\r\n  Platform,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { colors } from \"../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport moment from \"moment\";\r\nimport DateTimePicker from \"../../../../components/datetimepicker\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Icons, Images } from \"../../../../assets\";\r\nimport PickerModel from \"../../../../components/picker/PickerModel\";\r\nimport { Table, Row } from \"react-native-table-component\";\r\nexport interface Props {\r\n  route: RouteProp<TabManageParamList, \"ReportOnlineSystem\">;\r\n  navigation: StackNavigationProp<TabManageParamList>;\r\n}\r\nconst outletModel = [\r\n  { label: \"Spa\", value: 1 },\r\n  { label: \"Ola Restaurant\", value: 2 },\r\n];\r\nconst dataTable = {\r\n  tableHead: [\"Number of uses\", \"Time\", \"Promotion\"],\r\n  tableData: [\r\n    [\"12\", \"06:00 AM - 10:00 AM\", \"10\"],\r\n    [\"12\", \"06:00 AM - 10:00 AM\", \"10\"],\r\n    [\"12\", \"06:00 AM - 10:00 AM\", \"10\"],\r\n    [\"12\", \"06:00 AM - 10:00 AM\", \"10\"],\r\n  ],\r\n};\r\nconst Report = (props: Props) => {\r\n  const dataReports = props.route.params;\r\n  const [outlet, setOutlet] = useState(2);\r\n  const toDate = new Date();\r\n  const [fromDateTime, setFromDateTime] = useState(\r\n    moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD 00:00\")\r\n  );\r\n  const [endDateTime, setEndDateTime] = useState(\r\n    moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD 23:59\")\r\n  );\r\n\r\n  const onchangeOutlet = async (data: any) => {\r\n    setOutlet(data);\r\n  };\r\n\r\n  const dimensions = Dimensions.get(\"window\");\r\n  const windowHeight = dimensions.height;\r\n  const windowWidth = dimensions.width;\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        <PickerModel\r\n          data={outletModel}\r\n          defaultValue=\"Ola Restaurant\"\r\n          onSelectedValue={value => {\r\n            onchangeOutlet(value.value);\r\n          }}\r\n        ></PickerModel>\r\n        <View style={styles.line}></View>\r\n        <DateTimePicker\r\n          onSubmitFromDate={date => setFromDateTime(date)}\r\n          onSubmitEndDate={date => setEndDateTime(date)}\r\n        ></DateTimePicker>\r\n\r\n        <View style={{ paddingHorizontal: 15 }}>\r\n          <View style={{ paddingHorizontal: 17, marginBottom: 10 }}>\r\n            <View style={styles.titleHeader}>\r\n              <Text style={[styles.text, { textAlign: \"center\" }]}>\r\n                {dataReports.data.screenName}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          {dataReports.data.reports.map(item => {\r\n            return (\r\n              <ScrollView\r\n                horizontal\r\n                style={{ borderRadius: 4, marginBottom: 15 }}\r\n              >\r\n                {item.child.length > 0 && (\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      props.navigation.navigate(\"ReportOnlineSystem\", {\r\n                        title: \"OPERATION - ONLINE SYSTEM\",\r\n                        data: {\r\n                          screenName: item.title,\r\n                          reports: item.child,\r\n                        },\r\n                      });\r\n                    }}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      zIndex: 10,\r\n                      right: 10,\r\n                      top: 8,\r\n                    }}\r\n                  >\r\n                    <Ionicons name=\"caret-forward\" size={20} color=\"#fff\" />\r\n                  </TouchableOpacity>\r\n                )}\r\n\r\n                <View style={{ backgroundColor: \"#414141\", borderRadius: 4 }}>\r\n                  <Table style={{ width: windowWidth - 30 }}>\r\n                    <Row\r\n                      data={[item.title]}\r\n                      style={{\r\n                        borderTopLeftRadius: 4,\r\n                        borderTopRightRadius: 4,\r\n                        height: 36,\r\n                        backgroundColor: \"#878787\",\r\n                      }}\r\n                      flexArr={[1]}\r\n                      textStyle={[styles.text, { alignSelf: \"center\" }]}\r\n                    />\r\n                    <Row\r\n                      data={\r\n                        item.data[0].length === 2\r\n                          ? [\"Number of uses\", \"Time\"]\r\n                          : [\"Number of uses\", \"Time\", \"Promotion\"]\r\n                      }\r\n                      style={{\r\n                        borderTopLeftRadius: 4,\r\n                        borderTopRightRadius: 4,\r\n                        height: 36,\r\n                        backgroundColor: \"#414141\",\r\n                        paddingLeft: 10,\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flexArr={item.data[0].length === 2 ? [1, 2] : [1, 2, 1]}\r\n                      flexArr={[1, 2, 1]}\r\n                      textStyle={[styles.text12, { alignSelf: \"center\" }]}\r\n                    />\r\n                    {item.data.map((report, index) => {\r\n                      return (\r\n                        <Row\r\n                          key={index}\r\n                          data={report}\r\n                          style={[\r\n                            styles.styleRowTable,\r\n                            index % 2 === 0 && { backgroundColor: \"#8D7550\" },\r\n                            { paddingLeft: 10 },\r\n                          ]}\r\n                          flexArr={[1, 2, 1]}\r\n                          textStyle={[\r\n                            styles.textTitleHeader400,\r\n                            {  alignSelf: \"center\" },\r\n                          ]}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Table>\r\n                </View>\r\n              </ScrollView>\r\n            );\r\n          })}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n  line: {\r\n    height: 10,\r\n    backgroundColor: colors.backgroundTab,\r\n  },\r\n  text: {\r\n    color: colors.colorText,\r\n    fontSize: 14,\r\n    fontWeight: \"500\",\r\n  },\r\n  titleHeader: {\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.colorLine,\r\n  },\r\n  textTitleHeader400: {\r\n    color: colors.colorText,\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n  text12: {\r\n    color: colors.gray,\r\n    fontWeight: \"400\",\r\n    fontSize: 12,\r\n  },\r\n  styleRowTable: {\r\n    height: 36,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}