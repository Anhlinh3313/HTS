{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\Tabreport\\\\numberOfTc.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { colors } from \"../../../utils/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport DateTimePicker from \"../../../components/datetimepicker\";\nimport PickerModel from \"../../../components/picker/PickerModel\";\nimport ModalSendEmail from \"../../../components/management/items/modalSendEmail\";\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\nimport SendFail from \"../../../components/modalNotification/SendFail\";\nimport { Table, Row, Cell } from \"react-native-table-component\";\nimport { getMonday } from \"../../../components/generalConvert/conVertMonDay\";\nimport { ReportService } from \"../../../netWorking/SpeedposService\";\nimport DialogAwait from \"../../../components/dialogs/Loading\";\nexport default function numberOfTc() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var toDate = new Date();\n\n  var _useState3 = useState(moment(getMonday(toDate)).format(\"YYYY-MM-DD 00:00\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromDateTime = _useState4[0],\n      setFromDateTime = _useState4[1];\n\n  var _useState5 = useState(moment(new Date().setDate(getMonday(toDate).getDate() + 6)).format(\"YYYY-MM-DD 23:59\")),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endDateTime = _useState6[0],\n      setEndDateTime = _useState6[1];\n\n  var _useState7 = useState(moment(getMonday(toDate)).format(\"YYYY-MM-DD\")),\n      _useState8 = _slicedToArray(_useState7, 2),\n      monDay = _useState8[0],\n      setMonDay = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalSendMail = _useState10[0],\n      setModalSendMail = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sentStatus = _useState12[0],\n      setSentStatus = _useState12[1];\n\n  var model = {};\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      checKLoadDefault = _useState14[0],\n      setChecKLoadDefault = _useState14[1];\n\n  var tableNumberOfTC = [];\n\n  var _useState15 = useState(tableNumberOfTC),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataNumberOfTC = _useState16[0],\n      setNumberOfTC = _useState16[1];\n\n  var _useState17 = useState(moment(getMonday(toDate)).format(\"YYYY-MM-DD 00:00\")),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dateSendMail = _useState18[0],\n      setDateSendMail = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      totalSale = _useState20[0],\n      setTotalSale = _useState20[1];\n\n  var handleSendMail = function handleSendMail() {\n    setModalSendMail(!modalSendMail);\n    setSentStatus(\"success\");\n  };\n\n  var _useState21 = useState(2),\n      _useState22 = _slicedToArray(_useState21, 2),\n      outlet = _useState22[0],\n      setoutlet = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      droplistOutlet = _useState24[0],\n      setDroplistOutlet = _useState24[1];\n\n  var onchangeOutlet = function onchangeOutlet(data) {\n    return _regeneratorRuntime.async(function onchangeOutlet$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setoutlet(data);\n            setDroplistOutlet(data);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var dataTable = {\n    tableHead: [\"Item\", moment(monDay).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 1)).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 2)).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 3)).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 4)).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 5)).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 6)).format(\"dddd[\\n](DD-MM-YYYY)\")],\n    widthArr: [150, 165, 165]\n  };\n\n  var loadnumberOfTc = function loadnumberOfTc(dateTimeFrom) {\n    var res, data, datamap, total;\n    return _regeneratorRuntime.async(function loadnumberOfTc$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsLoading(true);\n            model.DateTime = dateTimeFrom;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(ReportService.getNumberOfTC(model));\n\n          case 4:\n            res = _context2.sent;\n            data = [];\n            datamap = [];\n            total = 0;\n\n            if (res.isSuccess == 1) {\n              data = res.data;\n              setNumberOfTC(res.data);\n              datamap = res.data;\n              datamap.map(function (map) {\n                total += map.total;\n              });\n              setTotalSale(total);\n            }\n\n            setChecKLoadDefault(false);\n            setIsLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var OnchangeFromDateTime = function OnchangeFromDateTime(date) {\n    var dateTime = new Date(date);\n    var fromDate = moment(getMonday(dateTime)).format(\"YYYY-MM-DD 00:00\");\n    var toDate = moment(dateTime.setDate(getMonday(dateTime).getDate() + 6)).format(\"YYYY-MM-DD 23:59\");\n    var monDay = moment(getMonday(dateTime)).format(\"YYYY-MM-DD\");\n    setDateSendMail(fromDate);\n    setMonDay(monDay);\n    setFromDateTime(fromDate);\n    setEndDateTime(toDate);\n    loadnumberOfTc(fromDate);\n  };\n\n  useEffect(function () {\n    if (checKLoadDefault) {\n      loadnumberOfTc(fromDateTime);\n    }\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, React.createElement(PickerModel, {\n    defaultValue: \"Ola Restaurant\",\n    onSelectedValue: function onSelectedValue(value) {\n      onchangeOutlet(value.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginLeft: 15,\n      fontStyle: \"normal\",\n      fontWeight: \"600\",\n      fontSize: 12,\n      lineHeight: 18,\n      color: \"#A4A4A4\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Weekly Display - Choose a day to start\")), React.createElement(DateTimePicker, {\n    onSubmitFromDate: function onSubmitFromDate(date) {\n      return OnchangeFromDateTime(date);\n    },\n    onSubmitEndDate: function onSubmitEndDate(date) {\n      return setEndDateTime(date);\n    },\n    isShowTime: false,\n    checkkNotEndDate: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), isLoading ? React.createElement(DialogAwait, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 20\n    }\n  }) : React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingVertical: 15,\n      paddingHorizontal: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"#414141\",\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, React.createElement(Table, {\n    style: {\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, React.createElement(Row, {\n    data: dataTable.tableHead,\n    style: {\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      height: 60,\n      backgroundColor: \"#878787\",\n      paddingLeft: 0\n    },\n    textStyle: [styles.text, {\n      textAlign: \"center\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), dataNumberOfTC.map(function (item, indexTable) {\n    var _item$data;\n\n    return React.createElement(View, {\n      key: indexTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, React.createElement(Row, {\n      data: [item.name],\n      style: [styles.styleRowTable, {\n        backgroundColor: \"#17151C\"\n      }, {\n        paddingLeft: 10\n      }],\n      flexArr: [1],\n      textStyle: [styles.text600, {\n        backgroundColor: \"#ff0\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }), React.createElement(Table, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }, (_item$data = item.data) == null ? void 0 : _item$data.map(function (row, indexdata) {\n      var _row$dayData;\n\n      return React.createElement(View, {\n        key: indexdata,\n        style: [{\n          flexDirection: 'row',\n          height: 50\n        }, indexdata % 2 == 0 ? {\n          backgroundColor: '#8D7550'\n        } : {}],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }, React.createElement(Cell, {\n        key: 0,\n        data: row.prodName ? row.prodName : \"---\",\n        style: {\n          width: dataTable.widthArr[0]\n        },\n        textStyle: styles.textRowTable,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 31\n        }\n      }), (_row$dayData = row.dayData) == null ? void 0 : _row$dayData.map(function (row, indexDay) {\n        return React.createElement(Cell, {\n          key: indexDay,\n          data: row.countProdNum ? row.countProdNum : \"---\",\n          style: {\n            width: dataTable.widthArr[1]\n          },\n          textStyle: styles.textRowTable,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 35\n          }\n        });\n      }));\n    })), React.createElement(Table, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        height: 50\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, React.createElement(Cell, {\n      key: 0,\n      data: \"Total\",\n      style: {\n        width: dataTable.widthArr[0]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 27\n      }\n    }), React.createElement(Cell, {\n      key: 1,\n      data: item.total ? item.total : 0,\n      style: {\n        width: dataTable.widthArr[1]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 27\n      }\n    }))));\n  }), React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      height: 50,\n      backgroundColor: '#8D7550'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, React.createElement(Cell, {\n    key: 0,\n    data: \"Total sale\",\n    style: {\n      width: dataTable.widthArr[0]\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }), React.createElement(Cell, {\n    key: 1,\n    data: totalSale,\n    style: {\n      width: dataTable.widthArr[1]\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }))))))), React.createElement(View, {\n    style: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingVertical: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    style: styles.buttonSubmit,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableHighlight, {\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      setModalSendMail(!modalSendMail);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 36,\n      width: 150,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      textAlign: \"center\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, \"Send\"))))), React.createElement(ModalSendEmail, {\n    title: \"Number Of TC (Item)\",\n    visible: modalSendMail,\n    dateTime: dateSendMail,\n    isPickType: true,\n    onRequestClose: function onRequestClose() {\n      setModalSendMail(!modalSendMail);\n    },\n    onRequestSend: function onRequestSend() {\n      handleSendMail();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }), React.createElement(SendSuccess, {\n    visible: sentStatus === \"success\",\n    onRequestClose: function onRequestClose() {\n      return setSentStatus(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }), React.createElement(SendFail, {\n    visible: sentStatus === \"fail\",\n    onRequestClose: function onRequestClose() {\n      return setSentStatus(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  buttonSubmit: {\n    height: 36,\n    width: 150,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: colors.white\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: \"400\",\n    color: colors.white\n  },\n  text600: {\n    fontSize: 14,\n    fontWeight: \"600\",\n    color: colors.white\n  },\n  styleRowTable: {\n    height: 36\n  },\n  textRowTable: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '400',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/Tabreport/numberOfTc.tsx"],"names":["React","useEffect","useState","moment","colors","LinearGradient","DateTimePicker","PickerModel","ModalSendEmail","SendSuccess","SendFail","Table","Row","Cell","getMonday","ReportService","DialogAwait","numberOfTc","isLoading","setIsLoading","toDate","Date","format","fromDateTime","setFromDateTime","setDate","getDate","endDateTime","setEndDateTime","monDay","setMonDay","modalSendMail","setModalSendMail","sentStatus","setSentStatus","model","checKLoadDefault","setChecKLoadDefault","tableNumberOfTC","dataNumberOfTC","setNumberOfTC","dateSendMail","setDateSendMail","totalSale","setTotalSale","handleSendMail","outlet","setoutlet","droplistOutlet","setDroplistOutlet","onchangeOutlet","data","dataTable","tableHead","widthArr","loadnumberOfTc","dateTimeFrom","DateTime","getNumberOfTC","res","datamap","total","isSuccess","map","OnchangeFromDateTime","date","dateTime","fromDate","styles","container","value","marginLeft","fontStyle","fontWeight","fontSize","lineHeight","color","line","flex","paddingVertical","paddingHorizontal","backgroundColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","height","paddingLeft","text","textAlign","item","indexTable","name","styleRowTable","text600","row","indexdata","flexDirection","prodName","width","textRowTable","dayData","indexDay","countProdNum","justifyContent","alignItems","buttonSubmit","yellowishbrown","title","StyleSheet","create","backgroundApp","backgroundTab","white"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAQA,SACEC,SADF,EAEEC,QAFF,QAGO,OAHP;AAIA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AACA,SACEC,KADF,EAEEC,GAFF,EAGEC,IAHF,QAIO,8BAJP;AAKA,SAASC,SAAT;AAEA,SAASC,aAAT;AAGA,OAAOC,WAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,kBAAkCf,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOgB,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,MAAM,GAAG,IAAIC,IAAJ,EAAf;;AACA,mBAAwCnB,QAAQ,CAC9CC,MAAM,CAACW,SAAS,CAACM,MAAD,CAAV,CAAN,CAA0BE,MAA1B,CAAiC,kBAAjC,CAD8C,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAGA,mBAAsCtB,QAAQ,CAC5CC,MAAM,CAAC,IAAIkB,IAAJ,GAAWI,OAAX,CAAmBX,SAAS,CAACM,MAAD,CAAT,CAAkBM,OAAlB,KAA8B,CAAjD,CAAD,CAAN,CAA4DJ,MAA5D,CACE,kBADF,CAD4C,CAA9C;AAAA;AAAA,MAAOK,WAAP;AAAA,MAAoBC,cAApB;;AAKA,mBAA4B1B,QAAQ,CAClCC,MAAM,CAACW,SAAS,CAACM,MAAD,CAAV,CAAN,CAA0BE,MAA1B,CAAiC,YAAjC,CADkC,CAApC;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AAGA,mBAA0C5B,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAO6B,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAoC9B,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAO+B,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAIC,KAAsB,GAAG,EAA7B;;AAEA,oBAAgDjC,QAAQ,CAAC,IAAD,CAAxD;AAAA;AAAA,MAAOkC,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,MAAMC,eAAuC,GAAG,EAAhD;;AACA,oBAAwCpC,QAAQ,CAACoC,eAAD,CAAhD;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,aAAvB;;AAEA,oBAAwCtC,QAAQ,CAC9CC,MAAM,CAACW,SAAS,CAACM,MAAD,CAAV,CAAN,CAA0BE,MAA1B,CAAiC,kBAAjC,CAD8C,CAAhD;AAAA;AAAA,MAAOmB,YAAP;AAAA,MAAqBC,eAArB;;AAIA,oBAAkCxC,QAAQ,CAAC,CAAD,CAA1C;AAAA;AAAA,MAAOyC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3Bb,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAG,IAAAA,aAAa,CAAC,SAAD,CAAb;AACD,GAHD;;AAIA,oBAA4BhC,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAO4C,MAAP;AAAA,MAAeC,SAAf;;AACA,oBAA4C7C,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAO8C,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACrBJ,YAAAA,SAAS,CAACI,IAAD,CAAT;AACAF,YAAAA,iBAAiB,CAACE,IAAD,CAAjB;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAIA,MAAMC,SAAS,GAAG;AAChBC,IAAAA,SAAS,EAAE,CAAC,MAAD,EAASlD,MAAM,CAAC0B,MAAD,CAAN,CAAeP,MAAf,CAAsB,sBAAtB,CAAT,EAAwDnB,MAAM,CAAC,IAAIkB,IAAJ,CAASQ,MAAT,EAAiBJ,OAAjB,CAAyB,IAAIJ,IAAJ,CAASQ,MAAT,EAAiBH,OAAjB,KAA6B,CAAtD,CAAD,CAAN,CAAiEJ,MAAjE,CAAwE,sBAAxE,CAAxD,EACTnB,MAAM,CAAC,IAAIkB,IAAJ,CAASQ,MAAT,EAAiBJ,OAAjB,CAAyB,IAAIJ,IAAJ,CAASQ,MAAT,EAAiBH,OAAjB,KAA6B,CAAtD,CAAD,CAAN,CAAiEJ,MAAjE,CAAwE,sBAAxE,CADS,EACwFnB,MAAM,CAAC,IAAIkB,IAAJ,CAASQ,MAAT,EAAiBJ,OAAjB,CAAyB,IAAIJ,IAAJ,CAASQ,MAAT,EAAiBH,OAAjB,KAA6B,CAAtD,CAAD,CAAN,CAAiEJ,MAAjE,CAAwE,sBAAxE,CADxF,EAETnB,MAAM,CAAC,IAAIkB,IAAJ,CAASQ,MAAT,EAAiBJ,OAAjB,CAAyB,IAAIJ,IAAJ,CAASQ,MAAT,EAAiBH,OAAjB,KAA6B,CAAtD,CAAD,CAAN,CAAiEJ,MAAjE,CAAwE,sBAAxE,CAFS,EAEwFnB,MAAM,CAAC,IAAIkB,IAAJ,CAASQ,MAAT,EAAiBJ,OAAjB,CAAyB,IAAIJ,IAAJ,CAASQ,MAAT,EAAiBH,OAAjB,KAA6B,CAAtD,CAAD,CAAN,CAAiEJ,MAAjE,CAAwE,sBAAxE,CAFxF,EAGTnB,MAAM,CAAC,IAAIkB,IAAJ,CAASQ,MAAT,EAAiBJ,OAAjB,CAAyB,IAAIJ,IAAJ,CAASQ,MAAT,EAAiBH,OAAjB,KAA6B,CAAtD,CAAD,CAAN,CAAiEJ,MAAjE,CAAwE,sBAAxE,CAHS,CADK;AAKhBgC,IAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AALM,GAAlB;;AAQA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBrC,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACAgB,YAAAA,KAAK,CAACsB,QAAN,GAAiBD,YAAjB;AAFqB;AAAA,6CAGHzC,aAAa,CAAC2C,aAAd,CAA4BvB,KAA5B,CAHG;;AAAA;AAGfwB,YAAAA,GAHe;AAIjBR,YAAAA,IAJiB,GAIV,EAJU;AAKjBS,YAAAA,OALiB,GAKP,EALO;AAMjBC,YAAAA,KANiB,GAMT,CANS;;AAOrB,gBAAIF,GAAG,CAACG,SAAJ,IAAiB,CAArB,EAAwB;AACtBX,cAAAA,IAAI,GAAGQ,GAAG,CAACR,IAAX;AACAX,cAAAA,aAAa,CAACmB,GAAG,CAACR,IAAL,CAAb;AACAS,cAAAA,OAAO,GAAGD,GAAG,CAACR,IAAd;AACAS,cAAAA,OAAO,CAACG,GAAR,CAAY,UAAAA,GAAG,EAAI;AACjBF,gBAAAA,KAAK,IAAIE,GAAG,CAACF,KAAb;AACD,eAFD;AAGAjB,cAAAA,YAAY,CAACiB,KAAD,CAAZ;AACD;;AACDxB,YAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAlB,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AAjBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAoBA,MAAM6C,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAe;AAC1C,QAAMC,QAAQ,GAAG,IAAI7C,IAAJ,CAAS4C,IAAT,CAAjB;AACA,QAAME,QAAQ,GAAGhE,MAAM,CAACW,SAAS,CAACoD,QAAD,CAAV,CAAN,CAA4B5C,MAA5B,CAAmC,kBAAnC,CAAjB;AACA,QAAMF,MAAM,GAAGjB,MAAM,CAAC+D,QAAQ,CAACzC,OAAT,CAAiBX,SAAS,CAACoD,QAAD,CAAT,CAAoBxC,OAApB,KAAgC,CAAjD,CAAD,CAAN,CAA4DJ,MAA5D,CAAmE,kBAAnE,CAAf;AACA,QAAMO,MAAM,GAAG1B,MAAM,CAACW,SAAS,CAACoD,QAAD,CAAV,CAAN,CAA4B5C,MAA5B,CAAmC,YAAnC,CAAf;AACAoB,IAAAA,eAAe,CAACyB,QAAD,CAAf;AACArC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAL,IAAAA,eAAe,CAAC2C,QAAD,CAAf;AACAvC,IAAAA,cAAc,CAACR,MAAD,CAAd;AACAmC,IAAAA,cAAc,CAACY,QAAD,CAAd;AACD,GAVD;;AAYAlE,EAAAA,SAAS,CAAC,YAAM;AACd,QAAImC,gBAAJ,EAAsB;AACpBmB,MAAAA,cAAc,CAAChC,YAAD,CAAd;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE6C,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,YAAY,EAAC,gBADf;AAEE,IAAA,eAAe,EAAE,yBAAAC,KAAK,EAAI;AACxBpB,MAAAA,cAAc,CAACoB,KAAK,CAACA,KAAP,CAAd;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC,EAAZ;AAAgBC,MAAAA,SAAS,EAAE,QAA3B;AACPC,MAAAA,UAAU,EAAE,KADL;AAEPC,MAAAA,QAAQ,EAAE,EAFH;AAGPC,MAAAA,UAAU,EAAE,EAHL;AAIPC,MAAAA,KAAK,EAAE;AAJA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAN,CAPF,EAYE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAE,0BAAAX,IAAI;AAAA,aAAID,oBAAoB,CAACC,IAAD,CAAxB;AAAA,KADxB;AAEE,IAAA,eAAe,EAAE,yBAAAA,IAAI;AAAA,aAAIrC,cAAc,CAACqC,IAAD,CAAlB;AAAA,KAFvB;AAGE,IAAA,UAAU,EAAE,KAHd;AAIE,IAAA,gBAAgB,EAAE,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAkBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACS,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAmBG3D,SAAS,GAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACV,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACL4D,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,eAAe,EAAE,EAFZ;AAGLC,MAAAA,iBAAiB,EAAE;AAHd,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,YAAY,EAAE;AAA5C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEA,MAAAA,YAAY,EAAE;AAAhB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE9B,SAAS,CAACC,SADlB;AAEE,IAAA,KAAK,EAAE;AACL8B,MAAAA,mBAAmB,EAAE,CADhB;AAELC,MAAAA,oBAAoB,EAAE,CAFjB;AAGLC,MAAAA,MAAM,EAAE,EAHH;AAILJ,MAAAA,eAAe,EAAE,SAJZ;AAKLK,MAAAA,WAAW,EAAE;AALR,KAFT;AASE,IAAA,SAAS,EAAE,CAAClB,MAAM,CAACmB,IAAR,EAAc;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAd,CATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYGjD,cAAc,CAACwB,GAAf,CAAmB,UAAC0B,IAAD,EAAOC,UAAP,EAAsB;AAAA;;AACxC,WACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,UADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAE,CAACD,IAAI,CAACE,IAAN,CADR;AAEE,MAAA,KAAK,EAAE,CACLvB,MAAM,CAACwB,aADF,EAEL;AAAEX,QAAAA,eAAe,EAAE;AAAnB,OAFK,EAGL;AAAEK,QAAAA,WAAW,EAAE;AAAf,OAHK,CAFT;AAOE,MAAA,OAAO,EAAE,CAAC,CAAD,CAPX;AAQE,MAAA,SAAS,EAAE,CAAClB,MAAM,CAACyB,OAAR,EAAiB;AAAEZ,QAAAA,eAAe,EAAE;AAAnB,OAAjB,CARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAaE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEIQ,IAAI,CAACtC,IAFT,qBAEI,WAAWY,GAAX,CAAe,UAAC+B,GAAD,EAAMC,SAAN;AAAA;;AAAA,aACb,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,SAAX;AAAsB,QAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBX,UAAAA,MAAM,EAAE;AAAhC,SAAD,EAAuCU,SAAS,GAAG,CAAZ,IAAiB,CAAjB,GAAqB;AAAEd,UAAAA,eAAe,EAAE;AAAnB,SAArB,GAAsD,EAA7F,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,CAAX;AACE,QAAA,IAAI,EAAEa,GAAG,CAACG,QAAJ,GAAeH,GAAG,CAACG,QAAnB,GAA8B,KADtC;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE9C,SAAS,CAACE,QAAV,CAAmB,CAAnB;AAAT,SAFT;AAGE,QAAA,SAAS,EAAEc,MAAM,CAAC+B,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,kBAMIL,GAAG,CAACM,OANR,qBAMI,aAAarC,GAAb,CAAiB,UAAC+B,GAAD,EAAMO,QAAN;AAAA,eACf,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,QAAX;AACE,UAAA,IAAI,EAAEP,GAAG,CAACQ,YAAJ,GAAmBR,GAAG,CAACQ,YAAvB,GAAsC,KAD9C;AAEE,UAAA,KAAK,EAAE;AAAEJ,YAAAA,KAAK,EAAE9C,SAAS,CAACE,QAAV,CAAmB,CAAnB;AAAT,WAFT;AAGE,UAAA,SAAS,EAAEc,MAAM,CAAC+B,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,OAAjB,CANJ,CADa;AAAA,KAAf,CAFJ,CAbF,EAiCE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEH,QAAAA,aAAa,EAAE,KAAjB;AAAwBX,QAAAA,MAAM,EAAE;AAAhC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,CAAX;AACE,MAAA,IAAI,EAAE,OADR;AAEE,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE9C,SAAS,CAACE,QAAV,CAAmB,CAAnB;AAAT,OAFT;AAGE,MAAA,SAAS,EAAEc,MAAM,CAAC+B,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,CAAX;AACE,MAAA,IAAI,EAAEV,IAAI,CAAC5B,KAAL,GAAa4B,IAAI,CAAC5B,KAAlB,GAA0B,CADlC;AAEE,MAAA,KAAK,EAAE;AAAEqC,QAAAA,KAAK,EAAE9C,SAAS,CAACE,QAAV,CAAmB,CAAnB;AAAT,OAFT;AAGE,MAAA,SAAS,EAAEc,MAAM,CAAC+B,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CAjCF,CADF;AAgDD,GAjDA,CAZH,EA8DE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,aAAa,EAAE,KAAjB;AAAwBX,MAAAA,MAAM,EAAE,EAAhC;AAAoCJ,MAAAA,eAAe,EAAE;AAArD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAE,CAAX;AACE,IAAA,IAAI,EAAE,YADR;AAEE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAE9C,SAAS,CAACE,QAAV,CAAmB,CAAnB;AAAT,KAFT;AAGE,IAAA,SAAS,EAAEc,MAAM,CAAC+B,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAE,CAAX;AACE,IAAA,IAAI,EAAExD,SADR;AAEE,IAAA,KAAK,EAAE;AAAEuD,MAAAA,KAAK,EAAE9C,SAAS,CAACE,QAAV,CAAmB,CAAnB;AAAT,KAFT;AAGE,IAAA,SAAS,EAAEc,MAAM,CAAC+B,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CA9DF,CADF,CADF,CAPF,CADF,EAyFE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACS,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzFF,EA0FE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACL0B,MAAAA,cAAc,EAAE,QADX;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLzB,MAAAA,eAAe,EAAE;AAHZ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAEX,MAAM,CAACqC,YADhB;AAEE,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,kBAAD;AACE,IAAA,aAAa,EAAErG,MAAM,CAACsG,cADxB;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb1E,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLsD,MAAAA,MAAM,EAAE,EADH;AAELa,MAAAA,KAAK,EAAE,GAFF;AAGLK,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACnC,MAAM,CAACuC,KAAR,EAAe;AAAEnB,MAAAA,SAAS,EAAE;AAAb,KAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CANF,CAJF,CAPF,CA1FF,EAyHE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE,qBADT;AAEE,IAAA,OAAO,EAAEzD,aAFX;AAGE,IAAA,QAAQ,EAAEU,YAHZ;AAIE,IAAA,UAAU,EAAE,IAJd;AAKE,IAAA,cAAc,EAAE,0BAAM;AACpBT,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,KAPH;AAQE,IAAA,aAAa,EAAE,yBAAM;AACnBc,MAAAA,cAAc;AACf,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzHF,EAqIE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAEZ,UAAU,KAAK,SAD1B;AAEE,IAAA,cAAc,EAAE;AAAA,aAAMC,aAAa,CAAC,EAAD,CAAnB;AAAA,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArIF,EAyIE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAED,UAAU,KAAK,MAD1B;AAEE,IAAA,cAAc,EAAE;AAAA,aAAMC,aAAa,CAAC,EAAD,CAAnB;AAAA,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzIF,CApBF,CADF;AAsKD;AAED,IAAMkC,MAAM,GAAGwC,UAAU,CAACC,MAAX,CAAkB;AAC/BxC,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETG,IAAAA,eAAe,EAAE7E,MAAM,CAAC0G;AAFf,GADoB;AAK/BjC,EAAAA,IAAI,EAAE;AACJQ,IAAAA,MAAM,EAAE,EADJ;AAEJJ,IAAAA,eAAe,EAAE7E,MAAM,CAAC2G;AAFpB,GALyB;AAS/BN,EAAAA,YAAY,EAAE;AACZpB,IAAAA,MAAM,EAAE,EADI;AAEZa,IAAAA,KAAK,EAAE,GAFK;AAGZM,IAAAA,UAAU,EAAE,QAHA;AAIZD,IAAAA,cAAc,EAAE,QAJJ;AAKZrB,IAAAA,YAAY,EAAE;AALF,GATiB;AAgB/ByB,EAAAA,KAAK,EAAE;AACLjC,IAAAA,QAAQ,EAAE,EADL;AAELD,IAAAA,UAAU,EAAE,KAFP;AAGLG,IAAAA,KAAK,EAAExE,MAAM,CAAC4G;AAHT,GAhBwB;AAqB/BzB,EAAAA,IAAI,EAAE;AACJb,IAAAA,QAAQ,EAAE,EADN;AAEJD,IAAAA,UAAU,EAAE,KAFR;AAGJG,IAAAA,KAAK,EAAExE,MAAM,CAAC4G;AAHV,GArByB;AA0B/BnB,EAAAA,OAAO,EAAE;AACPnB,IAAAA,QAAQ,EAAE,EADH;AAEPD,IAAAA,UAAU,EAAE,KAFL;AAGPG,IAAAA,KAAK,EAAExE,MAAM,CAAC4G;AAHP,GA1BsB;AA+B/BpB,EAAAA,aAAa,EAAE;AACbP,IAAAA,MAAM,EAAE;AADK,GA/BgB;AAkC/Bc,EAAAA,YAAY,EAAE;AACZvB,IAAAA,KAAK,EAAExE,MAAM,CAAC4G,KADF;AAEZtC,IAAAA,QAAQ,EAAE,EAFE;AAGZD,IAAAA,UAAU,EAAE,KAHA;AAIZe,IAAAA,SAAS,EAAE;AAJC;AAlCiB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport {\r\n  useEffect,\r\n  useState\r\n} from \"react\";\r\nimport moment from \"moment\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport DateTimePicker from \"../../../components/datetimepicker\";\r\nimport PickerModel from \"../../../components/picker/PickerModel\";\r\nimport ModalSendEmail from \"../../../components/management/items/modalSendEmail\";\r\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\r\nimport SendFail from \"../../../components/modalNotification/SendFail\";\r\nimport {\r\n  Table,\r\n  Row,\r\n  Cell\r\n} from \"react-native-table-component\";\r\nimport { getMonday } from \"../../../components/generalConvert/conVertMonDay\";\r\nimport { FilterViewModel } from \"../../../models/filterViewModel\";\r\nimport { ReportService } from \"../../../netWorking/SpeedposService\";\r\nimport { TableNumberOfTCModel } from \"../../../models/tableNumberOfTCModel\";\r\nimport { NumberOfTCModel } from \"../../../models/numberOfTCModel\";\r\nimport DialogAwait from \"../../../components/dialogs/Loading\";\r\n\r\nexport default function numberOfTc() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toDate = new Date();\r\n  const [fromDateTime, setFromDateTime] = useState(\r\n    moment(getMonday(toDate)).format(\"YYYY-MM-DD 00:00\")\r\n  );\r\n  const [endDateTime, setEndDateTime] = useState(\r\n    moment(new Date().setDate(getMonday(toDate).getDate() + 6)).format(\r\n      \"YYYY-MM-DD 23:59\"\r\n    )\r\n  );\r\n  const [monDay, setMonDay] = useState(\r\n    moment(getMonday(toDate)).format(\"YYYY-MM-DD\")\r\n  )\r\n  const [modalSendMail, setModalSendMail] = useState(false);\r\n  const [sentStatus, setSentStatus] = useState(\"\");\r\n  //\r\n  let model: FilterViewModel = {};\r\n  //\r\n  const [checKLoadDefault, setChecKLoadDefault] = useState(true);\r\n  //\r\n  const tableNumberOfTC: TableNumberOfTCModel[] = [];\r\n  const [dataNumberOfTC, setNumberOfTC] = useState(tableNumberOfTC);\r\n  //\r\n  const [dateSendMail, setDateSendMail] = useState(\r\n    moment(getMonday(toDate)).format(\"YYYY-MM-DD 00:00\")\r\n  );\r\n\r\n  const [totalSale, setTotalSale] = useState(0);\r\n  const handleSendMail = () => {\r\n    setModalSendMail(!modalSendMail);\r\n    setSentStatus(\"success\");\r\n  };\r\n  const [outlet, setoutlet] = useState(2);\r\n  const [droplistOutlet, setDroplistOutlet] = useState(\"\");\r\n  const onchangeOutlet = async (data: any) => {\r\n    setoutlet(data);\r\n    setDroplistOutlet(data);\r\n  };\r\n  const dataTable = {\r\n    tableHead: [\"Item\", moment(monDay).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 1)).format(\"dddd[\\n](DD-MM-YYYY)\"),\r\n      moment(new Date(monDay).setDate(new Date(monDay).getDate() + 2)).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 3)).format(\"dddd[\\n](DD-MM-YYYY)\"),\r\n      moment(new Date(monDay).setDate(new Date(monDay).getDate() + 4)).format(\"dddd[\\n](DD-MM-YYYY)\"), moment(new Date(monDay).setDate(new Date(monDay).getDate() + 5)).format(\"dddd[\\n](DD-MM-YYYY)\"),\r\n      moment(new Date(monDay).setDate(new Date(monDay).getDate() + 6)).format(\"dddd[\\n](DD-MM-YYYY)\")],\r\n    widthArr: [150, 165, 165],\r\n  };\r\n  //\r\n  const loadnumberOfTc = async (dateTimeFrom) => {\r\n    setIsLoading(true);\r\n    model.DateTime = dateTimeFrom;\r\n    const res = await ReportService.getNumberOfTC(model);\r\n    let data = [];\r\n    let datamap = [];\r\n    let total = 0;\r\n    if (res.isSuccess == 1) {\r\n      data = res.data;\r\n      setNumberOfTC(res.data);\r\n      datamap = res.data as TableNumberOfTCModel[];\r\n      datamap.map(map => {\r\n        total += map.total\r\n      })\r\n      setTotalSale(total);\r\n    }\r\n    setChecKLoadDefault(false);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const OnchangeFromDateTime = (date: any) => {\r\n    const dateTime = new Date(date);\r\n    const fromDate = moment(getMonday(dateTime)).format(\"YYYY-MM-DD 00:00\");\r\n    const toDate = moment(dateTime.setDate(getMonday(dateTime).getDate() + 6)).format(\"YYYY-MM-DD 23:59\");\r\n    const monDay = moment(getMonday(dateTime)).format(\"YYYY-MM-DD\");\r\n    setDateSendMail(fromDate);\r\n    setMonDay(monDay);\r\n    setFromDateTime(fromDate);\r\n    setEndDateTime(toDate);\r\n    loadnumberOfTc(fromDate);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (checKLoadDefault) {\r\n      loadnumberOfTc(fromDateTime);\r\n    }\r\n  }, [])\r\n  return (\r\n    <View style={styles.container}>\r\n      <PickerModel\r\n        defaultValue=\"Ola Restaurant\"\r\n        onSelectedValue={value => {\r\n          onchangeOutlet(value.value);\r\n        }}\r\n      ></PickerModel>\r\n      <View><Text style={{marginLeft:15, fontStyle: \"normal\",\r\n                  fontWeight: \"600\",\r\n                  fontSize: 12,\r\n                  lineHeight: 18,\r\n                  color: \"#A4A4A4\",}}>Weekly Display - Choose a day to start</Text></View>\r\n      <DateTimePicker\r\n        onSubmitFromDate={date => OnchangeFromDateTime(date)}\r\n        onSubmitEndDate={date => setEndDateTime(date)}\r\n        isShowTime={false}\r\n        checkkNotEndDate={false}\r\n      ></DateTimePicker>\r\n      <View style={styles.line}></View>\r\n      {isLoading ? <DialogAwait></DialogAwait> :\r\n      <ScrollView>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingVertical: 15,\r\n            paddingHorizontal: 15,\r\n          }}\r\n        >\r\n          <ScrollView horizontal={true}>\r\n            <View style={{ backgroundColor: \"#414141\", borderRadius: 4 }}>\r\n              <Table style={{ borderRadius: 4 }}>\r\n                <Row\r\n                  data={dataTable.tableHead}\r\n                  style={{\r\n                    borderTopLeftRadius: 4,\r\n                    borderTopRightRadius: 4,\r\n                    height: 60,\r\n                    backgroundColor: \"#878787\",\r\n                    paddingLeft: 0,\r\n                  }}\r\n                  textStyle={[styles.text, { textAlign: \"center\" }]}\r\n                />\r\n                {dataNumberOfTC.map((item, indexTable) => {\r\n                  return (\r\n                    <View\r\n                      key={indexTable}\r\n                    >\r\n                      <Row\r\n                        data={[item.name]}\r\n                        style={[\r\n                          styles.styleRowTable,\r\n                          { backgroundColor: \"#17151C\" },\r\n                          { paddingLeft: 10 },\r\n                        ]}\r\n                        flexArr={[1]}\r\n                        textStyle={[styles.text600, { backgroundColor: \"#ff0\" }]}\r\n                      />\r\n                      <Table>\r\n                        {\r\n                          item.data?.map((row, indexdata) => (\r\n                            <View key={indexdata} style={[{ flexDirection: 'row', height: 50 }, indexdata % 2 == 0 ? { backgroundColor: '#8D7550' } : {}]}>\r\n                              <Cell key={0}\r\n                                data={row.prodName ? row.prodName : \"---\"}\r\n                                style={{ width: dataTable.widthArr[0] }}\r\n                                textStyle={styles.textRowTable} />\r\n                              {\r\n                                row.dayData?.map((row, indexDay) => (\r\n                                  <Cell key={indexDay}\r\n                                    data={row.countProdNum ? row.countProdNum : \"---\"}\r\n                                    style={{ width: dataTable.widthArr[1] }}\r\n                                    textStyle={styles.textRowTable} />\r\n                                ))\r\n                              }\r\n                            </View>\r\n                          ))\r\n                        }\r\n                      </Table>\r\n                      <Table>\r\n                        <View style={{ flexDirection: 'row', height: 50 }}>\r\n                          <Cell key={0}\r\n                            data={\"Total\"}\r\n                            style={{ width: dataTable.widthArr[0] }}\r\n                            textStyle={styles.textRowTable} />\r\n                          <Cell key={1}\r\n                            data={item.total ? item.total : 0}\r\n                            style={{ width: dataTable.widthArr[1] }}\r\n                            textStyle={styles.textRowTable} />\r\n                        </View>\r\n                      </Table>\r\n                    </View>\r\n                  );\r\n                })}\r\n                <Table>\r\n                  <View style={{ flexDirection: 'row', height: 50, backgroundColor: '#8D7550' }}>\r\n                    <Cell key={0}\r\n                      data={\"Total sale\"}\r\n                      style={{ width: dataTable.widthArr[0] }}\r\n                      textStyle={styles.textRowTable} />\r\n                    <Cell key={1}\r\n                      data={totalSale}\r\n                      style={{ width: dataTable.widthArr[1] }}\r\n                      textStyle={styles.textRowTable} />\r\n                  </View>\r\n                </Table>\r\n              </Table>\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n\r\n        <View style={styles.line}></View>\r\n        <View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingVertical: 32,\r\n          }}\r\n        >\r\n          <LinearGradient\r\n            style={styles.buttonSubmit}\r\n            colors={[\"#DAB451\", \"#988050\"]}\r\n          >\r\n            <TouchableHighlight\r\n              underlayColor={colors.yellowishbrown}\r\n              onPress={() => {\r\n                setModalSendMail(!modalSendMail);\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  height: 36,\r\n                  width: 150,\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Text style={[styles.title, { textAlign: \"center\" }]}>\r\n                  Send\r\n                </Text>\r\n              </View>\r\n            </TouchableHighlight>\r\n          </LinearGradient>\r\n        </View>\r\n        <ModalSendEmail\r\n          title={\"Number Of TC (Item)\"}\r\n          visible={modalSendMail}\r\n          dateTime={dateSendMail}\r\n          isPickType={true}\r\n          onRequestClose={() => {\r\n            setModalSendMail(!modalSendMail);\r\n          }}\r\n          onRequestSend={() => {\r\n            handleSendMail();\r\n          }}\r\n        ></ModalSendEmail>\r\n        <SendSuccess\r\n          visible={sentStatus === \"success\"}\r\n          onRequestClose={() => setSentStatus(\"\")}\r\n        ></SendSuccess>\r\n        <SendFail\r\n          visible={sentStatus === \"fail\"}\r\n          onRequestClose={() => setSentStatus(\"\")}\r\n        ></SendFail>\r\n      </ScrollView>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n  line: {\r\n    height: 10,\r\n    backgroundColor: colors.backgroundTab,\r\n  },\r\n  buttonSubmit: {\r\n    height: 36,\r\n    width: 150,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n    color: colors.white,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n    color: colors.white,\r\n  },\r\n  text600: {\r\n    fontSize: 14,\r\n    fontWeight: \"600\",\r\n    color: colors.white,\r\n  },\r\n  styleRowTable: {\r\n    height: 36,\r\n  },\r\n  textRowTable: {\r\n    color: colors.white,\r\n    fontSize: 14,\r\n    fontWeight: '400',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}