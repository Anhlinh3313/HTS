{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\OnlineSystem\\\\OnlineFoodDeliveryRevenue.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { VictoryBar, VictoryChart, VictoryPie, VictoryLine, VictoryScatter, VictoryAxis, VictoryLabel, VictoryGroup, VictoryVoronoiContainer } from \"victory-native\";\nimport { colors } from \"../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport DateTimePicker from \"../../../../components/datetimepicker\";\nimport { Icons } from \"../../../../assets\";\nimport PickerModel from \"../../../../components/picker/PickerModel\";\nimport DropDownPickerLine from \"../../../../components/DropDownPickerLine\";\nimport SvgUri from \"react-native-svg-uri\";\n\nvar OnlineFoodDeliveryRevenue = function OnlineFoodDeliveryRevenue() {\n  var dimensions = Dimensions.get(\"window\");\n  var windowWidth = dimensions.width;\n  var outletModel = [{\n    label: \"Spa\",\n    value: 1\n  }, {\n    label: \"Ola Restaurant\",\n    value: 2\n  }];\n\n  var _useState = useState(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      outlet = _useState2[0],\n      setOutlet = _useState2[1];\n\n  var onchangeOutlet = function onchangeOutlet(data) {\n    return _regeneratorRuntime.async(function onchangeOutlet$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setOutlet(data);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var dataTopPicker = [{\n    label: \"Food delivery company - All\",\n    value: \"all\"\n  }, {\n    label: \"Grab\",\n    value: \"grab\"\n  }, {\n    label: \"Baemin\",\n    value: \"baemin\"\n  }, {\n    label: \"Shopee Food\",\n    value: \"shopee\"\n  }];\n\n  var _useState3 = useState(dataTopPicker[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickerTopValue = _useState4[0],\n      setPickerTopValue = _useState4[1];\n\n  var handlePicker = function handlePicker(value) {\n    setPickerTopValue(value);\n  };\n\n  var dataFieldSells = [{\n    title: \"Net Sales\",\n    value: \"4,059,0000\"\n  }, {\n    title: \"Gross Sales\",\n    value: \"4,059,0000\"\n  }, {\n    title: \"Transaction\",\n    value: \"11\"\n  }, {\n    title: \"Order Cancel\",\n    value: \"5\"\n  }, {\n    title: \"Average TC\",\n    value: \"4,059,0000\"\n  }];\n  var dataCharts = [{\n    title: \"Gross Sales\",\n    data: [{\n      y: 2\n    }, {\n      y: 1\n    }, {\n      y: 4\n    }, {\n      y: 3\n    }]\n  }, {\n    title: \"Transaction\",\n    data: [{\n      y: 2\n    }, {\n      y: 1\n    }, {\n      y: 4\n    }, {\n      y: 3\n    }]\n  }, {\n    title: \"Order Cancel\",\n    data: [{\n      y: 2\n    }, {\n      y: 1\n    }, {\n      y: 4\n    }, {\n      y: 3\n    }]\n  }];\n  var dataTimeSales = [{\n    time: \"06:00 AM - 10:00 AM\",\n    color: \"#70E6A3\"\n  }, {\n    time: \"10:00 AM - 02:00 PM\",\n    color: \"#A24DE4\"\n  }, {\n    time: \"02:00 PM - 05:00 PM\",\n    color: \"#06C2FF\"\n  }, {\n    time: \"05:00 PM - 00:00 AM\",\n    color: \"#F68942\"\n  }];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisibleSelect = _useState6[0],\n      setModalVisibleSelect = _useState6[1];\n\n  var _useState7 = useState(\"All\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pickerValueSelect = _useState8[0],\n      setPickerValueSelect = _useState8[1];\n\n  var whiteStyleBottom = {\n    axis: {\n      stroke: colors.colorLine\n    },\n    ticks: {\n      stroke: colors.gray,\n      size: 8,\n      margin: 5\n    },\n    tickLabels: {\n      fontSize: 10,\n      padding: 5,\n      fill: \"#A4A4A4\"\n    }\n  };\n  var whiteStyle = {\n    grid: {\n      stroke: colors.colorLine,\n      strokeWidth: 0.25\n    },\n    axis: {\n      stroke: colors.backgroundApp\n    },\n    tickLabels: {\n      fill: colors.colorChartLine,\n      fontSize: 10\n    }\n  };\n  var dataModelSelect = [{\n    label: \"All\",\n    value: \"all\"\n  }, {\n    label: \"Net Sales\",\n    value: \"netSales\"\n  }, {\n    label: \"Gross Sales\",\n    value: \"grossSales\"\n  }, {\n    label: \"Transaction\",\n    value: \"transaction\"\n  }, {\n    label: \"Average TC\",\n    value: \"averageTC\"\n  }];\n\n  var _useState9 = useState({\n    netSales: true,\n    grossSales: true,\n    transaction: true,\n    averageTC: true\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pickerValueChartDisplay = _useState10[0],\n      setPickerValueChartDisplay = _useState10[1];\n\n  var _useState11 = useState([\"all\", \"netSales\", \"grossSales\", \"transaction\", \"averageTC\"]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedChart = _useState12[0],\n      setSelectedChartValue = _useState12[1];\n\n  function handleCheck(item) {\n    var data = selectedChart;\n\n    if (data.includes(item)) {\n      if (item === \"all\") {\n        data = [];\n        setPickerValueSelect(\"Select...\");\n        setPickerValueChartDisplay({\n          netSales: false,\n          grossSales: false,\n          transaction: false,\n          averageTC: false\n        });\n      } else {\n        data = data.filter(function (i) {\n          return i !== item;\n        });\n        data = data.filter(function (i) {\n          return i !== \"all\";\n        });\n        var labelSeleted = \"\";\n        data.map(function (map, index) {\n          dataModelSelect.map(function (model) {\n            if (map != \"all\") {\n              if (map === model.value) {\n                labelSeleted += index != data.length - 1 ? model.label + \", \" : \"\" + model.label;\n              }\n            }\n          });\n        });\n        setPickerValueSelect(labelSeleted);\n        setPickerValueChartDisplay(_objectSpread(_objectSpread({}, pickerValueChartDisplay), {}, _defineProperty({}, item, false)));\n      }\n\n      setSelectedChartValue(data);\n    } else {\n      if (item === \"all\") {\n        data = [];\n        dataModelSelect.map(function (item) {\n          data.push(item.value);\n          setPickerValueSelect(\"All\");\n        });\n        setPickerValueChartDisplay({\n          netSales: true,\n          grossSales: true,\n          transaction: true,\n          averageTC: true\n        });\n      } else {\n        if (selectedChart.length === dataModelSelect.length - 2) {\n          data = [].concat(_toConsumableArray(data), [\"all\"]);\n        }\n\n        data = [].concat(_toConsumableArray(data), [item]);\n\n        if (data.length === dataModelSelect.length) {\n          setPickerValueSelect(\"All\");\n        } else {\n          var _labelSeleted = \"\";\n          data.map(function (map, index) {\n            dataModelSelect.map(function (model) {\n              if (map != \"all\") {\n                if (map === model.value) {\n                  _labelSeleted += index != data.length - 1 ? model.label + \", \" : \"\" + model.label;\n                }\n              }\n            });\n          });\n          setPickerValueSelect(_labelSeleted);\n        }\n\n        setPickerValueChartDisplay(_objectSpread(_objectSpread({}, pickerValueChartDisplay), {}, _defineProperty({}, item, true)));\n      }\n\n      setSelectedChartValue(data);\n    }\n  }\n\n  var renderViewChart = function renderViewChart(net, gross, av) {\n    var offset = 15;\n    var colorScale = [\"#F6606F\", \"#76D146\", \"#00DFFD\"];\n\n    if (net && !gross && !av) {\n      offset = 0;\n    }\n\n    if (!net && !gross && av) {\n      offset = 0;\n      colorScale = [\"#00DFFD\"];\n    }\n\n    if (!net && gross && !av) {\n      offset = 0;\n      colorScale = [\"#76D146\"];\n    }\n\n    if (net && !gross && av) {\n      colorScale = [\"#F6606F\", \"#00DFFD\"];\n    }\n\n    if (!net && gross && av) {\n      return React.createElement(VictoryGroup, {\n        offset: 15,\n        style: {\n          data: {\n            width: 15\n          }\n        },\n        colorScale: [\"#76D146\", \"#00DFFD\"],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      }, React.createElement(VictoryBar, {\n        animate: {\n          duration: 2000,\n          onLoad: {\n            duration: 1000\n          }\n        },\n        data: [{\n          x: 1,\n          y: 260\n        }, {\n          x: 2,\n          y: 340\n        }, {\n          x: 3,\n          y: 340\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }), React.createElement(VictoryBar, {\n        animate: {\n          duration: 2000,\n          onLoad: {\n            duration: 1000\n          }\n        },\n        data: [{\n          x: 1,\n          y: 200\n        }, {\n          x: 2,\n          y: 310\n        }, {\n          x: 3,\n          y: 150\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return React.createElement(VictoryGroup, {\n        offset: offset,\n        style: {\n          data: {\n            width: 15\n          }\n        },\n        colorScale: colorScale,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }, pickerValueChartDisplay.netSales && React.createElement(VictoryBar, {\n        animate: {\n          duration: 2000,\n          onLoad: {\n            duration: 1000\n          }\n        },\n        data: [{\n          x: 1,\n          y: 320\n        }, {\n          x: 2,\n          y: 380\n        }, {\n          x: 3,\n          y: 240\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }), pickerValueChartDisplay.grossSales && React.createElement(VictoryBar, {\n        animate: {\n          duration: 2000,\n          onLoad: {\n            duration: 1000\n          }\n        },\n        data: [{\n          x: 1,\n          y: 260\n        }, {\n          x: 2,\n          y: 340\n        }, {\n          x: 3,\n          y: 340\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }), pickerValueChartDisplay.averageTC && React.createElement(VictoryBar, {\n        animate: {\n          duration: 2000,\n          onLoad: {\n            duration: 1000\n          }\n        },\n        data: [{\n          x: 1,\n          y: 200\n        }, {\n          x: 2,\n          y: 310\n        }, {\n          x: 3,\n          y: 150\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, React.createElement(PickerModel, {\n    data: outletModel,\n    defaultValue: \"Ola Restaurant\",\n    onSelectedValue: function onSelectedValue(value) {\n      onchangeOutlet(value.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingHorizontal: 15,\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.titleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.textTitleHeader, {\n      textAlign: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, \"ONLINE FOOD DELIVERY REVENUE\"))), React.createElement(DateTimePicker, {\n    onSubmitFromDate: function onSubmitFromDate(date) {},\n    onSubmitEndDate: function onSubmitEndDate(date) {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }), React.createElement(DropDownPickerLine, {\n    data: dataTopPicker,\n    onSelected: function onSelected(value) {\n      handlePicker(value);\n    },\n    itemSelected: pickerTopValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingVertical: 15,\n      paddingLeft: 15,\n      flexDirection: \"row\",\n      flexWrap: \"wrap\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, dataFieldSells.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [styles.itemFieldSells, {\n        width: windowWidth / 2 - 15 - 7.5\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: [styles.textGray, {\n        marginBottom: 8\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.text16,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, item.value));\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    indicatorStyle: \"white\",\n    pagingEnabled: true,\n    persistentScrollbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  }, dataCharts.map(function (chart, iChart) {\n    return React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        width: windowWidth\n      },\n      key: iChart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: [styles.text16, {\n        marginBottom: 15\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 19\n      }\n    }, pickerTopValue.value === \"all\" ? \"Total \" + chart.title : chart.title), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }, React.createElement(VictoryPie, {\n      width: windowWidth / 1.8,\n      height: windowWidth / 1.8,\n      theme: {\n        pie: {\n          padding: 15\n        }\n      },\n      animate: {\n        duration: 2000\n      },\n      data: chart.data,\n      colorScale: [\"#A24DE4\", \"#06C2FF\", \"#F68942\", \"#70E6A3\"],\n      style: {\n        labels: {\n          fill: colors.backgroundApp\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, dataTimeSales.map(function (item, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginVertical: 4\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: [styles.dot, {\n          backgroundColor: item.color\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: \"500\",\n          color: item.color\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 29\n        }\n      }, item.time));\n    }))));\n  }))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.salectChart, {\n      zIndex: 10\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisibleSelect(!modalVisibleSelect);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.chartPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, pickerValueSelect), React.createElement(Ionicons, {\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }))), modalVisibleSelect && React.createElement(View, {\n    style: [styles.listPicker, {\n      width: windowWidth - 30\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      borderRadius: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingVertical: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 19\n    }\n  }, dataModelSelect.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return handleCheck(item.value);\n      },\n      style: {\n        paddingVertical: 10,\n        flexDirection: \"row\",\n        paddingLeft: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }\n    }, selectedChart.includes(item.value) ? React.createElement(View, {\n      style: [styles.iconUnCheck, {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 29\n      }\n    }, React.createElement(SvgUri, {\n      source: Icons.iconTickCheckBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 31\n      }\n    })) : React.createElement(View, {\n      style: styles.iconUnCheck,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: [styles.textTitleHeader],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 27\n      }\n    }, item.label));\n  }))))), React.createElement(ScrollView, {\n    horizontal: true,\n    indicatorStyle: \"white\",\n    endFillColor: colors.backgroundApp,\n    style: {\n      backgroundColor: colors.backgroundApp\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 15\n    }\n  }, React.createElement(VictoryChart, {\n    domainPadding: {\n      x: 30,\n      y: 40\n    },\n    padding: {\n      top: 5,\n      bottom: 50,\n      left: 90,\n      right: 80\n    },\n    containerComponent: React.createElement(VictoryVoronoiContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 39\n      }\n    }),\n    style: {\n      parent: {\n        cursor: \"pointer\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 17\n    }\n  }, React.createElement(VictoryChart, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 19\n    }\n  }, React.createElement(VictoryLabel, {\n    y: 210,\n    x: 5,\n    angle: -90,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorText\n    },\n    text: \"Net Sales - Gross Sales - Average TC \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryLabel, {\n    y: 150,\n    x: windowWidth - 30,\n    angle: -90,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorText\n    },\n    text: \"Transaction\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryLabel, {\n    y: 250,\n    x: 70,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorChartLine\n    },\n    text: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryLabel, {\n    y: 250,\n    x: windowWidth - 65,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorChartLine\n    },\n    text: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: [125.0, 250.0, 375.0, 500.0],\n    tickFormat: function tickFormat(t) {\n      return Math.round(t) + \".000.000\";\n    },\n    dependentAxis: true,\n    orientation: \"left\",\n    style: whiteStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: [\"Grab\", \"Baemin\", \"Shopee food\"],\n    style: whiteStyleBottom,\n    orientation: \"bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: [125.0, 250.0, 375.0, 500.0],\n    tickFormat: function tickFormat(t) {\n      return \"\" + Math.round(t);\n    },\n    dependentAxis: true,\n    orientation: \"right\",\n    style: whiteStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 21\n    }\n  })), pickerValueChartDisplay.grossSales || pickerValueChartDisplay.averageTC || pickerValueChartDisplay.netSales ? renderViewChart(pickerValueChartDisplay.netSales, pickerValueChartDisplay.grossSales, pickerValueChartDisplay.averageTC) : React.createElement(VictoryGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }), pickerValueChartDisplay.transaction && React.createElement(VictoryGroup, {\n    data: [{\n      x: 0.45,\n      y: 350,\n      fill: \"#DAB451\"\n    }, {\n      x: 1,\n      y: 150,\n      fill: \"#DAB451\"\n    }, {\n      x: 2,\n      y: 270,\n      fill: \"#DAB451\"\n    }, {\n      x: 3,\n      y: 230,\n      fill: \"#DAB451\"\n    }, {\n      x: 4,\n      y: 0,\n      fill: \"#DAB451\"\n    }],\n    color: \"#5F8BFC\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 21\n    }\n  }, React.createElement(VictoryLine, {\n    interpolation: \"natural\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 23\n    }\n  }), React.createElement(VictoryScatter, {\n    size: 3,\n    style: {\n      data: {\n        fill: function fill(_ref) {\n          var datum = _ref.datum;\n          return datum.fill;\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 23\n    }\n  })))), React.createElement(View, {\n    style: styles.rowTableChart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 2.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 8,\n      height: 8,\n      backgroundColor: \"#F6606F\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles.textNoteChart, {\n      color: \"#F6606F\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 21\n    }\n  }, \"Net Sales\"))), React.createElement(View, {\n    style: {\n      flex: 2.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 8,\n      height: 8,\n      backgroundColor: \"#76D146\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles.textNoteChart, {\n      color: \"#76D146\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 21\n    }\n  }, \"Gross Sales\"))), React.createElement(View, {\n    style: {\n      flex: 2.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 8,\n      height: 8,\n      backgroundColor: \"#00DFFD\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles.textNoteChart, {\n      color: \"#00DFFD\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 21\n    }\n  }, \"Average TC\"))), React.createElement(View, {\n    style: {\n      flex: 2.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 8,\n      height: 2,\n      backgroundColor: \"#5F8BFC\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles.textNoteChart, {\n      color: \"#5F8BFC\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 21\n    }\n  }, \"Transaction\")))))))));\n};\n\nexport default OnlineFoodDeliveryRevenue;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  titleHeader: {\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.colorLine\n  },\n  textTitleHeader: {\n    color: colors.colorText,\n    fontWeight: \"500\",\n    fontSize: 14\n  },\n  text16: {\n    color: colors.colorText,\n    fontWeight: \"500\",\n    fontSize: 16\n  },\n  textGray: {\n    color: colors.colorLine,\n    fontWeight: \"400\",\n    fontSize: 14\n  },\n  itemFieldSells: {\n    height: 77,\n    backgroundColor: \"#414141\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4,\n    marginRight: 15,\n    marginBottom: 15\n  },\n  viewWallet: {\n    backgroundColor: \"#675E50\",\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 15,\n    marginTop: 4\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    marginRight: 4,\n    borderRadius: 8\n  },\n  rowTableChart: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: 30\n  },\n  textNoteChart: {\n    color: colors.colorText,\n    textAlign: \"center\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: 12,\n    lineHeight: 20,\n    marginLeft: 4\n  },\n  lineItem: {\n    height: 0.5,\n    backgroundColor: colors.colorLine\n  },\n  salectChart: {\n    paddingTop: 15,\n    paddingHorizontal: 15\n  },\n  chartPicker: {\n    height: 40,\n    flexDirection: \"row\",\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 10\n  },\n  listPicker: {\n    position: \"absolute\",\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    borderColor: colors.backgroundApp,\n    top: 60,\n    left: 15\n  },\n  iconUnCheck: {\n    borderRadius: 4,\n    backgroundColor: \"transparent\",\n    width: 18,\n    height: 18,\n    borderColor: \"#fff\",\n    borderWidth: 1,\n    marginRight: 10\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/OnlineSystem/OnlineFoodDeliveryRevenue.tsx"],"names":["React","useState","TouchableOpacity","VictoryBar","VictoryChart","VictoryPie","VictoryLine","VictoryScatter","VictoryAxis","VictoryLabel","VictoryGroup","VictoryVoronoiContainer","colors","Ionicons","DateTimePicker","Icons","PickerModel","DropDownPickerLine","SvgUri","OnlineFoodDeliveryRevenue","dimensions","Dimensions","get","windowWidth","width","outletModel","label","value","outlet","setOutlet","onchangeOutlet","data","dataTopPicker","pickerTopValue","setPickerTopValue","handlePicker","dataFieldSells","title","dataCharts","y","dataTimeSales","time","color","modalVisibleSelect","setModalVisibleSelect","pickerValueSelect","setPickerValueSelect","whiteStyleBottom","axis","stroke","colorLine","ticks","gray","size","margin","tickLabels","fontSize","padding","fill","whiteStyle","grid","strokeWidth","backgroundApp","colorChartLine","dataModelSelect","netSales","grossSales","transaction","averageTC","pickerValueChartDisplay","setPickerValueChartDisplay","selectedChart","setSelectedChartValue","handleCheck","item","includes","filter","i","labelSeleted","map","index","model","length","push","renderViewChart","net","gross","av","offset","colorScale","duration","onLoad","x","styles","container","line","paddingHorizontal","marginBottom","titleHeader","textTitleHeader","textAlign","date","paddingVertical","paddingLeft","flexDirection","flexWrap","itemFieldSells","textGray","text16","chart","iChart","alignItems","pie","labels","marginVertical","dot","backgroundColor","fontWeight","salectChart","zIndex","chartPicker","listPicker","borderRadius","iconUnCheck","justifyContent","iconTickCheckBox","top","bottom","left","right","parent","cursor","fontStyle","colorText","t","Math","round","datum","rowTableChart","flex","height","textNoteChart","StyleSheet","create","backgroundTab","borderBottomWidth","borderBottomColor","marginRight","viewWallet","marginHorizontal","marginTop","lineHeight","marginLeft","lineItem","paddingTop","grayLight","position","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport {\r\n  TouchableOpacity,\r\n} from \"react-native-gesture-handler\";\r\nimport {\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryPie,\r\n  VictoryLine,\r\n  VictoryScatter,\r\n  VictoryAxis,\r\n  VictoryLabel,\r\n  VictoryGroup,\r\n  VictoryVoronoiContainer,\r\n} from \"victory-native\";\r\nimport { colors } from \"../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport DateTimePicker from \"../../../../components/datetimepicker\";\r\nimport { Icons } from \"../../../../assets\";\r\nimport PickerModel from \"../../../../components/picker/PickerModel\";\r\nimport DropDownPickerLine from \"../../../../components/DropDownPickerLine\";\r\nimport { IModalPicker } from \"../../../../models/Imodel\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nconst OnlineFoodDeliveryRevenue = () => {\r\n  const dimensions = Dimensions.get(\"window\");\r\n  const windowWidth = dimensions.width;\r\n  // ----Outlet\r\n  const outletModel = [\r\n    { label: \"Spa\", value: 1 },\r\n    { label: \"Ola Restaurant\", value: 2 },\r\n  ];\r\n  const [outlet, setOutlet] = useState(2);\r\n  const onchangeOutlet = async (data: any) => {\r\n    setOutlet(data);\r\n  };\r\n  // ----Picker\r\n  const dataTopPicker = [\r\n    { label: \"Food delivery company - All\", value: \"all\" },\r\n    { label: \"Grab\", value: \"grab\" },\r\n    { label: \"Baemin\", value: \"baemin\" },\r\n    { label: \"Shopee Food\", value: \"shopee\" },\r\n  ];\r\n  const [pickerTopValue, setPickerTopValue] = useState(dataTopPicker[0]);\r\n  const handlePicker = (value: IModalPicker) => {\r\n    setPickerTopValue(value);\r\n  };\r\n  // ----Body\r\n  const dataFieldSells = [\r\n    { title: \"Net Sales\", value: \"4,059,0000\" },\r\n    { title: \"Gross Sales\", value: \"4,059,0000\" },\r\n    { title: \"Transaction\", value: \"11\" },\r\n    { title: \"Order Cancel\", value: \"5\" },\r\n    { title: \"Average TC\", value: \"4,059,0000\" },\r\n  ];\r\n  // --------------------chart\r\n  const dataCharts = [\r\n    { title: \"Gross Sales\", data: [{ y: 2 }, { y: 1 }, { y: 4 }, { y: 3 }] },\r\n    { title: \"Transaction\", data: [{ y: 2 }, { y: 1 }, { y: 4 }, { y: 3 }] },\r\n    { title: \"Order Cancel\", data: [{ y: 2 }, { y: 1 }, { y: 4 }, { y: 3 }] },\r\n  ];\r\n  const dataTimeSales = [\r\n    { time: \"06:00 AM - 10:00 AM\", color: \"#70E6A3\" },\r\n    { time: \"10:00 AM - 02:00 PM\", color: \"#A24DE4\" },\r\n    { time: \"02:00 PM - 05:00 PM\", color: \"#06C2FF\" },\r\n    { time: \"05:00 PM - 00:00 AM\", color: \"#F68942\" },\r\n  ];\r\n  // ------chart col\r\n\r\n  const [modalVisibleSelect, setModalVisibleSelect] = useState(false);\r\n  const [pickerValueSelect, setPickerValueSelect] = useState(\"All\");\r\n\r\n  const whiteStyleBottom = {\r\n    axis: { stroke: colors.colorLine },\r\n    ticks: { stroke: colors.gray, size: 8, margin: 5 },\r\n    tickLabels: { fontSize: 10, padding: 5, fill: \"#A4A4A4\" },\r\n  };\r\n  const whiteStyle = {\r\n    grid: { stroke: colors.colorLine, strokeWidth: 0.25 },\r\n    axis: { stroke: colors.backgroundApp },\r\n    tickLabels: { fill: colors.colorChartLine, fontSize: 10 },\r\n  };\r\n\r\n  //MultiSelect\r\n  const dataModelSelect: {\r\n    label: string;\r\n    value: string;\r\n  }[] = [\r\n    { label: \"All\", value: \"all\" },\r\n    { label: \"Net Sales\", value: \"netSales\" },\r\n    { label: \"Gross Sales\", value: \"grossSales\" },\r\n    { label: \"Transaction\", value: \"transaction\" },\r\n    { label: \"Average TC\", value: \"averageTC\" },\r\n  ];\r\n\r\n  const [pickerValueChartDisplay, setPickerValueChartDisplay] = useState({\r\n    netSales: true,\r\n    grossSales: true,\r\n    transaction: true,\r\n    averageTC: true,\r\n  });\r\n\r\n  const [selectedChart, setSelectedChartValue] = useState([\r\n    \"all\",\r\n    \"netSales\",\r\n    \"grossSales\",\r\n    \"transaction\",\r\n    \"averageTC\",\r\n  ]);\r\n  function handleCheck(item: string) {\r\n    let data = selectedChart;\r\n    if (data.includes(item)) {\r\n      if (item === \"all\") {\r\n        data = [];\r\n        setPickerValueSelect(\"Select...\");\r\n        setPickerValueChartDisplay({\r\n          netSales: false,\r\n          grossSales: false,\r\n          transaction: false,\r\n          averageTC: false,\r\n        });\r\n      } else {\r\n        data = data.filter(i => i !== item);\r\n        data = data.filter(i => i !== \"all\");\r\n        let labelSeleted = \"\";\r\n        data.map((map, index) => {\r\n          dataModelSelect.map(model => {\r\n            if (map != \"all\") {\r\n              if (map === model.value) {\r\n                labelSeleted +=\r\n                  index != data.length - 1\r\n                    ? `${model.label}, `\r\n                    : `${model.label}`;\r\n              }\r\n            }\r\n          });\r\n        });\r\n        setPickerValueSelect(labelSeleted);\r\n        setPickerValueChartDisplay({\r\n          ...pickerValueChartDisplay,\r\n          [item]: false,\r\n        });\r\n      }\r\n      setSelectedChartValue(data);\r\n    } else {\r\n      if (item === \"all\") {\r\n        data = [];\r\n        dataModelSelect.map(item => {\r\n          data.push(item.value);\r\n          setPickerValueSelect(\"All\");\r\n        });\r\n        setPickerValueChartDisplay({\r\n          netSales: true,\r\n          grossSales: true,\r\n          transaction: true,\r\n          averageTC: true,\r\n        });\r\n      } else {\r\n        if (selectedChart.length === dataModelSelect.length - 2) {\r\n          data = [...data, \"all\"];\r\n        }\r\n        data = [...data, item];\r\n        if (data.length === dataModelSelect.length) {\r\n          setPickerValueSelect(\"All\");\r\n        } else {\r\n          let labelSeleted = \"\";\r\n          data.map((map, index) => {\r\n            dataModelSelect.map(model => {\r\n              if (map != \"all\") {\r\n                if (map === model.value) {\r\n                  labelSeleted +=\r\n                    index != data.length - 1\r\n                      ? `${model.label}, `\r\n                      : `${model.label}`;\r\n                }\r\n              }\r\n            });\r\n          });\r\n          setPickerValueSelect(labelSeleted);\r\n        }\r\n        setPickerValueChartDisplay({\r\n          ...pickerValueChartDisplay,\r\n          [item]: true,\r\n        });\r\n      }\r\n      setSelectedChartValue(data);\r\n    }\r\n  }\r\n  const renderViewChart = (net: boolean, gross: boolean, av: boolean) => {\r\n    let offset = 15;\r\n    let colorScale = [\"#F6606F\", \"#76D146\", \"#00DFFD\"];\r\n    if (net && !gross && !av) {\r\n      offset = 0;\r\n    }\r\n    if (!net && !gross && av) {\r\n      offset = 0;\r\n      colorScale = [\"#00DFFD\"];\r\n    }\r\n    if (!net && gross && !av) {\r\n      offset = 0;\r\n      colorScale = [\"#76D146\"];\r\n    }\r\n    if (net && !gross && av) {\r\n      colorScale = [\"#F6606F\", \"#00DFFD\"];\r\n    }\r\n    if (!net && gross && av) {\r\n      return (\r\n        <VictoryGroup\r\n          offset={15}\r\n          style={{ data: { width: 15 } }}\r\n          colorScale={[\"#76D146\", \"#00DFFD\"]}\r\n        >\r\n          <VictoryBar\r\n            animate={{\r\n              duration: 2000,\r\n              onLoad: { duration: 1000 },\r\n            }}\r\n            data={[\r\n              { x: 1, y: 260 },\r\n              { x: 2, y: 340 },\r\n              { x: 3, y: 340 },\r\n            ]}\r\n          />\r\n          <VictoryBar\r\n            animate={{\r\n              duration: 2000,\r\n              onLoad: { duration: 1000 },\r\n            }}\r\n            data={[\r\n              { x: 1, y: 200 },\r\n              { x: 2, y: 310 },\r\n              { x: 3, y: 150 },\r\n            ]}\r\n          />\r\n        </VictoryGroup>\r\n      );\r\n    } else {\r\n      return (\r\n        <VictoryGroup\r\n          offset={offset}\r\n          style={{ data: { width: 15 } }}\r\n          colorScale={colorScale}\r\n        >\r\n          {pickerValueChartDisplay.netSales && (\r\n            <VictoryBar\r\n              animate={{\r\n                duration: 2000,\r\n                onLoad: { duration: 1000 },\r\n              }}\r\n              data={[\r\n                { x: 1, y: 320 },\r\n                { x: 2, y: 380 },\r\n                { x: 3, y: 240 },\r\n              ]}\r\n            />\r\n          )}\r\n          {pickerValueChartDisplay.grossSales && (\r\n            <VictoryBar\r\n              animate={{\r\n                duration: 2000,\r\n                onLoad: { duration: 1000 },\r\n              }}\r\n              data={[\r\n                { x: 1, y: 260 },\r\n                { x: 2, y: 340 },\r\n                { x: 3, y: 340 },\r\n              ]}\r\n            />\r\n          )}\r\n          {pickerValueChartDisplay.averageTC && (\r\n            <VictoryBar\r\n              animate={{\r\n                duration: 2000,\r\n                onLoad: { duration: 1000 },\r\n              }}\r\n              data={[\r\n                { x: 1, y: 200 },\r\n                { x: 2, y: 310 },\r\n                { x: 3, y: 150 },\r\n              ]}\r\n            />\r\n          )}\r\n        </VictoryGroup>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        {/* -----------------Picker Outlet------------- */}\r\n        <PickerModel\r\n          data={outletModel}\r\n          defaultValue=\"Ola Restaurant\"\r\n          onSelectedValue={value => {\r\n            onchangeOutlet(value.value);\r\n          }}\r\n        ></PickerModel>\r\n        {/* ----------------------------------------------- */}\r\n\r\n        <View style={styles.line}></View>\r\n        <View style={{ paddingHorizontal: 15, marginBottom: 10 }}>\r\n          <View style={styles.titleHeader}>\r\n            <Text style={[styles.textTitleHeader, { textAlign: \"center\" }]}>\r\n              ONLINE FOOD DELIVERY REVENUE\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        {/* ---------------------------------------- */}\r\n        <DateTimePicker\r\n          onSubmitFromDate={date => {}}\r\n          onSubmitEndDate={date => {}}\r\n        ></DateTimePicker>\r\n        {/* ---------------------------------------- */}\r\n        <DropDownPickerLine\r\n          data={dataTopPicker}\r\n          onSelected={value => {\r\n            handlePicker(value);\r\n          }}\r\n          itemSelected={pickerTopValue}\r\n        ></DropDownPickerLine>\r\n        {/* ---------------------------------------- */}\r\n        <View\r\n          style={{\r\n            paddingVertical: 15,\r\n            paddingLeft: 15,\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          {dataFieldSells.map((item, index) => {\r\n            return (\r\n              <View\r\n                key={index}\r\n                style={[\r\n                  styles.itemFieldSells,\r\n                  { width: windowWidth / 2 - 15 - 7.5 },\r\n                ]}\r\n              >\r\n                <Text style={[styles.textGray, { marginBottom: 8 }]}>\r\n                  {item.title}\r\n                </Text>\r\n                <Text style={styles.text16}>{item.value}</Text>\r\n              </View>\r\n            );\r\n          })}\r\n        </View>\r\n        {/* ---------------------------------------- */}\r\n        <View>\r\n          <ScrollView\r\n            horizontal\r\n            indicatorStyle={\"white\"}\r\n            pagingEnabled\r\n            persistentScrollbar\r\n          >\r\n            {dataCharts.map((chart, iChart) => {\r\n              return (\r\n                <View\r\n                  style={{ alignItems: \"center\", width: windowWidth }}\r\n                  key={iChart}\r\n                >\r\n                  <Text style={[styles.text16, { marginBottom: 15 }]}>\r\n                    {pickerTopValue.value === \"all\"\r\n                      ? `Total ${chart.title}`\r\n                      : chart.title}\r\n                  </Text>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <VictoryPie\r\n                      width={windowWidth / 1.8}\r\n                      height={windowWidth / 1.8}\r\n                      theme={{\r\n                        pie: {\r\n                          padding: 15,\r\n                        },\r\n                      }}\r\n                      animate={{ duration: 2000 }}\r\n                      data={chart.data}\r\n                      colorScale={[\"#A24DE4\", \"#06C2FF\", \"#F68942\", \"#70E6A3\"]}\r\n                      style={{ labels: { fill: colors.backgroundApp } }}\r\n                    />\r\n                    <View style={{}}>\r\n                      {dataTimeSales.map((item, index) => {\r\n                        return (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              marginVertical: 4,\r\n                            }}\r\n                          >\r\n                            <View\r\n                              style={[\r\n                                styles.dot,\r\n                                { backgroundColor: item.color },\r\n                              ]}\r\n                            ></View>\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 12,\r\n                                fontWeight: \"500\",\r\n                                color: item.color,\r\n                              }}\r\n                            >\r\n                              {item.time}\r\n                            </Text>\r\n                          </View>\r\n                        );\r\n                      })}\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              );\r\n            })}\r\n          </ScrollView>\r\n        </View>\r\n\r\n        {/* --------------------chartCol */}\r\n        <View>\r\n          <View style={[styles.salectChart, { zIndex: 10 }]}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setModalVisibleSelect(!modalVisibleSelect);\r\n              }}\r\n            >\r\n              <View style={styles.chartPicker}>\r\n                <Text style={styles.textTitleHeader}>{pickerValueSelect}</Text>\r\n                <Ionicons name=\"caret-down\" size={20} color=\"#fff\" />\r\n              </View>\r\n            </TouchableOpacity>\r\n            {modalVisibleSelect && (\r\n              <View style={[styles.listPicker, { width: windowWidth - 30 }]}>\r\n                <View style={{ borderRadius: 4 }}>\r\n                  <View style={{ paddingVertical: 5 }}>\r\n                    {dataModelSelect.map((item, index) => {\r\n                      return (\r\n                        <TouchableOpacity\r\n                          key={index}\r\n                          onPress={() => handleCheck(item.value)}\r\n                          style={{\r\n                            paddingVertical: 10,\r\n                            flexDirection: \"row\",\r\n                            paddingLeft: 15,\r\n                          }}\r\n                        >\r\n                          {selectedChart.includes(item.value) ? (\r\n                            <View\r\n                              style={[\r\n                                styles.iconUnCheck,\r\n                                {\r\n                                  alignItems: \"center\",\r\n                                  justifyContent: \"center\",\r\n                                },\r\n                              ]}\r\n                            >\r\n                              <SvgUri source={Icons.iconTickCheckBox}></SvgUri>\r\n                            </View>\r\n                          ) : (\r\n                            <View style={styles.iconUnCheck}></View>\r\n                          )}\r\n\r\n                          <Text style={[styles.textTitleHeader]}>\r\n                            {item.label}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      );\r\n                    })}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            )}\r\n          </View>\r\n\r\n          <ScrollView\r\n            horizontal={true}  indicatorStyle={\"white\"} endFillColor={colors.backgroundApp} style={{backgroundColor: colors.backgroundApp}}\r\n          >\r\n            <View style={{ paddingHorizontal: 15 }}>\r\n              <View>\r\n                <VictoryChart\r\n                  domainPadding={{ x: 30, y: 40 }}\r\n                  padding={{ top: 5, bottom: 50, left: 90, right: 80 }}\r\n                  containerComponent={<VictoryVoronoiContainer />}\r\n                  style={{ parent: { cursor: \"pointer\" } }}\r\n                >\r\n                  <VictoryChart>\r\n                    <VictoryLabel\r\n                      y={210}\r\n                      x={5}\r\n                      angle={-90}\r\n                      style={{\r\n                        fontSize: 10,\r\n                        fontStyle: \"normal\",\r\n                        fill: colors.colorText,\r\n                      }}\r\n                      text={\"Net Sales - Gross Sales - Average TC \"}\r\n                    />\r\n                    <VictoryLabel\r\n                      y={150}\r\n                      x={windowWidth - 30}\r\n                      angle={-90}\r\n                      style={{\r\n                        fontSize: 10,\r\n                        fontStyle: \"normal\",\r\n                        fill: colors.colorText,\r\n                      }}\r\n                      text={\"Transaction\"}\r\n                    />\r\n                    <VictoryLabel\r\n                      y={250}\r\n                      x={70}\r\n                      style={{\r\n                        fontSize: 10,\r\n                        fontStyle: \"normal\",\r\n                        fill: colors.colorChartLine,\r\n                      }}\r\n                      text={\"0\"}\r\n                    />\r\n                    <VictoryLabel\r\n                      y={250}\r\n                      x={windowWidth - 65}\r\n                      style={{\r\n                        fontSize: 10,\r\n                        fontStyle: \"normal\",\r\n                        fill: colors.colorChartLine,\r\n                      }}\r\n                      text={\"0\"}\r\n                    />\r\n                    <VictoryAxis\r\n                      tickValues={[125.0, 250.0, 375.0, 500.0]}\r\n                      tickFormat={t => `${Math.round(t)}.000.000`}\r\n                      dependentAxis\r\n                      orientation=\"left\"\r\n                      style={whiteStyle}\r\n                    />\r\n                    <VictoryAxis\r\n                      tickValues={[\"Grab\", \"Baemin\", \"Shopee food\"]}\r\n                      style={whiteStyleBottom}\r\n                      orientation=\"bottom\"\r\n                    />\r\n\r\n                    <VictoryAxis\r\n                      tickValues={[125.0, 250.0, 375.0, 500.0]}\r\n                      tickFormat={t => `${Math.round(t)}`}\r\n                      dependentAxis\r\n                      orientation=\"right\"\r\n                      style={whiteStyle}\r\n                    />\r\n                  </VictoryChart>\r\n                  {/* ------------chart bar- */}\r\n                  {pickerValueChartDisplay.grossSales ||\r\n                  pickerValueChartDisplay.averageTC ||\r\n                  pickerValueChartDisplay.netSales ? (\r\n                    renderViewChart(\r\n                      pickerValueChartDisplay.netSales,\r\n                      pickerValueChartDisplay.grossSales,\r\n                      pickerValueChartDisplay.averageTC\r\n                    )\r\n                  ) : (\r\n                    <VictoryGroup></VictoryGroup>\r\n                  )}\r\n\r\n                  {/* ------------ */}\r\n                  {pickerValueChartDisplay.transaction && (\r\n                    <VictoryGroup\r\n                      data={[\r\n                        { x: 0.45, y: 350, fill: \"#DAB451\" },\r\n                        { x: 1, y: 150, fill: \"#DAB451\" },\r\n                        { x: 2, y: 270, fill: \"#DAB451\" },\r\n                        { x: 3, y: 230, fill: \"#DAB451\" },\r\n                        { x: 4, y: 0, fill: \"#DAB451\" },\r\n                      ]}\r\n                      color=\"#5F8BFC\"\r\n                    >\r\n                      <VictoryLine interpolation=\"natural\" />\r\n                      <VictoryScatter\r\n                        size={3}\r\n                        style={{\r\n                          data: {\r\n                            fill: ({ datum }) => datum.fill,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </VictoryGroup>\r\n                  )}\r\n                </VictoryChart>\r\n              </View>\r\n              <View style={styles.rowTableChart}>\r\n                <View style={{ flex: 2.5 }}>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {/* <SvgUri source={Icons.Ellipse_foc} /> */}\r\n                    <View\r\n                      style={{\r\n                        width: 8,\r\n                        height: 8,\r\n                        backgroundColor: \"#F6606F\",\r\n                      }}\r\n                    ></View>\r\n                    <Text style={[styles.textNoteChart, { color: \"#F6606F\" }]}>\r\n                      Net Sales\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                <View style={{ flex: 2.5 }}>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        width: 8,\r\n                        height: 8,\r\n                        backgroundColor: \"#76D146\",\r\n                      }}\r\n                    ></View>\r\n                    <Text style={[styles.textNoteChart, { color: \"#76D146\" }]}>\r\n                      Gross Sales\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                <View style={{ flex: 2.5 }}>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        width: 8,\r\n                        height: 8,\r\n                        backgroundColor: \"#00DFFD\",\r\n                      }}\r\n                    ></View>\r\n                    <Text style={[styles.textNoteChart, { color: \"#00DFFD\" }]}>\r\n                      Average TC\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                <View style={{ flex: 2.5 }}>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        width: 8,\r\n                        height: 2,\r\n                        backgroundColor: \"#5F8BFC\",\r\n                      }}\r\n                    ></View>\r\n                    <Text style={[styles.textNoteChart, { color: \"#5F8BFC\" }]}>\r\n                      Transaction\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default OnlineFoodDeliveryRevenue;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n  line: {\r\n    height: 10,\r\n    backgroundColor: colors.backgroundTab,\r\n  },\r\n\r\n  titleHeader: {\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.colorLine,\r\n  },\r\n\r\n  textTitleHeader: {\r\n    color: colors.colorText,\r\n    fontWeight: \"500\",\r\n    fontSize: 14,\r\n  },\r\n  text16: {\r\n    color: colors.colorText,\r\n    fontWeight: \"500\",\r\n    fontSize: 16,\r\n  },\r\n  textGray: {\r\n    color: colors.colorLine,\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n  itemFieldSells: {\r\n    height: 77,\r\n    backgroundColor: \"#414141\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 4,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n  },\r\n  viewWallet: {\r\n    backgroundColor: \"#675E50\",\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginHorizontal: 15,\r\n    marginTop: 4,\r\n  },\r\n  dot: {\r\n    width: 8,\r\n    height: 8,\r\n    marginRight: 4,\r\n    borderRadius: 8,\r\n  },\r\n\r\n  //chartCol\r\n  rowTableChart: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    height: 30,\r\n  },\r\n  textNoteChart: {\r\n    color: colors.colorText,\r\n    textAlign: \"center\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: 12,\r\n    lineHeight: 20,\r\n    marginLeft: 4,\r\n  },\r\n  lineItem: {\r\n    height: 0.5,\r\n    backgroundColor: colors.colorLine,\r\n  },\r\n  salectChart: {\r\n    paddingTop: 15,\r\n    paddingHorizontal: 15,\r\n  },\r\n\r\n  chartPicker: {\r\n    height: 40,\r\n    flexDirection: \"row\",\r\n    backgroundColor: colors.grayLight,\r\n    borderRadius: 4,\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n\r\n  listPicker: {\r\n    position: \"absolute\",\r\n    backgroundColor: colors.grayLight,\r\n    borderRadius: 4,\r\n    borderColor: colors.backgroundApp,\r\n    top: 60,\r\n    left: 15,\r\n  },\r\n\r\n  iconUnCheck: {\r\n    borderRadius: 4,\r\n    backgroundColor: \"transparent\",\r\n    width: 18,\r\n    height: 18,\r\n    borderColor: \"#fff\",\r\n    borderWidth: 1,\r\n    marginRight: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}