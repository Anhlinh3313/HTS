{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Environment } from \"../environment\";\nvar url = Environment.apiPost;\nexport var loginAsync = function loginAsync(_userName, _password) {\n  var response, res;\n  return _regeneratorRuntime.async(function loginAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Account/SignIn', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              'UserName': _userName,\n              'PassWord': _password\n            })\n          }));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          res = _context.sent;\n\n          if (!(res.isSuccess == '1')) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(_setdataStorage(res.data, _password));\n\n        case 10:\n          return _context.abrupt(\"return\", res);\n\n        case 11:\n          return _context.abrupt(\"return\", res);\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          alert(_context.t0);\n          return _context.abrupt(\"return\");\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};\n\nvar _setdataStorage = function _setdataStorage(data, password) {\n  var _data$token, _data$userFullName, _data$userId, _data$userName, _data$currencyMode$to;\n\n  return _regeneratorRuntime.async(function _setdataStorage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('password', password));\n\n        case 3:\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('accessToken', (_data$token = data == null ? void 0 : data.token) != null ? _data$token : ''));\n\n        case 5:\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('userFullName', (_data$userFullName = data == null ? void 0 : data.userFullName) != null ? _data$userFullName : ''));\n\n        case 7:\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('userId', (_data$userId = data == null ? void 0 : data.userId) != null ? _data$userId : ''));\n\n        case 9:\n          _context2.next = 11;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('userName', (_data$userName = data == null ? void 0 : data.userName) != null ? _data$userName : ''));\n\n        case 11:\n          _context2.next = 13;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('currencyMode', (_data$currencyMode$to = data == null ? void 0 : data.currencyMode.toString()) != null ? _data$currencyMode$to : '0'));\n\n        case 13:\n          _context2.next = 18;\n          break;\n\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", _context2.t0);\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 15]], Promise);\n};\n\nexport function _getUserId() {\n  return _regeneratorRuntime.async(function _getUserId$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userId'));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", null);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nexport function _getItem(key) {\n  return _regeneratorRuntime.async(function _getItem$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          return _context4.abrupt(\"return\", null);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nexport function _getToken() {\n  return _regeneratorRuntime.async(function _getToken$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accessToken'));\n\n        case 3:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 6:\n          _context5.prev = 6;\n          _context5.t0 = _context5[\"catch\"](0);\n          return _context5.abrupt(\"return\", null);\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nexport function _addCurrency(currency) {\n  return _regeneratorRuntime.async(function _addCurrency$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('currencyMode', currency != null ? currency : ''));\n\n        case 3:\n          return _context6.abrupt(\"return\", true);\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n          return _context6.abrupt(\"return\", false);\n\n        case 9:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nexport function _getCurrency() {\n  return _regeneratorRuntime.async(function _getCurrency$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('currencyMode'));\n\n        case 3:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 6:\n          _context7.prev = 6;\n          _context7.t0 = _context7[\"catch\"](0);\n          return _context7.abrupt(\"return\", _context7.t0);\n\n        case 9:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nexport function _getAccount() {\n  var username, password;\n  return _regeneratorRuntime.async(function _getAccount$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userName'));\n\n        case 3:\n          username = _context8.sent;\n          _context8.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('password'));\n\n        case 6:\n          password = _context8.sent;\n          return _context8.abrupt(\"return\", {\n            username: username,\n            password: password\n          });\n\n        case 10:\n          _context8.prev = 10;\n          _context8.t0 = _context8[\"catch\"](0);\n          return _context8.abrupt(\"return\", {\n            username: null,\n            password: null\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n}\nexport function _removeToken() {\n  return _regeneratorRuntime.async(function _removeToken$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem('accessToken'));\n\n        case 3:\n          _context9.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userFullName'));\n\n        case 5:\n          _context9.next = 7;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userId'));\n\n        case 7:\n          _context9.next = 9;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem('currencyMode'));\n\n        case 9:\n          return _context9.abrupt(\"return\", true);\n\n        case 12:\n          _context9.prev = 12;\n          _context9.t0 = _context9[\"catch\"](0);\n          return _context9.abrupt(\"return\", false);\n\n        case 15:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n}\nexport var getOPTCode = function getOPTCode(Email) {\n  var response, res;\n  return _regeneratorRuntime.async(function getOPTCode$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Account/GetOPTCode', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              Email: Email\n            })\n          }));\n\n        case 3:\n          response = _context10.sent;\n          _context10.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          res = _context10.sent;\n          return _context10.abrupt(\"return\", res);\n\n        case 10:\n          _context10.prev = 10;\n          _context10.t0 = _context10[\"catch\"](0);\n          alert(_context10.t0);\n          return _context10.abrupt(\"return\");\n\n        case 14:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var forgotPassword = function forgotPassword(OPT, PassWord, ConfirmPassword) {\n  var response, res;\n  return _regeneratorRuntime.async(function forgotPassword$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Account/ForgotPassword', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              OPT: OPT,\n              PassWord: PassWord,\n              ConfirmPassword: ConfirmPassword\n            })\n          }));\n\n        case 3:\n          response = _context11.sent;\n          _context11.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          res = _context11.sent;\n          return _context11.abrupt(\"return\", res);\n\n        case 10:\n          _context11.prev = 10;\n          _context11.t0 = _context11[\"catch\"](0);\n          alert(_context11.t0);\n          return _context11.abrupt(\"return\");\n\n        case 14:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/authService.tsx"],"names":["AsyncStorage","Environment","url","apiPost","loginAsync","_userName","_password","fetch","method","headers","Accept","body","JSON","stringify","response","json","res","isSuccess","_setdataStorage","data","alert","password","setItem","token","userFullName","userId","userName","currencyMode","toString","_getUserId","getItem","_getItem","key","_getToken","_addCurrency","currency","_getCurrency","_getAccount","username","_removeToken","removeItem","getOPTCode","Email","forgotPassword","OPT","PassWord","ConfirmPassword"],"mappings":"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","sourcesContent":["\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Environment } from \"../environment\";\r\nimport { IResponseModel } from \"../models/IResponseModel\";\r\n\r\nlet url = Environment.apiPost;\r\nexport const loginAsync = async (_userName: any, _password: any) => {\r\n    try {\r\n        let response = await fetch(url +'/api/Account/SignIn', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'UserName': _userName,\r\n                'PassWord': _password\r\n            })\r\n        })\r\n        let res = await response.json() as IResponseModel;\r\n        if (res.isSuccess == '1') {\r\n            await _setdataStorage(res.data, _password);\r\n            return res;\r\n        }\r\n        return res;\r\n    } catch (error) {\r\n        alert(error);\r\n        return;\r\n    }\r\n}\r\nconst _setdataStorage = async (data?: any, password?:any) => {\r\n    try {\r\n        await AsyncStorage.setItem('password',password);\r\n        await AsyncStorage.setItem('accessToken',data?.token??'');\r\n        await AsyncStorage.setItem('userFullName',data?.userFullName??'');\r\n        await AsyncStorage.setItem('userId',data?.userId??'');\r\n        await AsyncStorage.setItem('userName',data?.userName??'');\r\n        await AsyncStorage.setItem('currencyMode',data?.currencyMode.toString()??'0');\r\n    } catch (error) {\r\n        return (error);\r\n    }\r\n};\r\n\r\nexport async function _getUserId() {\r\n    try {\r\n         return await AsyncStorage.getItem('userId')\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\nexport async function _getItem(key:string) {\r\n    try {\r\n         return await AsyncStorage.getItem(key)\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function _getToken() {\r\n    try {\r\n        return await AsyncStorage.getItem('accessToken');\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function _addCurrency(currency:any) {\r\n    try {\r\n        await AsyncStorage.setItem('currencyMode',currency??'');\r\n        return true;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function _getCurrency() {\r\n    try {\r\n        return await AsyncStorage.getItem('currencyMode');\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\nexport async function _getAccount() {\r\n    try {\r\n        const username = await AsyncStorage.getItem('userName');\r\n        const password = await AsyncStorage.getItem('password');\r\n        return {username , password}\r\n    } catch (error) {\r\n        return {username:null , password:null};\r\n    }\r\n}\r\n\r\nexport async function _removeToken(){\r\n    try {\r\n            await AsyncStorage.removeItem('accessToken');\r\n            await AsyncStorage.removeItem('userFullName');\r\n            await AsyncStorage.removeItem('userId');\r\n            // await AsyncStorage.removeItem('userName');\r\n            await AsyncStorage.removeItem('currencyMode');\r\n            // await AsyncStorage.removeItem('password');\r\n            return true\r\n    } catch (error) {\r\n            return false;\r\n    }\r\n}\r\n\r\nexport const getOPTCode = async (Email:string) => {\r\n    try {\r\n        let response = await fetch(url +'/api/Account/GetOPTCode', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Email\r\n            })\r\n        })\r\n        let res = await response.json() as IResponseModel;\r\n        return res;\r\n    } catch (error) {\r\n        alert(error);\r\n        return;\r\n    }\r\n}\r\nexport const forgotPassword = async (OPT:string, PassWord:string, ConfirmPassword:string) => {\r\n    try {\r\n        let response = await fetch(url +'/api/Account/ForgotPassword', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                OPT,\r\n                PassWord,\r\n                ConfirmPassword\r\n            })\r\n        })\r\n        let res = await response.json() as IResponseModel;\r\n        return res;\r\n    } catch (error) {\r\n        alert(error);\r\n        return;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}