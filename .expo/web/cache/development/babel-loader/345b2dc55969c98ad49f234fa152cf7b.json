{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\login\\\\CreateNewPassword.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { colors } from \"../../../utils/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { forgotPassword } from \"../../../netWorking/authService\";\nimport Loading from \"../../../components/dialogs/Loading\";\nimport SendFail from \"../../../components/modalNotification/SendFail\";\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\n\nvar CreateNewPassword = function CreateNewPassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sent = _useState4[0],\n      setSent = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      statusSent = _useState6[0],\n      setStatusSent = _useState6[1];\n\n  var _statusInput = {\n    newPassword: {\n      isShowPass: false,\n      error: \"\"\n    },\n    confirmPassword: {\n      isShowPass: false,\n      error: \"\"\n    }\n  };\n  var _input = {\n    newPassword: \"\",\n    confirmPassword: \"\"\n  };\n\n  var _useState7 = useState(_input),\n      _useState8 = _slicedToArray(_useState7, 2),\n      input = _useState8[0],\n      setInput = _useState8[1];\n\n  var _useState9 = useState(_statusInput),\n      _useState10 = _slicedToArray(_useState9, 2),\n      statusInput = _useState10[0],\n      setStatusInput = _useState10[1];\n\n  var handleInput = function handleInput(key, value) {\n    setInput(_objectSpread(_objectSpread({}, input), {}, _defineProperty({}, key, value)));\n  };\n\n  var handleShowPass = function handleShowPass(type) {\n    var data = statusInput;\n    data[type].isShowPass = !data[type].isShowPass;\n    setStatusInput(_objectSpread(_objectSpread({}, statusInput), data));\n  };\n\n  var validateForm = function validateForm() {\n    if (input.newPassword == \"\") {\n      alert(\"New Password cannot be blank!\");\n      return false;\n    }\n\n    if (input.confirmPassword == \"\") {\n      alert(\"Confirm Password cannot be blank!\");\n      return false;\n    }\n\n    if (input.newPassword != input.confirmPassword) {\n      alert(\"Confirm password must be equal to password!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  var onSubmit = function onSubmit() {\n    var validate, res;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(validateForm());\n\n          case 2:\n            validate = _context.sent;\n\n            if (!validate) {\n              _context.next = 10;\n              break;\n            }\n\n            setIsLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(forgotPassword(props.route.params.otp, input.newPassword, input.confirmPassword));\n\n          case 7:\n            res = _context.sent;\n            setIsLoading(false);\n\n            if (res.isSuccess === 1) {\n              setSent(\"success\");\n              setStatusSent(res.message);\n            } else {\n              setSent(\"fail\");\n              setStatusSent(res.message);\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ViewInput = function ViewInput(type, valueInput, placeholder) {\n    return React.createElement(View, {\n      style: {\n        height: 56,\n        marginTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        height: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, statusInput[type].error == \"\" ? React.createElement(React.Fragment, null) : React.createElement(Text, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 52\n      }\n    }, statusInput[type].error)), React.createElement(View, {\n      style: [styles.viewInput, {\n        borderColor: statusInput[type].error == \"\" ? colors.black : \"red\",\n        borderWidth: 1\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, React.createElement(TextInput, {\n      style: styles.textInput,\n      value: valueInput,\n      onChangeText: function onChangeText(text) {\n        return handleInput(type, text);\n      },\n      placeholder: placeholder,\n      placeholderTextColor: \"#BDBDBD\",\n      secureTextEntry: !statusInput[type].isShowPass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: styles.showPass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, React.createElement(Ionicons, {\n      name: statusInput[type].isShowPass ? \"eye\" : \"eye-off\",\n      size: 20,\n      color: \"#fff\",\n      onPress: function onPress() {\n        handleShowPass(type);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return React.createElement(TouchableNativeFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.rowlogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formlogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, ViewInput(\"newPassword\", input.newPassword, \"New Password\"), ViewInput(\"confirmPassword\", input.confirmPassword, \"Confirm Password\"), React.createElement(LinearGradient, {\n    style: styles.button,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      onSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Complete\"))))), React.createElement(SendSuccess, {\n    title: statusSent,\n    visible: sent === \"success\",\n    onRequestClose: function onRequestClose() {\n      setSent(\"\");\n      props.navigation.replace(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), React.createElement(SendFail, {\n    title: statusSent,\n    visible: sent === \"fail\",\n    onRequestClose: function onRequestClose() {\n      setSent(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), isLoading && React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default CreateNewPassword;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#17151C\"\n  },\n  title: {\n    color: colors.gray,\n    fontSize: 14,\n    textAlign: \"center\",\n    marginBottom: 30,\n    fontWeight: \"400\"\n  },\n  textButton: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 17\n  },\n  rowlogin: {\n    flex: 7,\n    justifyContent: \"space-between\",\n    paddingTop: 60,\n    paddingBottom: 0\n  },\n  formlogin: {\n    justifyContent: \"flex-start\",\n    paddingRight: 30,\n    paddingLeft: 30\n  },\n  viewInput: {\n    flexDirection: \"row\",\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\n    height: 46,\n    borderRadius: 4,\n    zIndex: 1\n  },\n  textInput: {\n    color: \"white\",\n    opacity: 1,\n    zIndex: 3,\n    width: \"100%\",\n    paddingLeft: 15,\n    fontSize: 14,\n    fontWeight: \"400\"\n  },\n  button: {\n    marginTop: 32,\n    borderRadius: 4,\n    height: 46,\n    justifyContent: \"center\"\n  },\n  errorText: {\n    color: colors.red,\n    marginLeft: 5,\n    fontWeight: \"500\",\n    fontSize: 12,\n    marginStart: 15\n  },\n  showPass: {\n    justifyContent: \"center\",\n    position: \"absolute\",\n    right: 0,\n    zIndex: 4,\n    width: 40,\n    height: 50,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/login/CreateNewPassword.tsx"],"names":["React","useState","colors","LinearGradient","Ionicons","forgotPassword","Loading","SendFail","SendSuccess","CreateNewPassword","props","isLoading","setIsLoading","sent","setSent","statusSent","setStatusSent","_statusInput","newPassword","isShowPass","error","confirmPassword","_input","input","setInput","statusInput","setStatusInput","handleInput","key","value","handleShowPass","type","data","validateForm","alert","onSubmit","validate","route","params","otp","res","isSuccess","message","ViewInput","valueInput","placeholder","height","marginTop","styles","errorText","viewInput","borderColor","black","borderWidth","textInput","text","showPass","Keyboard","dismiss","container","rowlogin","formlogin","button","textButton","navigation","replace","StyleSheet","create","flex","backgroundColor","title","color","gray","fontSize","textAlign","marginBottom","fontWeight","justifyContent","paddingTop","paddingBottom","paddingRight","paddingLeft","flexDirection","borderRadius","zIndex","opacity","width","red","marginLeft","marginStart","position","right","alignItems"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAcA,SAASC,MAAT;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,cAAT;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAkB;AAC1C,kBAAkCT,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOU,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwBX,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAoCb,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOc,UAAP;AAAA,MAAmBC,aAAnB;;AAUA,MAAMC,YAAY,GAAG;AACnBC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KADM;AAEnBC,IAAAA,eAAe,EAAE;AAAEF,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,KAAK,EAAE;AAA5B;AAFE,GAArB;AAIA,MAAME,MAAM,GAAG;AACbJ,IAAAA,WAAW,EAAE,EADA;AAEbG,IAAAA,eAAe,EAAE;AAFJ,GAAf;;AAKA,mBAA0BpB,QAAQ,CAAYqB,MAAZ,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAsCvB,QAAQ,CAACgB,YAAD,CAA9C;AAAA;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAcC,KAAd,EAA6B;AAC/CL,IAAAA,QAAQ,iCAAMD,KAAN,2BAAcK,GAAd,EAAoBC,KAApB,GAAR;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAwB;AAC7C,QAAIC,IAAI,GAAGP,WAAX;AACAO,IAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWZ,UAAX,GAAwB,CAACa,IAAI,CAACD,IAAD,CAAJ,CAAWZ,UAApC;AACAO,IAAAA,cAAc,iCAAMD,WAAN,GAAsBO,IAAtB,EAAd;AACD,GAJD;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIV,KAAK,CAACL,WAAN,IAAqB,EAAzB,EAA6B;AAC3BgB,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACA,aAAO,KAAP;AACD;;AAED,QAAIX,KAAK,CAACF,eAAN,IAAyB,EAA7B,EAAiC;AAC/Ba,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACA,aAAO,KAAP;AACD;;AACD,QAAIX,KAAK,CAACL,WAAN,IAAqBK,KAAK,CAACF,eAA/B,EAAgD;AAC9Ca,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAfD;;AAgBA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACMF,YAAY,EADlB;;AAAA;AACXG,YAAAA,QADW;;AAAA,iBAEXA,QAFW;AAAA;AAAA;AAAA;;AAGbxB,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAHa;AAAA,6CAIKP,cAAc,CAACK,KAAK,CAAC2B,KAAN,CAAYC,MAAZ,CAAmBC,GAApB,EAAyBhB,KAAK,CAACL,WAA/B,EAA4CK,KAAK,CAACF,eAAlD,CAJnB;;AAAA;AAIPmB,YAAAA,GAJO;AAKb5B,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,gBAAI4B,GAAG,CAACC,SAAJ,KAAkB,CAAtB,EAAyB;AACvB3B,cAAAA,OAAO,CAAC,SAAD,CAAP;AACAE,cAAAA,aAAa,CAACwB,GAAG,CAACE,OAAL,CAAb;AACD,aAHD,MAGO;AACL5B,cAAAA,OAAO,CAAC,MAAD,CAAP;AACAE,cAAAA,aAAa,CAACwB,GAAG,CAACE,OAAL,CAAb;AACD;;AAZY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAeA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACZ,IAAD,EAAqBa,UAArB,EAAqDC,WAArD,EAA6E;AAC7F,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,SAAS,EAAE;AAAzB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,WAAW,CAACM,IAAD,CAAX,CAAkBX,KAAlB,IAA2B,EAA3B,GAAgC,yCAAhC,GAAwC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE4B,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCxB,WAAW,CAACM,IAAD,CAAX,CAAkBX,KAAlD,CAD3C,CADF,EAIE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,CACL4B,MAAM,CAACE,SADF,EAEL;AACEC,QAAAA,WAAW,EAAE1B,WAAW,CAACM,IAAD,CAAX,CAAkBX,KAAlB,IAA2B,EAA3B,GAAgClB,MAAM,CAACkD,KAAvC,GAA+C,KAD9D;AAEEC,QAAAA,WAAW,EAAE;AAFf,OAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEL,MAAM,CAACM,SADhB;AAEE,MAAA,KAAK,EAAEV,UAFT;AAGE,MAAA,YAAY,EAAE,sBAAAW,IAAI;AAAA,eAAI5B,WAAW,CAACI,IAAD,EAAOwB,IAAP,CAAf;AAAA,OAHpB;AAIE,MAAA,WAAW,EAAEV,WAJf;AAKE,MAAA,oBAAoB,EAAC,SALvB;AAME,MAAA,eAAe,EAAE,CAACpB,WAAW,CAACM,IAAD,CAAX,CAAkBZ,UANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE6B,MAAM,CAACQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE/B,WAAW,CAACM,IAAD,CAAX,CAAkBZ,UAAlB,GAA+B,KAA/B,GAAuC,SAD/C;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,OAAO,EAAE,mBAAM;AACbW,QAAAA,cAAc,CAACC,IAAD,CAAd;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjBF,CAJF,CADF;AAmCD,GApCD;;AAsCA,SACE,oBAAC,uBAAD;AAAyB,IAAA,OAAO,EAAE0B,QAAQ,CAACC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,SAAS,CAAC,aAAD,EAAgBpB,KAAK,CAACL,WAAtB,EAAmC,cAAnC,CADZ,EAEGyB,SAAS,CAAC,iBAAD,EAAoBpB,KAAK,CAACF,eAA1B,EAA2C,kBAA3C,CAFZ,EAGE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE2B,MAAM,CAACc,MAA9B;AAAsC,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACb3B,MAAAA,QAAQ;AACT,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACe,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF,CAHF,CADF,CADF,EAgBE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEhD,UADT;AAEE,IAAA,OAAO,EAAEF,IAAI,KAAK,SAFpB;AAGE,IAAA,cAAc,EAAE,0BAAM;AACpBC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAJ,MAAAA,KAAK,CAACsD,UAAN,CAAiBC,OAAjB,CAAyB,OAAzB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAwBE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAElD,UADT;AAEE,IAAA,OAAO,EAAEF,IAAI,KAAK,MAFpB;AAGE,IAAA,cAAc,EAAE,0BAAM;AACpBC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EA+BGH,SAAS,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BhB,CADF,CADF;AAqCD,CA7ID;;AA+IA,eAAeF,iBAAf;AAEA,IAAMuC,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAErE,MAAM,CAACsE,IADT;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,YAAY,EAAE,EAJT;AAKLC,IAAAA,UAAU,EAAE;AALP,GALwB;AAY/Bb,EAAAA,UAAU,EAAE;AACVW,IAAAA,SAAS,EAAE,QADD;AAEVH,IAAAA,KAAK,EAAE,OAFG;AAGVE,IAAAA,QAAQ,EAAE;AAHA,GAZmB;AAiB/Bb,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,IAAI,EAAE,CADE;AAERS,IAAAA,cAAc,EAAE,eAFR;AAGRC,IAAAA,UAAU,EAAE,EAHJ;AAIRC,IAAAA,aAAa,EAAE;AAJP,GAjBqB;AAuB/BlB,EAAAA,SAAS,EAAE;AACTgB,IAAAA,cAAc,EAAE,YADP;AAETG,IAAAA,YAAY,EAAE,EAFL;AAGTC,IAAAA,WAAW,EAAE;AAHJ,GAvBoB;AA4B/B/B,EAAAA,SAAS,EAAE;AACTgC,IAAAA,aAAa,EAAE,KADN;AAETb,IAAAA,eAAe,EAAE,0BAFR;AAGTvB,IAAAA,MAAM,EAAE,EAHC;AAITqC,IAAAA,YAAY,EAAE,CAJL;AAMTC,IAAAA,MAAM,EAAE;AANC,GA5BoB;AAoC/B9B,EAAAA,SAAS,EAAE;AACTiB,IAAAA,KAAK,EAAE,OADE;AAETc,IAAAA,OAAO,EAAE,CAFA;AAGTD,IAAAA,MAAM,EAAE,CAHC;AAITE,IAAAA,KAAK,EAAE,MAJE;AAKTL,IAAAA,WAAW,EAAE,EALJ;AAMTR,IAAAA,QAAQ,EAAE,EAND;AAOTG,IAAAA,UAAU,EAAE;AAPH,GApCoB;AA6C/Bd,EAAAA,MAAM,EAAE;AACNf,IAAAA,SAAS,EAAE,EADL;AAENoC,IAAAA,YAAY,EAAE,CAFR;AAGNrC,IAAAA,MAAM,EAAE,EAHF;AAIN+B,IAAAA,cAAc,EAAE;AAJV,GA7CuB;AAmD/B5B,EAAAA,SAAS,EAAE;AACTsB,IAAAA,KAAK,EAAErE,MAAM,CAACqF,GADL;AAETC,IAAAA,UAAU,EAAE,CAFH;AAGTZ,IAAAA,UAAU,EAAE,KAHH;AAITH,IAAAA,QAAQ,EAAE,EAJD;AAKTgB,IAAAA,WAAW,EAAE;AALJ,GAnDoB;AA0D/BjC,EAAAA,QAAQ,EAAE;AACRqB,IAAAA,cAAc,EAAE,QADR;AAERa,IAAAA,QAAQ,EAAE,UAFF;AAGRC,IAAAA,KAAK,EAAE,CAHC;AAIRP,IAAAA,MAAM,EAAE,CAJA;AAKRE,IAAAA,KAAK,EAAE,EALC;AAMRxC,IAAAA,MAAM,EAAE,EANA;AAOR8C,IAAAA,UAAU,EAAE;AAPJ;AA1DqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Keyboard,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { AuthorStackParamList } from \"../../../types\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { forgotPassword } from \"../../../netWorking/authService\";\r\nimport Loading from \"../../../components/dialogs/Loading\";\r\nimport SendFail from \"../../../components/modalNotification/SendFail\";\r\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\r\ninterface Props {\r\n  navigation: StackNavigationProp<AuthorStackParamList>;\r\n  route: RouteProp<AuthorStackParamList, \"CreateNewPassword\">;\r\n}\r\nconst CreateNewPassword = (props: Props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [sent, setSent] = useState(\"\");\r\n  const [statusSent, setStatusSent] = useState(\"\");\r\n  interface IStatus {\r\n    isShowPass: boolean;\r\n    error: string;\r\n  }\r\n  interface IInput {\r\n    newPassword: IStatus;\r\n    confirmPassword: IStatus;\r\n  }\r\n\r\n  const _statusInput = {\r\n    newPassword: { isShowPass: false, error: \"\" },\r\n    confirmPassword: { isShowPass: false, error: \"\" },\r\n  };\r\n  const _input = {\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const [input, setInput] = useState<IPassword>(_input);\r\n  const [statusInput, setStatusInput] = useState(_statusInput);\r\n\r\n  const handleInput = (key: string, value: any) => {\r\n    setInput({ ...input, [key]: value });\r\n  };\r\n\r\n  const handleShowPass = (type: keyof IInput) => {\r\n    let data = statusInput;\r\n    data[type].isShowPass = !data[type].isShowPass;\r\n    setStatusInput({ ...statusInput, ...data });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (input.newPassword == \"\") {\r\n      alert(\"New Password cannot be blank!\");\r\n      return false;\r\n    }\r\n\r\n    if (input.confirmPassword == \"\") {\r\n      alert(\"Confirm Password cannot be blank!\");\r\n      return false;\r\n    }\r\n    if (input.newPassword != input.confirmPassword) {\r\n      alert(\"Confirm password must be equal to password!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const onSubmit = async () => {\r\n    let validate = await validateForm();\r\n    if (validate) {\r\n      setIsLoading(true);\r\n      const res = await forgotPassword(props.route.params.otp, input.newPassword, input.confirmPassword);\r\n      setIsLoading(false);\r\n      if (res.isSuccess === 1) {\r\n        setSent(\"success\");\r\n        setStatusSent(res.message)\r\n      } else {\r\n        setSent(\"fail\");\r\n        setStatusSent(res.message)\r\n      }\r\n    }\r\n  };\r\n  const ViewInput = (type: keyof IInput, valueInput: string | undefined, placeholder: string) => {\r\n    return (\r\n      <View style={{ height: 56, marginTop: 5 }}>\r\n        <View style={{ height: 15 }}>\r\n          {statusInput[type].error == \"\" ? <></> : <Text style={styles.errorText}>{statusInput[type].error}</Text>}\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.viewInput,\r\n            {\r\n              borderColor: statusInput[type].error == \"\" ? colors.black : \"red\",\r\n              borderWidth: 1,\r\n            },\r\n          ]}\r\n        >\r\n          <TextInput\r\n            style={styles.textInput}\r\n            value={valueInput}\r\n            onChangeText={text => handleInput(type, text)}\r\n            placeholder={placeholder}\r\n            placeholderTextColor=\"#BDBDBD\"\r\n            secureTextEntry={!statusInput[type].isShowPass}\r\n          ></TextInput>\r\n          <TouchableOpacity style={styles.showPass}>\r\n            <Ionicons\r\n              name={statusInput[type].isShowPass ? \"eye\" : \"eye-off\"}\r\n              size={20}\r\n              color=\"#fff\"\r\n              onPress={() => {\r\n                handleShowPass(type);\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TouchableNativeFeedback onPress={Keyboard.dismiss}>\r\n      <View style={styles.container}>\r\n        <View style={styles.rowlogin}>\r\n          <View style={styles.formlogin}>\r\n            {ViewInput(\"newPassword\", input.newPassword, \"New Password\")}\r\n            {ViewInput(\"confirmPassword\", input.confirmPassword, \"Confirm Password\")}\r\n            <LinearGradient style={styles.button} colors={[\"#DAB451\", \"#988050\"]}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  onSubmit();\r\n                }}\r\n              >\r\n                <Text style={styles.textButton}>Complete</Text>\r\n              </TouchableOpacity>\r\n            </LinearGradient>\r\n          </View>\r\n        </View>\r\n        <SendSuccess\r\n          title={statusSent}\r\n          visible={sent === \"success\"}\r\n          onRequestClose={() => {\r\n            setSent(\"\");\r\n            props.navigation.replace(\"Login\");\r\n          }}\r\n        ></SendSuccess>\r\n        <SendFail\r\n          title={statusSent}\r\n          visible={sent === \"fail\"}\r\n          onRequestClose={() => {\r\n            setSent(\"\");\r\n          }}\r\n        ></SendFail>\r\n        {isLoading && <Loading></Loading>}\r\n      </View>\r\n    </TouchableNativeFeedback>\r\n  );\r\n};\r\n\r\nexport default CreateNewPassword;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#17151C\",\r\n  },\r\n  title: {\r\n    color: colors.gray,\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n    fontWeight: \"400\",\r\n  },\r\n  textButton: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 17,\r\n  },\r\n  rowlogin: {\r\n    flex: 7,\r\n    justifyContent: \"space-between\",\r\n    paddingTop: 60,\r\n    paddingBottom: 0,\r\n  },\r\n  formlogin: {\r\n    justifyContent: \"flex-start\",\r\n    paddingRight: 30,\r\n    paddingLeft: 30,\r\n  },\r\n  viewInput: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\r\n    height: 46,\r\n    borderRadius: 4,\r\n    // marginBottom: 20,\r\n    zIndex: 1,\r\n  },\r\n  textInput: {\r\n    color: \"white\",\r\n    opacity: 1,\r\n    zIndex: 3,\r\n    width: \"100%\",\r\n    paddingLeft: 15,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n  button: {\r\n    marginTop: 32,\r\n    borderRadius: 4,\r\n    height: 46,\r\n    justifyContent: \"center\",\r\n  },\r\n  errorText: {\r\n    color: colors.red,\r\n    marginLeft: 5,\r\n    fontWeight: \"500\",\r\n    fontSize: 12,\r\n    marginStart: 15,\r\n  },\r\n  showPass: {\r\n    justifyContent: \"center\",\r\n    position: \"absolute\",\r\n    right: 0,\r\n    zIndex: 4,\r\n    width: 40,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}