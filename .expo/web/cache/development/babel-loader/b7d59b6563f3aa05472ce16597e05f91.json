{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabHome\\\\RevenueBySubCategory.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\nimport { getNoSalesAtAllByCategory, getProductByReportNo, getTotalRevenueAndQuality } from \"../../../netWorking/SpeedposService\";\nimport HomeDateTimePicker from \"../../../components/homeDatetimePicker\";\nimport PickerModel from \"../../../components/picker/PickerModel\";\nimport { colors } from \"../../../utils/Colors\";\nimport { Icons } from \"../../../assets\";\nimport { Table, Row, Cell, TableWrapper } from \"react-native-table-component\";\nimport SvgUri from \"react-native-svg-uri\";\nimport DropDownPickerLine from \"../../../components/DropDownPickerLine\";\nimport DialogAwait from \"../../../components/dialogs/Loading\";\nimport moment from \"moment\";\n\nvar RevenueBySubCategory = function RevenueBySubCategory(props) {\n  var _Money, _total$quanlity;\n\n  var _props$route$params$d = props.route.params.data,\n      dataRevenue = _props$route$params$d.dataRevenue,\n      id = _props$route$params$d.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemSold = _useState4[0],\n      setItemSold = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      noSales = _useState6[0],\n      setNoSales = _useState6[1];\n\n  var _useState7 = useState({\n    quanlity: 0,\n    revenueProductGroup: 0\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      total = _useState8[0],\n      setTotal = _useState8[1];\n\n  var _useState9 = useState(dataRevenue[id - 1]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      category = _useState10[0],\n      setCategory = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sort = _useState12[0],\n      setSort = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      checDateDefault = _useState14[0],\n      setChecDateDefault = _useState14[1];\n\n  var _useState15 = useState(moment(new Date().setDate(new Date().getDate() - 1)).format(\"YYYY-MM-DD 00:00:00\")),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fromDateTime = _useState16[0],\n      setFromDateTime = _useState16[1];\n\n  var _useState17 = useState(moment(new Date().setDate(new Date().getDate() - 1)).format(\"YYYY-MM-DD 23:59:00\")),\n      _useState18 = _slicedToArray(_useState17, 2),\n      endDateTime = _useState18[0],\n      setEndDateTime = _useState18[1];\n\n  var onchangeOutlet = function onchangeOutlet(data) {\n    return _regeneratorRuntime.async(function onchangeOutlet$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var OnchangeFromDateTime = function OnchangeFromDateTime(dateTime) {\n    return _regeneratorRuntime.async(function OnchangeFromDateTime$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setFromDateTime(moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var OnchangeEndDateTime = function OnchangeEndDateTime(dateTime) {\n    return _regeneratorRuntime.async(function OnchangeEndDateTime$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setEndDateTime(moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkFromdateAnDateEndHome = function checkFromdateAnDateEndHome() {\n    if (dataRevenue[id - 1].fromdate) {\n      setFromDateTime(dataRevenue[id - 1].fromdate);\n    }\n\n    if (dataRevenue[id - 1].enddate) {\n      setEndDateTime(dataRevenue[id - 1].enddate);\n    }\n\n    setChecDateDefault(false);\n  };\n\n  var sortItemSold = function sortItemSold() {\n    var _itemSold = itemSold;\n\n    if (sort) {\n      _itemSold.sort(function (a, b) {\n        return a[1] - b[1];\n      });\n    } else _itemSold.sort(function (a, b) {\n      return b[1] - a[1];\n    });\n\n    setItemSold(_itemSold);\n    setSort(!sort);\n  };\n\n  var ViewCellSort = function ViewCellSort() {\n    return React.createElement(TouchableOpacity, {\n      onPress: sortItemSold,\n      style: [{\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Quantity\"), React.createElement(SvgUri, {\n      source: Icons.iconSoft,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var getListNoSales = function getListNoSales() {\n    var res, _noSales, dataRes;\n\n    return _regeneratorRuntime.async(function getListNoSales$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setIsLoading(true);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(getNoSalesAtAllByCategory(category.value, fromDateTime, endDateTime));\n\n          case 3:\n            res = _context4.sent;\n\n            if (res.isSuccess == 1) {\n              _noSales = [];\n              dataRes = res.data;\n              dataRes.map(function (map) {\n                _noSales.push([map.prodName]);\n              });\n              setNoSales(_noSales);\n            }\n\n            setIsLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getListItemSold = function getListItemSold() {\n    var res, _itemSold, dataRes;\n\n    return _regeneratorRuntime.async(function getListItemSold$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(getProductByReportNo(category.value, fromDateTime, endDateTime));\n\n          case 2:\n            res = _context5.sent;\n\n            if (res.isSuccess == 1) {\n              _itemSold = [];\n              dataRes = res.data;\n              dataRes.map(function (map) {\n                _itemSold.push([map.prodName, map.quantity, map.revenueProductGroup ? Money(map.revenueProductGroup) : 0]);\n              });\n              setItemSold(_itemSold);\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getRevenueAndQuality = function getRevenueAndQuality() {\n    var res;\n    return _regeneratorRuntime.async(function getRevenueAndQuality$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(getTotalRevenueAndQuality(category.value, fromDateTime, endDateTime));\n\n          case 2:\n            res = _context6.sent;\n\n            if (res.isSuccess === 1 && res.data.length > 0) {\n              setTotal(res.data[0]);\n            } else {\n              setTotal({\n                quanlity: 0,\n                revenueProductGroup: 0\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (checDateDefault) {\n      checkFromdateAnDateEndHome();\n    }\n  }, []);\n  useEffect(function () {\n    getListNoSales();\n    getListItemSold();\n    getRevenueAndQuality();\n  }, [category, fromDateTime, endDateTime]);\n  return React.createElement(View, {\n    style: styles.mainBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(PickerModel, {\n    defaultValue: \"Ola Restaurant\",\n    onSelectedValue: function onSelectedValue(value) {\n      onchangeOutlet(value.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), React.createElement(HomeDateTimePicker, {\n    fromDate: dataRevenue[id - 1].fromdate,\n    endDate: dataRevenue[id - 1].enddate,\n    onSubmitFromDate: function onSubmitFromDate(date) {\n      return OnchangeFromDateTime(date);\n    },\n    onSubmitEndDate: function onSubmitEndDate(date) {\n      return OnchangeEndDateTime(date);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.viewLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), React.createElement(DropDownPickerLine, {\n    data: _toConsumableArray(new Map(dataRevenue.map(function (item) {\n      return [item['value'], item];\n    })).values()),\n    onSelected: function onSelected(value) {\n      setCategory(value);\n    },\n    itemSelected: category,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: [styles.viewTotalRevenue, {\n      marginRight: 15\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.textGray, {\n      marginBottom: 8\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Total Revenue\"), React.createElement(Text, {\n    style: styles.text16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, (_Money = Money(total.revenueProductGroup)) != null ? _Money : 0, \" VND\")), React.createElement(View, {\n    style: styles.viewTotalRevenue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.textGray, {\n      marginBottom: 8\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Quanlity\"), React.createElement(Text, {\n    style: styles.text16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, (_total$quanlity = total.quanlity) != null ? _total$quanlity : 0))), React.createElement(View, {\n    style: {\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.textGray, {\n      marginBottom: 8\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Revenue Item Sold By Category\"), React.createElement(Table, {\n    style: {\n      backgroundColor: \"#414141\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, React.createElement(TableWrapper, {\n    style: {\n      flexDirection: \"row\",\n      height: 36,\n      backgroundColor: \"#878787\",\n      paddingLeft: 10,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, React.createElement(Cell, {\n    key: 1,\n    data: \"Product\",\n    style: {\n      flex: 3\n    },\n    textStyle: styles.text14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }), React.createElement(Cell, {\n    key: 2,\n    data: ViewCellSort(),\n    style: {\n      flex: 2\n    },\n    textStyle: styles.text14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), React.createElement(Cell, {\n    key: 3,\n    data: \"Total\",\n    style: {\n      flex: 2\n    },\n    textStyle: styles.text14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  })), itemSold.map(function (item, index) {\n    return React.createElement(Row, {\n      key: index,\n      data: item,\n      style: [styles.styleRowTable, index % 2 === 0 && {\n        backgroundColor: \"#8D7550\"\n      }, {\n        paddingLeft: 10\n      }],\n      flexArr: [3, 2, 2],\n      textStyle: [styles.text14, {\n        backgroundColor: \"#ff0\",\n        alignSelf: \"flex-start\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      padding: 15,\n      marginBottom: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.textGray, {\n      marginBottom: 8\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"No Sales At All By Category\"), React.createElement(Table, {\n    style: {\n      backgroundColor: \"#414141\",\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, React.createElement(Row, {\n    data: [\"Product\"],\n    style: {\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      height: 36,\n      backgroundColor: \"#878787\",\n      paddingLeft: 10\n    },\n    flexArr: [1],\n    textStyle: styles.text14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: {\n      maxHeight: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      maxHeight: 300\n    },\n    data: noSales,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(Row, {\n        key: index,\n        data: item,\n        style: [styles.styleRowTable, index % 2 === 0 && {\n          backgroundColor: \"#8D7550\"\n        }, {\n          paddingLeft: 10\n        }],\n        flexArr: [1],\n        textStyle: [styles.text14, {\n          backgroundColor: \"#ff0\",\n          alignSelf: \"flex-start\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 23\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  })))))), isLoading && React.createElement(DialogAwait, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }));\n};\n\nexport default RevenueBySubCategory;\nvar styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  viewLine: {\n    height: 10,\n    backgroundColor: \"#414141\"\n  },\n  textGray: {\n    color: colors.gray\n  },\n  text16: {\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: colors.colorText\n  },\n  text14: {\n    fontSize: 14,\n    fontWeight: \"400\",\n    color: colors.colorText\n  },\n  viewTotalRevenue: {\n    flex: 1,\n    backgroundColor: \"#414141\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    paddingVertical: 12\n  },\n  styleRowTable: {\n    height: 36\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabHome/RevenueBySubCategory.tsx"],"names":["React","useEffect","useState","Money","getNoSalesAtAllByCategory","getProductByReportNo","getTotalRevenueAndQuality","HomeDateTimePicker","PickerModel","colors","Icons","Table","Row","Cell","TableWrapper","SvgUri","DropDownPickerLine","DialogAwait","moment","RevenueBySubCategory","props","route","params","data","dataRevenue","id","isLoading","setIsLoading","itemSold","setItemSold","noSales","setNoSales","quanlity","revenueProductGroup","total","setTotal","category","setCategory","sort","setSort","checDateDefault","setChecDateDefault","Date","setDate","getDate","format","fromDateTime","setFromDateTime","endDateTime","setEndDateTime","onchangeOutlet","OnchangeFromDateTime","dateTime","OnchangeEndDateTime","checkFromdateAnDateEndHome","fromdate","enddate","sortItemSold","_itemSold","a","b","ViewCellSort","flexDirection","alignItems","styles","text14","iconSoft","getListNoSales","value","res","isSuccess","_noSales","dataRes","map","push","prodName","getListItemSold","quantity","getRevenueAndQuality","length","mainBody","flex","date","viewLine","Map","item","values","padding","viewTotalRevenue","marginRight","textGray","marginBottom","text16","backgroundColor","height","paddingLeft","borderTopLeftRadius","borderTopRightRadius","index","styleRowTable","alignSelf","maxHeight","StyleSheet","create","backgroundApp","color","gray","fontSize","fontWeight","colorText","justifyContent","borderRadius","paddingVertical"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { View, Text, StyleSheet, ScrollView, Dimensions, TouchableOpacity, FlatList } from \"react-native\";\r\n\r\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\r\nimport { getNoSalesAtAllByCategory, getProductByReportNo, getTotalRevenueAndQuality } from \"../../../netWorking/SpeedposService\";\r\nimport { INoSalesAtAllByCategory, IProductByReportNo, ITotalRevenueAndQuality } from \"../../../models/revenueModel\";\r\nimport HomeDateTimePicker from \"../../../components/homeDatetimePicker\";\r\nimport PickerModel from \"../../../components/picker/PickerModel\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { Icons } from \"../../../assets\";\r\nimport { Table, Row, Cell, TableWrapper } from \"react-native-table-component\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport DropDownPickerLine from \"../../../components/DropDownPickerLine\";\r\nimport { Imodel, IModalPicker } from \"../../../models/Imodel\";\r\nimport { TabHomeParamList } from \"../../../types\";\r\nimport DialogAwait from \"../../../components/dialogs/Loading\";\r\nimport moment from \"moment\";\r\nexport interface Props {\r\n  route: RouteProp<TabHomeParamList, \"RevenueBySubCategory\">;\r\n  navigation: StackNavigationProp<TabHomeParamList>;\r\n}\r\nconst RevenueBySubCategory = (props: Props) => {\r\n  const { dataRevenue, id } = props.route.params.data;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [itemSold, setItemSold] = useState([]);\r\n  const [noSales, setNoSales] = useState([]);\r\n  const [total, setTotal] = useState<ITotalRevenueAndQuality>({ quanlity: 0, revenueProductGroup: 0 });\r\n  const [category, setCategory] = useState(dataRevenue[id - 1]);\r\n  const [sort, setSort] = useState(false);\r\n  //set date time default\r\n  const [checDateDefault, setChecDateDefault] = useState(true);\r\n  // const [fromDateTime, setFromDateTime] = useState('2021-07-21 08:06:39');\r\n  const [fromDateTime, setFromDateTime] = useState(moment(new Date().setDate(new Date().getDate() - 1)).format(\"YYYY-MM-DD 00:00:00\"));\r\n  const [endDateTime, setEndDateTime] = useState(\r\n    moment(new Date().setDate(new Date().getDate() - 1)).format(\"YYYY-MM-DD 23:59:00\")\r\n  );\r\n  const onchangeOutlet = async (data: any) => { };\r\n\r\n  const OnchangeFromDateTime = async (dateTime: any) => {\r\n    setFromDateTime(moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\r\n  };\r\n\r\n  const OnchangeEndDateTime = async (dateTime: any) => {\r\n    setEndDateTime(moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\r\n  };\r\n\r\n  const checkFromdateAnDateEndHome = () => {\r\n    //check fromdate từ home qua\r\n    if (dataRevenue[id - 1].fromdate) {\r\n      setFromDateTime(dataRevenue[id - 1].fromdate);\r\n    }\r\n    //check enddate từ home qua\r\n    if (dataRevenue[id - 1].enddate) {\r\n      setEndDateTime(dataRevenue[id - 1].enddate);\r\n    }\r\n    setChecDateDefault(false);\r\n  }\r\n\r\n  const sortItemSold = () => {\r\n    let _itemSold = itemSold;\r\n    if (sort) {\r\n      _itemSold.sort((a, b) => a[1] - b[1]);\r\n    } else _itemSold.sort((a, b) => b[1] - a[1]);\r\n    setItemSold(_itemSold);\r\n    setSort(!sort);\r\n  };\r\n  const ViewCellSort = () => {\r\n    return (\r\n      <TouchableOpacity onPress={sortItemSold} style={[{ flexDirection: \"row\", alignItems: \"center\" }]}>\r\n        <Text style={styles.text14}>Quantity</Text>\r\n        <SvgUri source={Icons.iconSoft} />\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  const getListNoSales = async () => {\r\n    setIsLoading(true);\r\n    const res = await getNoSalesAtAllByCategory(category.value, fromDateTime, endDateTime);\r\n    if (res.isSuccess == 1) {\r\n      let _noSales = [];\r\n      let dataRes = res.data as INoSalesAtAllByCategory[];\r\n      dataRes.map(map => {\r\n        _noSales.push([map.prodName]);\r\n      });\r\n      setNoSales(_noSales);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const getListItemSold = async () => {\r\n    const res = await getProductByReportNo(category.value, fromDateTime, endDateTime);\r\n    if (res.isSuccess == 1) {\r\n      let _itemSold = [];\r\n      let dataRes = res.data as IProductByReportNo[];\r\n      dataRes.map(map => {\r\n        _itemSold.push([map.prodName, map.quantity, map.revenueProductGroup ? Money(map.revenueProductGroup) : 0]);\r\n      });\r\n\r\n      setItemSold(_itemSold);\r\n    }\r\n  };\r\n  const getRevenueAndQuality = async () => {\r\n    const res = await getTotalRevenueAndQuality(category.value, fromDateTime, endDateTime);\r\n    if (res.isSuccess === 1 && res.data.length > 0) {\r\n      setTotal(res.data[0]);\r\n    } else {\r\n      setTotal({ quanlity: 0, revenueProductGroup: 0 })\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (checDateDefault) {\r\n      checkFromdateAnDateEndHome();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getListNoSales();\r\n    getListItemSold();\r\n    getRevenueAndQuality();\r\n  }, [category, fromDateTime, endDateTime]);\r\n\r\n  return (\r\n    <View style={styles.mainBody}>\r\n      <ScrollView>\r\n        <View style={{ flex: 1 }}>\r\n          <View>\r\n            <PickerModel\r\n              defaultValue=\"Ola Restaurant\"\r\n              onSelectedValue={value => {\r\n                onchangeOutlet(value.value);\r\n              }}\r\n            ></PickerModel>\r\n            <HomeDateTimePicker\r\n              fromDate={dataRevenue[id - 1].fromdate}\r\n              endDate={dataRevenue[id - 1].enddate}\r\n              onSubmitFromDate={date => OnchangeFromDateTime(date)}\r\n              onSubmitEndDate={date => OnchangeEndDateTime(date)}\r\n            ></HomeDateTimePicker>\r\n          </View>\r\n          <View style={styles.viewLine}></View>\r\n          <DropDownPickerLine\r\n            data={[...new Map(dataRevenue.map(item => [item['value'], item])).values()]}\r\n            onSelected={value => {\r\n              setCategory(value);\r\n            }}\r\n            itemSelected={category}\r\n          ></DropDownPickerLine>\r\n          <View style={{ flexDirection: \"row\", padding: 15 }}>\r\n            <View style={[styles.viewTotalRevenue, { marginRight: 15 }]}>\r\n              <Text style={[styles.textGray, { marginBottom: 8 }]}>Total Revenue</Text>\r\n              <Text style={styles.text16}>{Money(total.revenueProductGroup) ?? 0} VND</Text>\r\n            </View>\r\n            <View style={styles.viewTotalRevenue}>\r\n              <Text style={[styles.textGray, { marginBottom: 8 }]}>Quanlity</Text>\r\n              <Text style={styles.text16}>{total.quanlity ?? 0}</Text>\r\n            </View>\r\n          </View>\r\n          <View style={{ padding: 15 }}>\r\n            <Text style={[styles.textGray, { marginBottom: 8 }]}>Revenue Item Sold By Category</Text>\r\n            <Table style={{ backgroundColor: \"#414141\" }}>\r\n              <TableWrapper\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  height: 36,\r\n                  backgroundColor: \"#878787\",\r\n                  paddingLeft: 10,\r\n\r\n                  borderTopLeftRadius: 4,\r\n                  borderTopRightRadius: 4,\r\n                }}\r\n              >\r\n                <Cell key={1} data={\"Product\"} style={{ flex: 3 }} textStyle={styles.text14} />\r\n                <Cell key={2} data={ViewCellSort()} style={{ flex: 2 }} textStyle={styles.text14} />\r\n                <Cell key={3} data={\"Total\"} style={{ flex: 2 }} textStyle={styles.text14} />\r\n              </TableWrapper>\r\n              {itemSold.map((item, index) => {\r\n                return (\r\n                  <Row\r\n                    key={index}\r\n                    data={item}\r\n                    style={[styles.styleRowTable, index % 2 === 0 && { backgroundColor: \"#8D7550\" }, { paddingLeft: 10 }]}\r\n                    flexArr={[3, 2, 2]}\r\n                    textStyle={[styles.text14, { backgroundColor: \"#ff0\", alignSelf: \"flex-start\" }]}\r\n                  />\r\n                );\r\n              })}\r\n            </Table>\r\n          </View>\r\n          <View style={{ padding: 15, marginBottom: 15 }}>\r\n            <Text style={[styles.textGray, { marginBottom: 8 }]}>No Sales At All By Category</Text>\r\n            <Table\r\n              style={{\r\n                backgroundColor: \"#414141\",\r\n                borderTopLeftRadius: 4,\r\n                borderTopRightRadius: 4,\r\n              }}\r\n            >\r\n              <Row\r\n                data={[\"Product\"]}\r\n                style={{\r\n                  borderTopLeftRadius: 4,\r\n                  borderTopRightRadius: 4,\r\n                  height: 36,\r\n                  backgroundColor: \"#878787\",\r\n                  paddingLeft: 10,\r\n                }}\r\n                flexArr={[1]}\r\n                textStyle={styles.text14}\r\n              />\r\n              <View style={{ maxHeight: 300 }}>\r\n                <FlatList\r\n                  style={{ maxHeight: 300 }}\r\n                  data={noSales}\r\n                  keyExtractor={(item, index) => item.id}\r\n                  renderItem={({ item, index }) => {\r\n                    return (\r\n                      <Row\r\n                        key={index}\r\n                        data={item}\r\n                        style={[styles.styleRowTable, index % 2 === 0 && { backgroundColor: \"#8D7550\" }, { paddingLeft: 10 }]}\r\n                        flexArr={[1]}\r\n                        textStyle={[styles.text14, { backgroundColor: \"#ff0\", alignSelf: \"flex-start\" }]}\r\n                      />\r\n                    );\r\n                  }}\r\n                ></FlatList>\r\n              </View>\r\n\r\n              {/* {noSales.map((item, index) => {\r\n                return (\r\n                  <Row\r\n                    key={index}\r\n                    data={item}\r\n                    style={[styles.styleRowTable, index % 2 === 0 && { backgroundColor: \"#8D7550\" }, { paddingLeft: 10 }]}\r\n                    flexArr={[1]}\r\n                    textStyle={[styles.text14, { backgroundColor: \"#ff0\", alignSelf: \"flex-start\" }]}\r\n                  />\r\n                );\r\n              })} */}\r\n            </Table>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n     {isLoading &&<DialogAwait></DialogAwait>} \r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RevenueBySubCategory;\r\n\r\nconst styles = StyleSheet.create({\r\n  mainBody: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n\r\n  viewLine: {\r\n    height: 10,\r\n    backgroundColor: \"#414141\",\r\n  },\r\n  textGray: {\r\n    color: colors.gray,\r\n  },\r\n  text16: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n    color: colors.colorText,\r\n  },\r\n  text14: {\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n    color: colors.colorText,\r\n  },\r\n  viewTotalRevenue: {\r\n    flex: 1,\r\n    backgroundColor: \"#414141\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n    paddingVertical: 12,\r\n  },\r\n  styleRowTable: {\r\n    height: 36,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}