{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\stockInventoryListScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PickerModel from \"../../../components/picker/PickerModel\";\nimport { colors } from \"../../../utils/Colors\";\nimport { Ionicons } from '@expo/vector-icons';\nimport SelectMultiple from 'react-native-select-multiple';\nimport { Icons } from \"../../../assets\";\nimport { Table, Row, Cell } from 'react-native-table-component';\nimport SvgUri from \"react-native-svg-uri\";\nimport { getCategoryFast } from \"../../../netWorking/categoryService\";\nimport { getStockInventoryFast } from \"../../../netWorking/stockInventoryService\";\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\nimport Loading from \"../../../components/dialogs/Loading\";\nimport moment from \"moment\";\nexport default function StockInventoryListScreen(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      outlet = _useState4[0],\n      setoutlet = _useState4[1];\n\n  var toDate = new Date();\n\n  var onchangeOutlet = function onchangeOutlet(data) {\n    setoutlet(data);\n    loadStockInventoryList();\n  };\n\n  var categoryModel = [{\n    label: 'Select All',\n    value: 0\n  }];\n\n  var _useState5 = useState(categoryModel),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataCategory = _useState6[0],\n      setDataCategory = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      checkLoadDataCategory = _useState8[0],\n      setLoadDataCategory = _useState8[1];\n\n  function loadDataCategory() {\n    var res, dataStoreProduct;\n    return _regeneratorRuntime.async(function loadDataCategory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getCategoryFast());\n\n          case 3:\n            res = _context.sent;\n            setIsLoading(false);\n\n            if (res.isSuccess === 1) {\n              dataStoreProduct = res.data;\n              dataStoreProduct.map(function (map) {\n                categoryModel.push({\n                  label: map.itemGroupName,\n                  value: map.itemGroupCode\n                });\n              });\n              setDataCategory(categoryModel);\n              setLoadDataCategory(false);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var headerTitle = {\n    tableHead: ['Noti', 'Stock Inventory', 'StockName', 'StockCode', 'Unit', 'Price/Unit', 'Supplier'],\n    widthArr: [50, 100, 100, 100, 100, 100, 100]\n  };\n  var dimensions = Dimensions.get('window');\n  var windowHeight = dimensions.height;\n  var dataModel = [];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalCategoryVisible = _useState10[0],\n      setModalCategoryVisible = _useState10[1];\n\n  var _useState11 = useState(\"Category\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      categoryValue = _useState12[0],\n      setCategoryValue = _useState12[1];\n\n  var _useState13 = useState(dataModel),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedCategory = _useState14[0],\n      setselectedCategoryValue = _useState14[1];\n\n  var viewItem = function viewItem(data, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        props.navigation.replace('StockInventoryScreen', {\n          title: 'BACK OFFICE - STOCK INVENTORY',\n          product: {\n            itemCode: data.itemCode,\n            itemName: data.itemName,\n            category: data.category,\n            quotationDate: data.quotationDate,\n            dateFrom: data.dateFrom,\n            dateTo: data.dateTo,\n            unit: data.unit,\n            price: data.price,\n            minPrice: data.minPrice,\n            maxPrice: data.maxPrice,\n            checkNoti: data.checkNoti,\n            supplier: data.supplier,\n            checkPurchasecontract: data.checkPurchasecontract\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, React.createElement(SvgUri, {\n      source: Icons.iconEye,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  var notifyError = function notifyError() {\n    return React.createElement(View, {\n      style: {\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, React.createElement(SvgUri, {\n      source: Icons.iconNotifyError,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  var listCategory = Array();\n\n  var _useState15 = useState(listCategory),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataListCategory = _useState16[0],\n      setListCategory = _useState16[1];\n\n  var onSelectionsChange = function onSelectionsChange(data, item) {\n    var selectedAll = data.find(function (x) {\n      return x.value == '0';\n    });\n\n    if (selectedAll && item.value == '0') {\n      setselectedCategoryValue(dataCategory);\n      dataCategory.map(function (data) {\n        listCategory.push(data.value);\n      });\n      setListCategory(listCategory);\n    } else {\n      setListCategory([]);\n      setselectedCategoryValue(dataModel);\n    }\n\n    if (item.value != '0') {\n      if (!selectedAll && data.length == dataCategory.length - 1) {\n        setselectedCategoryValue(dataCategory);\n        dataCategory.map(function (data) {\n          listCategory.push(data.value);\n        });\n        setListCategory(listCategory);\n      } else {\n        var indexAll = selectedCategory.findIndex(function (x) {\n          return x.value == '0';\n        });\n\n        if (indexAll >= 0) {\n          data.splice(indexAll, 1);\n        }\n\n        setselectedCategoryValue(data);\n        data.map(function (x) {\n          listCategory.push(x.value);\n        });\n        setListCategory(listCategory);\n      }\n    }\n\n    loadStockInventoryList();\n  };\n\n  var listData = [];\n\n  var _useState17 = useState(listData),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dataInventoryList = _useState18[0],\n      setInventoryList = _useState18[1];\n\n  var dataList = [];\n\n  var loadStockInventoryList = function loadStockInventoryList() {\n    var formatEndDateTime, res;\n    return _regeneratorRuntime.async(function loadStockInventoryList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            formatEndDateTime = moment(new Date(toDate)).format(\"YYYY-MM-DD\");\n            setInventoryList([]);\n            setIsLoading(true);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(getStockInventoryFast(\"\", formatEndDateTime, \"\"));\n\n          case 5:\n            res = _context2.sent;\n            setIsLoading(false);\n            dataList = [];\n\n            if (res.isSuccess == 1) {\n              dataList = res.data;\n              dataList.map(function (map) {\n                listData.push({\n                  itemCode: map.itemCode,\n                  itemName: map.itemName,\n                  category: map.category,\n                  quotationDate: map.quotationDate,\n                  dateFrom: map.dateFrom,\n                  dateTo: map.dateTo,\n                  unit: map.uom,\n                  price: map.price,\n                  minPrice: map.minPrice,\n                  maxPrice: map.maxPrice,\n                  checkNoti: map.checkNoti,\n                  supplier: map.supplierName,\n                  checkPurchasecontract: map.checkPurchasecontract\n                });\n              });\n              setInventoryList(listData);\n            }\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (checkLoadDataCategory) {\n      loadDataCategory();\n    }\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, React.createElement(PickerModel, {\n    defaultValue: \"Ola Restaurant\",\n    onSelectedValue: function onSelectedValue(value) {\n      onchangeOutlet(value.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: [styles.containerPicker, {\n      paddingBottom: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.viewPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setModalCategoryVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.pickerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.textItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, categoryValue))), React.createElement(Ionicons, {\n    style: styles.iconDown,\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    onPress: function onPress() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      marginTop: 15,\n      paddingLeft: 15,\n      paddingRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, React.createElement(Row, {\n    data: headerTitle.tableHead,\n    widthArr: headerTitle.widthArr,\n    style: styles.rowheaderTable,\n    textStyle: styles.textRowHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }), dataInventoryList == null ? void 0 : dataInventoryList.map(function (rowData, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [{\n        flexDirection: 'row',\n        height: 36\n      }, index % 2 == 0 ? {\n        backgroundColor: '#8D7550'\n      } : {\n        backgroundColor: '#414141'\n      }, index == listData.length - 1 ? {\n        borderBottomRightRadius: 4,\n        borderBottomLeftRadius: 4\n      } : {}],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, React.createElement(Cell, {\n      key: 1,\n      data: rowData.checkNoti ? notifyError() : '',\n      style: {\n        width: headerTitle.widthArr[0]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 41\n      }\n    }), React.createElement(Cell, {\n      key: 2,\n      data: viewItem(rowData, index),\n      style: {\n        width: headerTitle.widthArr[1]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 41\n      }\n    }), React.createElement(Cell, {\n      key: 3,\n      data: rowData.itemName,\n      style: {\n        width: headerTitle.widthArr[2]\n      },\n      textStyle: styles.textRowTable,\n      numberOfLines: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 41\n      }\n    }), React.createElement(Cell, {\n      key: 4,\n      data: rowData.itemCode,\n      style: {\n        width: headerTitle.widthArr[3]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }\n    }), React.createElement(Cell, {\n      key: 5,\n      data: rowData.unit,\n      style: {\n        width: headerTitle.widthArr[4]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 41\n      }\n    }), React.createElement(Cell, {\n      key: 7,\n      data: Money(rowData.price),\n      style: {\n        width: headerTitle.widthArr[5]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 41\n      }\n    }), React.createElement(Cell, {\n      key: 8,\n      data: rowData.supplier,\n      style: {\n        width: headerTitle.widthArr[6]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 41\n      }\n    }));\n  }))), React.createElement(View, {\n    style: {\n      height: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }))), React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalCategoryVisible,\n    onRequestClose: function onRequestClose() {\n      setModalCategoryVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4,\n      height: windowHeight\n    },\n    onPressIn: function onPressIn() {\n      setModalCategoryVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.centeredView, styles.modelCategory, {\n      justifyContent: 'flex-start',\n      paddingTop: 200,\n      height: windowHeight\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: [styles.modalView, {\n      height: 220,\n      backgroundColor: \"#414141\",\n      marginTop: 0,\n      paddingTop: 5,\n      paddingBottom: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  }, React.createElement(SelectMultiple, {\n    rowStyle: {\n      backgroundColor: colors.grayLight,\n      borderBottomWidth: 0\n    },\n    labelStyle: {\n      color: colors.white\n    },\n    checkboxStyle: {\n      tintColor: colors.white\n    },\n    selectedCheckboxSource: Icons.iconChecked,\n    items: dataCategory,\n    selectedItems: selectedCategory,\n    onSelectionsChange: onSelectionsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 33\n    }\n  })))))), isLoading && React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 27\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  listItem: {\n    paddingLeft: 15,\n    paddingRight: 15,\n    backgroundColor: colors.backgroundApp\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  contenItem: {\n    flex: 1,\n    height: 90,\n    flexDirection: 'row',\n    paddingTop: 10,\n    paddingBottom: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.white,\n    backgroundColor: colors.backgroundApp\n  },\n  imageItem: {\n    width: 100\n  },\n  TittleItem: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingLeft: 12,\n    paddingRight: 2\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '600',\n    lineHeight: 24,\n    color: colors.white\n  },\n  titleModal: {\n    borderBottomWidth: 1,\n    borderBottomColor: colors.gray,\n    alignItems: 'center',\n    padding: 15\n  },\n  text: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  textItem: {\n    color: colors.white,\n    fontWeight: '500',\n    fontSize: 16\n  },\n  containerPicker: {\n    marginTop: 10,\n    backgroundColor: colors.backgroundApp,\n    paddingBottom: 15\n  },\n  viewPicker: {\n    marginLeft: 15,\n    marginRight: 15,\n    paddingLeft: 15,\n    backgroundColor: colors.grayLight,\n    borderRadius: 4\n  },\n  pickerModal: {\n    height: 46,\n    borderRadius: 4,\n    justifyContent: 'center',\n    backgroundColor: colors.grayLight,\n    color: '#fff',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  },\n  iconDown: {\n    justifyContent: 'center',\n    position: 'absolute',\n    right: 10,\n    bottom: 12,\n    zIndex: 4\n  },\n  centeredView: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  modelCategory: {\n    zIndex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalView: {\n    backgroundColor: colors.white,\n    width: 380,\n    marginLeft: 15,\n    marginRight: 15,\n    borderRadius: 4,\n    paddingBottom: 15,\n    paddingTop: 15,\n    justifyContent: 'flex-start',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  textRowHeader: {\n    color: colors.white,\n    fontSize: 12,\n    fontWeight: '400',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  rowheaderTable: {\n    height: 36,\n    backgroundColor: '#878787',\n    borderTopEndRadius: 4,\n    borderTopStartRadius: 4\n  },\n  textRowTable: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '400',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/stockInventoryListScreen.tsx"],"names":["React","useEffect","useState","PickerModel","colors","Ionicons","SelectMultiple","Icons","Table","Row","Cell","SvgUri","getCategoryFast","getStockInventoryFast","Money","Loading","moment","StockInventoryListScreen","props","isLoading","setIsLoading","outlet","setoutlet","toDate","Date","onchangeOutlet","data","loadStockInventoryList","categoryModel","label","value","dataCategory","setDataCategory","checkLoadDataCategory","setLoadDataCategory","loadDataCategory","res","isSuccess","dataStoreProduct","map","push","itemGroupName","itemGroupCode","headerTitle","tableHead","widthArr","dimensions","Dimensions","get","windowHeight","height","dataModel","modalCategoryVisible","setModalCategoryVisible","categoryValue","setCategoryValue","selectedCategory","setselectedCategoryValue","viewItem","index","navigation","replace","title","product","itemCode","itemName","category","quotationDate","dateFrom","dateTo","unit","price","minPrice","maxPrice","checkNoti","supplier","checkPurchasecontract","alignItems","iconEye","notifyError","iconNotifyError","listCategory","Array","dataListCategory","setListCategory","onSelectionsChange","item","selectedAll","find","x","length","indexAll","findIndex","splice","listData","dataInventoryList","setInventoryList","dataList","formatEndDateTime","format","uom","supplierName","styles","container","line","containerPicker","paddingBottom","viewPicker","pickerModal","textItem","iconDown","marginTop","paddingLeft","paddingRight","rowheaderTable","textRowHeader","rowData","flexDirection","backgroundColor","borderBottomRightRadius","borderBottomLeftRadius","width","textRowTable","borderRadius","centeredView","modelCategory","justifyContent","paddingTop","modalView","grayLight","borderBottomWidth","color","white","tintColor","iconChecked","StyleSheet","create","flex","backgroundApp","listItem","backgroundTab","contenItem","borderBottomColor","imageItem","TittleItem","alignContent","fontSize","fontWeight","lineHeight","titleModal","gray","padding","text","marginLeft","marginRight","shadowColor","shadowOffset","position","right","bottom","zIndex","shadowOpacity","shadowRadius","elevation","textAlign","borderTopEndRadius","borderTopStartRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet, Text, TouchableWithoutFeedback, Modal, TouchableHighlight, Dimensions, ScrollView, TouchableOpacity } from \"react-native\";\r\nimport PickerModel from \"../../../components/picker/PickerModel\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport SelectMultiple from 'react-native-select-multiple'\r\nimport { Icons } from \"../../../assets\";\r\nimport { Table, Row, Cell } from 'react-native-table-component';\r\nimport { TabManageParamList } from \"../../../types\";\r\nimport { IStockInventoryItem } from \"../../../models/IstockInventoryItem\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { getAllCategory, getCategoryFast } from \"../../../netWorking/categoryService\";\r\nimport { CategoryModel, CategoryFastModel } from \"../../../models/categoryModel\";\r\nimport { getStockInventoryFast, getStockInventoryList } from \"../../../netWorking/stockInventoryService\";\r\nimport { StockInventoryListModel } from \"../../../models/stockInventoryListModel\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { Imodel, IModalPicker } from \"../../../models/Imodel\";\r\nimport { StockInventoryFastModel } from \"../../../models/stockInventoryFastModel\";\r\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\r\nimport Loading from \"../../../components/dialogs/Loading\";\r\nimport moment from \"moment\";\r\n\r\nexport interface Props {\r\n    route: RouteProp<TabManageParamList, \"StockInventoryListScreen\">;\r\n    navigation: StackNavigationProp<TabManageParamList>\r\n}\r\n\r\nexport default function StockInventoryListScreen(props: Props) {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [outlet, setoutlet] = useState(1);\r\n    const toDate = new Date();\r\n\r\n    const onchangeOutlet = (data: any) => {\r\n        setoutlet(data);\r\n        loadStockInventoryList();\r\n    }\r\n\r\n    const categoryModel: IModalPicker[] = [\r\n        { label: 'Select All', value: 0 },\r\n    ]\r\n\r\n    const [dataCategory, setDataCategory] = useState(categoryModel);\r\n    const [checkLoadDataCategory, setLoadDataCategory] = useState(true);\r\n\r\n    async function loadDataCategory() {\r\n        setIsLoading(true)\r\n        const res = await getCategoryFast();\r\n        setIsLoading(false)\r\n        if(res.isSuccess===1){\r\n            let dataStoreProduct = res.data as CategoryFastModel[];\r\n            dataStoreProduct.map(map => {\r\n                categoryModel.push({ label: map.itemGroupName, value: map.itemGroupCode });\r\n            })\r\n            setDataCategory(categoryModel);\r\n            setLoadDataCategory(false);\r\n        }\r\n        \r\n    }\r\n    const headerTitle = {\r\n        tableHead: ['Noti', 'Stock Inventory', 'StockName', 'StockCode', 'Unit', 'Price/Unit', 'Supplier'],\r\n        widthArr: [50, 100, 100, 100, 100, 100, 100]\r\n    }\r\n\r\n    const dimensions = Dimensions.get('window');\r\n    const windowHeight = dimensions.height;\r\n    const dataModel: IModalPicker[] = []\r\n    const [modalCategoryVisible, setModalCategoryVisible] = useState(false);\r\n    const [categoryValue, setCategoryValue] = useState(\"Category\");\r\n    const [selectedCategory, setselectedCategoryValue] = useState(dataModel);\r\n\r\n    const viewItem = (data: StockInventoryFastModel, index: Number) => (\r\n        \r\n        <TouchableOpacity\r\n            onPress={() => {\r\n                props.navigation.replace('StockInventoryScreen',\r\n                    {\r\n                        title: 'BACK OFFICE - STOCK INVENTORY',\r\n                        product: {\r\n                            itemCode: data.itemCode, itemName: data.itemName, category: data.category, quotationDate: data.quotationDate,\r\n                            dateFrom: data.dateFrom, dateTo: data.dateTo, unit: data.unit, price: data.price, minPrice : data.minPrice,\r\n                            maxPrice: data.maxPrice, checkNoti: data.checkNoti, supplier:data.supplier, checkPurchasecontract:data.checkPurchasecontract\r\n                        },\r\n                    }\r\n                );\r\n            }}>\r\n            <View style={{ alignItems: 'center' }}>\r\n                <SvgUri source={Icons.iconEye} />\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    const notifyError = () => (\r\n        <View style={{ alignItems: 'center' }}>\r\n            <SvgUri source={Icons.iconNotifyError} />\r\n        </View>\r\n    );\r\n\r\n    const listCategory = Array();\r\n    const [dataListCategory, setListCategory] = useState(listCategory);\r\n    const onSelectionsChange = (data: IModalPicker[], item: IModalPicker) => {\r\n        let selectedAll = data.find(x => x.value == '0');\r\n        if (selectedAll && item.value == '0') {\r\n            setselectedCategoryValue(dataCategory);\r\n            dataCategory.map(data => {\r\n                listCategory.push(data.value)\r\n            })\r\n            setListCategory(listCategory)\r\n        }\r\n        else {\r\n            setListCategory([]);\r\n            setselectedCategoryValue(dataModel);\r\n        }\r\n        if (item.value != '0') {\r\n            if (!selectedAll && data.length == dataCategory.length - 1) {\r\n                setselectedCategoryValue(dataCategory);\r\n                dataCategory.map(data => {\r\n                    listCategory.push(data.value)\r\n                })\r\n                setListCategory(listCategory)\r\n            }\r\n            else {\r\n                let indexAll = selectedCategory.findIndex(x => x.value == '0');\r\n                if (indexAll >= 0) {\r\n                    data.splice(indexAll, 1);\r\n                }\r\n                setselectedCategoryValue(data);\r\n                data.map(x => {\r\n                    listCategory.push(x.value)\r\n                })\r\n                setListCategory(listCategory)\r\n            }\r\n        }\r\n        loadStockInventoryList();\r\n    }\r\n\r\n    const listData: StockInventoryFastModel[] = [];\r\n    const [dataInventoryList, setInventoryList] = useState(listData);\r\n    let dataList: StockInventoryFastModel[] = [];\r\n\r\n    const loadStockInventoryList = async () => {\r\n        const formatEndDateTime = moment(new Date(toDate)).format(\"YYYY-MM-DD\");\r\n        setInventoryList([]);\r\n        setIsLoading(true)\r\n        const res = await getStockInventoryFast(\"\",formatEndDateTime, \"\");\r\n        setIsLoading(false)\r\n        dataList = [];\r\n        if (res.isSuccess == 1) {\r\n            dataList = res.data as StockInventoryFastModel[];\r\n            dataList.map(map => {\r\n                listData.push({\r\n                    itemCode: map.itemCode, itemName: map.itemName, category: map.category, quotationDate: map.quotationDate,\r\n                    dateFrom: map.dateFrom, dateTo: map.dateTo, unit: map.uom, price: map.price, minPrice : map.minPrice, \r\n                    maxPrice: map.maxPrice, checkNoti: map.checkNoti, supplier:map.supplierName, checkPurchasecontract:map.checkPurchasecontract\r\n                });\r\n            });\r\n            setInventoryList(listData);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (checkLoadDataCategory) {\r\n            loadDataCategory();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <PickerModel\r\n                defaultValue=\"Ola Restaurant\"\r\n                onSelectedValue={value => {\r\n                    onchangeOutlet(value.value);\r\n                }}\r\n            ></PickerModel>\r\n            <View style={styles.line}></View>\r\n            <View style={[styles.containerPicker, { paddingBottom: 10 }]}>\r\n                <View style={styles.viewPicker}>\r\n                    <TouchableWithoutFeedback\r\n                        onPress={\r\n                            () => {\r\n                                setModalCategoryVisible(true);\r\n                            }\r\n                        }\r\n                    >\r\n                        <View style={styles.pickerModal}>\r\n                            <Text style={styles.textItem}>{categoryValue}</Text>\r\n                        </View>\r\n                    </TouchableWithoutFeedback>\r\n                    <Ionicons style={styles.iconDown} name=\"caret-down\" size={20} color=\"#fff\"\r\n\r\n                        onPress={() => {\r\n\r\n                        }} />\r\n                </View>\r\n            </View>\r\n\r\n            <View style={{ alignItems: 'center', marginTop: 15, paddingLeft: 15, paddingRight: 15 }}>\r\n                <ScrollView >\r\n                    <ScrollView horizontal={true}>\r\n                        <Table>\r\n                            <Row data={headerTitle.tableHead} widthArr={headerTitle.widthArr} style={styles.rowheaderTable} textStyle={styles.textRowHeader} />\r\n                            {\r\n                                dataInventoryList?.map((rowData, index) => (\r\n                                    <View key={index} style={[{ flexDirection: 'row', height: 36 },\r\n                                    index % 2 == 0 ? { backgroundColor: '#8D7550' } : { backgroundColor: '#414141' },\r\n                                    index == (listData.length - 1) ? { borderBottomRightRadius: 4, borderBottomLeftRadius: 4 } : {}\r\n                                    ]}>\r\n                                        <Cell key={1}\r\n                                            data={rowData.checkNoti? notifyError() : ''}\r\n                                            style={{ width: headerTitle.widthArr[0] }}\r\n                                            textStyle={styles.textRowTable} />\r\n                                        <Cell key={2}\r\n                                            data={viewItem(rowData, index)}\r\n                                            style={{ width: headerTitle.widthArr[1] }}\r\n                                            textStyle={styles.textRowTable} />\r\n                                        <Cell key={3}\r\n                                            data={rowData.itemName}\r\n                                            style={{ width: headerTitle.widthArr[2] }}\r\n                                            textStyle={styles.textRowTable}\r\n                                            numberOfLines={2} />\r\n                                        <Cell key={4}\r\n                                            data={rowData.itemCode}\r\n                                            style={{ width: headerTitle.widthArr[3] }}\r\n                                            textStyle={styles.textRowTable} />\r\n                                        <Cell key={5}\r\n                                            data={rowData.unit}\r\n                                            style={{ width: headerTitle.widthArr[4] }}\r\n                                            textStyle={styles.textRowTable} />\r\n                                        <Cell key={7}\r\n                                            data={Money(rowData.price)}\r\n                                            style={{ width: headerTitle.widthArr[5] }}\r\n                                            textStyle={styles.textRowTable} />\r\n                                        <Cell key={8}\r\n                                            data={rowData.supplier}\r\n                                            style={{ width: headerTitle.widthArr[6] }}\r\n                                            textStyle={styles.textRowTable} />\r\n                                    </View>\r\n                                )\r\n                                )\r\n                            }\r\n                        </Table>\r\n                    </ScrollView>\r\n                    <View style={{height:150}}></View>\r\n                </ScrollView>\r\n\r\n            </View>\r\n\r\n            <Modal\r\n                animationType=\"fade\"\r\n                transparent={true}\r\n                visible={modalCategoryVisible}\r\n                onRequestClose={() => {\r\n                    setModalCategoryVisible(false);\r\n                }}\r\n            >\r\n                <TouchableHighlight\r\n                    style={{ borderRadius: 4, height: windowHeight }}\r\n                    onPressIn={() => {\r\n                        setModalCategoryVisible(false)\r\n                    }}\r\n                >\r\n                    <View style={[styles.centeredView, styles.modelCategory, { justifyContent: 'flex-start', paddingTop: 200, height: windowHeight, }]}>\r\n                        <View style={[styles.modalView, { height: 220, backgroundColor: \"#414141\", marginTop: 0, paddingTop: 5, paddingBottom: 5 }]}>\r\n                            <View>\r\n                                <SelectMultiple\r\n                                    rowStyle={{ backgroundColor: colors.grayLight, borderBottomWidth: 0 }}\r\n                                    labelStyle={{ color: colors.white }}\r\n                                    checkboxStyle={{ tintColor: colors.white }}\r\n                                    selectedCheckboxSource={Icons.iconChecked}\r\n                                    items={dataCategory}\r\n                                    selectedItems={selectedCategory}\r\n                                    onSelectionsChange={onSelectionsChange} />\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </TouchableHighlight>\r\n            </Modal>\r\n\r\n            {isLoading && <Loading></Loading>}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: colors.backgroundApp\r\n    },\r\n    listItem: {\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        backgroundColor: colors.backgroundApp\r\n    },\r\n    line: {\r\n        height: 10,\r\n        backgroundColor: colors.backgroundTab,\r\n    },\r\n    contenItem: {\r\n        flex: 1,\r\n        height: 90,\r\n        flexDirection: 'row',\r\n        paddingTop: 10,\r\n        paddingBottom: 5,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: colors.white,\r\n        backgroundColor: colors.backgroundApp\r\n    },\r\n    imageItem: {\r\n        width: 100,\r\n    },\r\n    TittleItem: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignContent: 'center',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingLeft: 12,\r\n        paddingRight: 2\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n        lineHeight: 24,\r\n        color: colors.white\r\n    },\r\n    titleModal: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: colors.gray,\r\n        alignItems: 'center',\r\n        padding: 15\r\n    },\r\n    text: {\r\n        color: colors.white,\r\n        fontSize: 14,\r\n        fontWeight: '600'\r\n    },\r\n    textItem: {\r\n        color: colors.white,\r\n        fontWeight: '500',\r\n        fontSize: 16\r\n    },\r\n    containerPicker: {\r\n        marginTop: 10,\r\n        backgroundColor: colors.backgroundApp,\r\n        paddingBottom: 15\r\n    },\r\n    viewPicker: {\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        paddingLeft: 15,\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4\r\n    },\r\n    pickerModal: {\r\n        height: 46,\r\n        borderRadius: 4,\r\n        justifyContent: 'center',\r\n        backgroundColor: colors.grayLight,\r\n        color: '#fff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3,\r\n        },\r\n    },\r\n    iconDown: {\r\n        justifyContent: 'center',\r\n        position: 'absolute',\r\n        right: 10,\r\n        bottom: 12,\r\n        zIndex: 4\r\n    },\r\n    centeredView: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n    },\r\n    modelCategory: {\r\n        zIndex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    },\r\n    modalView: {\r\n        backgroundColor: colors.white,\r\n        width: 380,\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        borderRadius: 4,\r\n        paddingBottom: 15,\r\n        paddingTop: 15,\r\n        justifyContent: 'flex-start',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    }, textRowHeader: {\r\n        color: colors.white,\r\n        fontSize: 12,\r\n        fontWeight: '400',\r\n        lineHeight: 24,\r\n        textAlign: 'center',\r\n    },\r\n    rowheaderTable: {\r\n        height: 36,\r\n        backgroundColor: '#878787',\r\n        borderTopEndRadius: 4,\r\n        borderTopStartRadius: 4\r\n    },\r\n    textRowTable: {\r\n        color: colors.white,\r\n        fontSize: 14,\r\n        fontWeight: '400',\r\n        textAlign: 'center',\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}