{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\bottomTabs\\\\TabOwnerHighLVScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from \"../../utils/Colors\";\nimport { useState } from \"react\";\nimport SvgUri from \"react-native-svg-uri\";\nimport moment from \"moment\";\nimport { Icons } from \"../../assets\";\nimport { VictoryChart, VictoryAxis, VictoryLine, VictoryScatter, VictoryLabel, VictoryBar, VictoryTooltip, VictoryVoronoiContainer, VictoryGroup } from \"victory-native\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Calendar } from \"react-native-calendars\";\nimport RadioForm from 'react-native-simple-radio-button';\nimport PickerModel from \"../../components/picker/PickerModel\";\nimport SelectMultiple from 'react-native-select-multiple';\nimport { OwnerHighLevelService } from \"../../netWorking/ownerHighLevel\";\nimport { Money } from \"../../components/generalConvert/conVertmunberToMoney\";\nimport Loading from \"../../components/dialogs/Loading\";\nimport { ScrollView, TouchableHighlight } from 'react-native-gesture-handler';\nexport default function TabOwnerHighLVScreen() {\n  var _this = this;\n\n  var loadListYear = function loadListYear() {\n    var currentYear, data, i;\n    return _regeneratorRuntime.async(function loadListYear$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currentYear = new Date().getFullYear();\n            data = [];\n\n            for (i = 0; i <= 10; i++) {\n              data.push({\n                label: (currentYear - i).toString(),\n                value: i\n              });\n            }\n\n            setDataModelYear(data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataModelYear = _useState2[0],\n      setDataModelYear = _useState2[1];\n\n  var dataModelBox = [{\n    label: 'Daily Revenue',\n    value: 0\n  }, {\n    label: 'Monthly Revenue',\n    value: 1\n  }];\n  var width = Dimensions.get(\"window\").width;\n\n  var _useState3 = useState(\"Select Daily Or Monthly\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickerValueCheckBox = _useState4[0],\n      setPickerValueCheckBox = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisibleYear = _useState6[0],\n      setModalVisibleYear = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisibleSelect = _useState8[0],\n      setModalVisibleSelect = _useState8[1];\n\n  var _useState9 = useState(new Date().getFullYear().toString()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pickerValueYear = _useState10[0],\n      setPickerValueYear = _useState10[1];\n\n  var dimensions = Dimensions.get('window');\n  var windowHeight = dimensions.height;\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isDatePickerVisible = _useState12[0],\n      setDatePickerVisibility = _useState12[1];\n\n  var toDate = new Date();\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalCheckBox = _useState14[0],\n      setModalCheckBox = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataRevenuePoint = _useState16[0],\n      setDataRevenuePoint = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dataRevenueDaily = _useState18[0],\n      setDataRevenueDaily = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isSubmit = _useState20[0],\n      setIssubmit = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      fromDateTime = _useState22[0],\n      setFromDateTime = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      endDateTime = _useState24[0],\n      setEndDateTime = _useState24[1];\n\n  var _useState25 = useState(moment(new Date().setDate(toDate.getDate())).format(\"YYYY-MM-DD\")),\n      _useState26 = _slicedToArray(_useState25, 2),\n      DateTimeDaily = _useState26[0],\n      setFromDateTimeDaily = _useState26[1];\n\n  var whiteStyle = {\n    grid: {\n      stroke: colors.colorLine,\n      strokeWidth: 0.5\n    },\n    axis: {\n      stroke: colors.backgroundApp\n    },\n    tickLabels: {\n      fill: colors.colorChartLine,\n      fontSize: 10\n    }\n  };\n\n  var _useState27 = useState(moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD\")),\n      _useState28 = _slicedToArray(_useState27, 2),\n      date = _useState28[0],\n      setDate = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      typeDateTime = _useState30[0],\n      setTypeDateTime = _useState30[1];\n\n  var _useState31 = useState({}),\n      _useState32 = _slicedToArray(_useState31, 2),\n      dataMarkedDatesState = _useState32[0],\n      setDataMarkedDatesState = _useState32[1];\n\n  var showDatePicker = function showDatePicker(type) {\n    var dateTime = '';\n\n    if (type === 'from') {\n      fromDateTime !== null ? dateTime = fromDateTime : dateTime = moment(new Date()).format(\"YYYY-MM-DD\");\n    } else if (type === 'end') {\n      endDateTime !== null ? dateTime = endDateTime : dateTime = moment(new Date()).format(\"YYYY-MM-DD\");\n    } else if (type === 'daily') {\n      dateTime = DateTimeDaily;\n    }\n\n    var dataMarked = {};\n    var datePresent = dateTime.slice(0, 10);\n    dataMarked[datePresent] = {\n      selected: true\n    };\n    setDate(datePresent);\n    setTypeDateTime(type);\n    setDataMarkedDatesState(dataMarked);\n    setDatePickerVisibility(true);\n  };\n\n  var onDayPress = function onDayPress(day) {\n    var date = new Date(new Date().setFullYear(day.year, Number(day.month - 1), day.day));\n    setDate(moment(date).format(\"YYYY-MM-DD\"));\n    var dataMarked = {};\n    dataMarked[day.dateString] = {\n      selected: true\n    };\n    setDataMarkedDatesState(dataMarked);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    return setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm() {\n    var pickDate, dateNow, ParamDateTime;\n    return _regeneratorRuntime.async(function handleConfirm$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            pickDate = new Date(date);\n            pickDate.setSeconds(0);\n            dateNow = new Date();\n            ParamDateTime = moment(pickDate).format(\"YYYY-MM-DD\");\n\n            if (typeDateTime === 'end') {\n              setEndDateTime(ParamDateTime);\n\n              if (fromDateTime !== null) {\n                loadCharDateTime(fromDateTime, ParamDateTime);\n              }\n            } else if (typeDateTime === 'from') {\n              setFromDateTime(ParamDateTime);\n\n              if (endDateTime !== null) {\n                loadCharDateTime(ParamDateTime, endDateTime);\n              }\n            } else if (typeDateTime === 'daily' && pickDate < dateNow) {\n              setFromDateTimeDaily(ParamDateTime);\n              loadRevenueOfDaily(ParamDateTime);\n            }\n\n            hideDatePicker();\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var whiteStyleBottom = {\n    axis: {\n      stroke: colors.colorLine\n    },\n    ticks: {\n      stroke: colors.gray,\n      size: 8,\n      margin: 5\n    },\n    tickLabels: {\n      fontSize: 10,\n      padding: 5,\n      fill: \"#A4A4A4\"\n    }\n  };\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      modalCheckBoxMonth = _useState34[0],\n      setModalCheckBoxMonth = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      checkDailyDay = _useState36[0],\n      setCheckDailyDay = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      checkDailyMoth = _useState38[0],\n      setCheckDailyMoth = _useState38[1];\n\n  var _useState39 = useState(''),\n      _useState40 = _slicedToArray(_useState39, 2),\n      textDate = _useState40[0],\n      setTextDate = _useState40[1];\n\n  var _useState41 = useState(''),\n      _useState42 = _slicedToArray(_useState41, 2),\n      radioValue = _useState42[0],\n      setradioValue = _useState42[1];\n\n  var onchangeRadio = function onchangeRadio(event) {\n    setModalCheckBox(false);\n\n    if (event == 0) {\n      showDatePicker('daily');\n      setDatePickerVisibility(true);\n      setCheckDailyDay(true);\n      setCheckDailyMoth(false);\n      setPickerValueCheckBox(\"Daily Revenue\");\n      setTextDate('Date');\n    } else {\n      setCheckDailyMoth(true);\n      setCheckDailyDay(false);\n      setModalCheckBoxMonth(true);\n      setDatePickerVisibility(false);\n      setPickerValueCheckBox(\"Monthly Revenue\");\n      setTextDate('Month');\n    }\n\n    setradioValue(event);\n  };\n\n  var _useState43 = useState(true),\n      _useState44 = _slicedToArray(_useState43, 2),\n      isAll = _useState44[0],\n      setAll = _useState44[1];\n\n  var _useState45 = useState(true),\n      _useState46 = _slicedToArray(_useState45, 2),\n      isNetSales = _useState46[0],\n      setNetSales = _useState46[1];\n\n  var _useState47 = useState(true),\n      _useState48 = _slicedToArray(_useState47, 2),\n      isGrossSales = _useState48[0],\n      setGrossSales = _useState48[1];\n\n  var _useState49 = useState(true),\n      _useState50 = _slicedToArray(_useState49, 2),\n      isTransaction = _useState50[0],\n      setTransaction = _useState50[1];\n\n  var _useState51 = useState(true),\n      _useState52 = _slicedToArray(_useState51, 2),\n      isCustomer = _useState52[0],\n      setCustomer = _useState52[1];\n\n  var _useState53 = useState(\"Select...\"),\n      _useState54 = _slicedToArray(_useState53, 2),\n      pickerValueSelect = _useState54[0],\n      setPickerValueSelect = _useState54[1];\n\n  var _useState55 = useState([50, 100, 150, 200, 250, 300]),\n      _useState56 = _slicedToArray(_useState55, 2),\n      valueHeightChart = _useState56[0],\n      setValueHeightChart = _useState56[1];\n\n  var dataModelSelect = [{\n    label: 'All',\n    value: 0\n  }, {\n    label: 'Net Sales',\n    value: 1\n  }, {\n    label: 'Gross Sales',\n    value: 2\n  }, {\n    label: 'Transaction',\n    value: 3\n  }, {\n    label: 'Customer',\n    value: 4\n  }];\n  var dataModel = [];\n\n  var _useState57 = useState(dataModelSelect),\n      _useState58 = _slicedToArray(_useState57, 2),\n      dataChart = _useState58[0],\n      setDataChart = _useState58[1];\n\n  var _useState59 = useState(dataModel),\n      _useState60 = _slicedToArray(_useState59, 2),\n      selectedChart = _useState60[0],\n      setselectedChartValue = _useState60[1];\n\n  var onSelectionsChange = function onSelectionsChange(data, item) {\n    var selectedAll = data.find(function (x) {\n      return x.value == 0;\n    });\n\n    if (selectedAll && item.value == 0) {\n      setselectedChartValue(dataChart);\n      setAll(true);\n      setNetSales(true);\n      setGrossSales(true);\n      setTransaction(true);\n      setCustomer(true);\n      setPickerValueSelect('All');\n    } else {\n      setAll(true);\n      setNetSales(true);\n      setGrossSales(true);\n      setTransaction(true);\n      setCustomer(true);\n      setselectedChartValue(dataModel);\n      setPickerValueSelect('Select...');\n    }\n\n    if (item.value != 0) {\n      if (!selectedAll && data.length == dataChart.length - 1) {\n        setselectedChartValue(dataChart);\n        setPickerValueSelect('All');\n      } else {\n        var indexAll = selectedChart.findIndex(function (x) {\n          return x.value == 0;\n        });\n\n        if (indexAll >= 0) {\n          data.splice(indexAll, 1);\n        }\n\n        setselectedChartValue(data);\n        var checkNetSales = data.find(function (x) {\n          return x.value == 1;\n        });\n        var checkGrossSales = data.find(function (x) {\n          return x.value == 2;\n        });\n        var checkTransaction = data.find(function (x) {\n          return x.value == 3;\n        });\n        var checkCustomer = data.find(function (x) {\n          return x.value == 4;\n        });\n        setNetSales(false);\n        setGrossSales(false);\n        setTransaction(false);\n        setCustomer(false);\n        var labelSeleted = \"\";\n        data.map(function (map, index) {\n          if (map.value != 0) labelSeleted += index != data.length - 1 ? map.label + \",\" : \"\" + map.label;\n        });\n        setPickerValueSelect(labelSeleted);\n\n        if (checkNetSales) {\n          setNetSales(true);\n        } else {\n          setNetSales(false);\n        }\n\n        if (checkGrossSales) {\n          setGrossSales(true);\n        } else {\n          setGrossSales(false);\n        }\n\n        if (checkTransaction) {\n          setTransaction(true);\n        } else {\n          setTransaction(false);\n        }\n\n        if (checkCustomer) {\n          setCustomer(true);\n        } else {\n          setCustomer(false);\n        }\n      }\n    }\n  };\n\n  var _useState61 = useState(+moment(new Date().setDate(toDate.getDate())).format(\"MM\")),\n      _useState62 = _slicedToArray(_useState61, 2),\n      month = _useState62[0],\n      setMonth = _useState62[1];\n\n  var _useState63 = useState(+moment(new Date().setDate(toDate.getDate())).format(\"YYYY\")),\n      _useState64 = _slicedToArray(_useState63, 2),\n      year = _useState64[0],\n      setYear = _useState64[1];\n\n  var yearNow = +moment(new Date().setDate(toDate.getDate())).format(\"YYYY\");\n\n  var increaseMonth = function increaseMonth() {\n    if (month < 12) {\n      setMonth(month + 1);\n    } else setMonth(1);\n  };\n\n  var decreaseMonth = function decreaseMonth() {\n    if (month > 1) {\n      setMonth(month - 1);\n    } else setMonth(12);\n  };\n\n  var increaseYear = function increaseYear() {\n    if (year < yearNow) {\n      setYear(year + 1);\n    } else setYear(2018);\n  };\n\n  var decreaseYear = function decreaseYear() {\n    if (year > 2019) {\n      setYear(year - 1);\n    } else setYear(yearNow);\n  };\n\n  var nonthYearNow = month + '/' + year;\n\n  var _useState65 = useState(nonthYearNow),\n      _useState66 = _slicedToArray(_useState65, 2),\n      monthly = _useState66[0],\n      setmonthly = _useState66[1];\n\n  var handleConfirmYear = function handleConfirmYear() {\n    var monthYear = month + '/' + year;\n    setmonthly(monthYear);\n    loadRevenueOfMonthly(month, year);\n    hideMonthlyPicker();\n  };\n\n  var hideMonthlyPicker = function hideMonthlyPicker() {\n    return setModalCheckBoxMonth(false);\n  };\n\n  var getYear = toDate.getFullYear();\n\n  var _useState67 = useState(getYear.toString()),\n      _useState68 = _slicedToArray(_useState67, 2),\n      yearNowChar = _useState68[0],\n      setYearNowChart = _useState68[1];\n\n  var dateMonthArray = [];\n\n  var _useState69 = useState([]),\n      _useState70 = _slicedToArray(_useState69, 2),\n      pointNet = _useState70[0],\n      setPointNet = _useState70[1];\n\n  var _useState71 = useState([]),\n      _useState72 = _slicedToArray(_useState71, 2),\n      pointGross = _useState72[0],\n      setPointGross = _useState72[1];\n\n  var _useState73 = useState([]),\n      _useState74 = _slicedToArray(_useState73, 2),\n      pointTransaction = _useState74[0],\n      setPointTransaction = _useState74[1];\n\n  var _useState75 = useState([]),\n      _useState76 = _slicedToArray(_useState75, 2),\n      pointCustomer = _useState76[0],\n      setPointCustomer = _useState76[1];\n\n  var _useState77 = useState(dateMonthArray),\n      _useState78 = _slicedToArray(_useState77, 2),\n      dateMonth = _useState78[0],\n      setDateMonth = _useState78[1];\n\n  var _useState79 = useState(true),\n      _useState80 = _slicedToArray(_useState79, 2),\n      checkLoadDatetimeDefault = _useState80[0],\n      setLoadDatetimeDefault = _useState80[1];\n\n  var _useState81 = useState(400),\n      _useState82 = _slicedToArray(_useState81, 2),\n      widthChart = _useState82[0],\n      setWidthChart = _useState82[1];\n\n  var getDaysArray = function getDaysArray(fromDateTime, endDateTime) {\n    for (var arr = [], dt = new Date(fromDateTime); dt <= endDateTime; dt.setDate(dt.getDate() + 1)) {\n      arr.push(moment(new Date(dt)).format(\"DD-MM\"));\n    }\n\n    return arr;\n  };\n\n  var loadCharDateTime = function loadCharDateTime(startDate, endDate) {\n    var daylist = getDaysArray(new Date(startDate), new Date(endDate));\n    daylist.map(function (v) {\n      return v.slice(0, 10);\n    }).join(\"\");\n    setDateMonth(daylist);\n\n    if (daylist.length > 0) {\n      setWidthChart(daylist.length * 60 + 170);\n    }\n\n    loadRevenueOfDate(startDate, endDate);\n  };\n\n  var loadRevenueOfYear = function loadRevenueOfYear() {\n    var model, data;\n    return _regeneratorRuntime.async(function loadRevenueOfYear$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            model = {\n              \"year\": Number(pickerValueYear)\n            };\n            setIssubmit(true);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(OwnerHighLevelService.ReportRevenueYear(model));\n\n          case 4:\n            data = _context3.sent;\n            setIssubmit(false);\n            setDataRevenuePoint(data);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ratio = 200000;\n\n  var loadRevenueOfDate = function loadRevenueOfDate(startDate, endDate) {\n    var model, data, maxNet, maxGross, maxCustomer, maxTransaction, max, _max, heights;\n\n    return _regeneratorRuntime.async(function loadRevenueOfDate$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            model = {\n              \"DateFrom\": startDate,\n              \"DateTo\": endDate,\n              \"Ratio\": ratio\n            };\n            setIssubmit(true);\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(OwnerHighLevelService.ReportRevenueDate(model));\n\n          case 4:\n            data = _context4.sent;\n            maxNet = Math.max.apply(Math, _toConsumableArray(data.lineNet.map(function (e) {\n              return e.revenue;\n            }))).toFixed();\n            maxGross = Math.max.apply(Math, _toConsumableArray(data.lineGross.map(function (e) {\n              return e.revenue;\n            }))).toFixed();\n            maxCustomer = Math.max.apply(Math, _toConsumableArray(data.customerBar.map(function (e) {\n              return e.revenue;\n            }))).toFixed();\n            maxTransaction = Math.max.apply(Math, _toConsumableArray(data.transactionBar.map(function (e) {\n              return e.revenue;\n            }))).toFixed();\n            max = Math.max.apply(Math, _toConsumableArray([+maxNet / 200000, +maxGross / 200000, +maxCustomer, +maxTransaction].map(function (e) {\n              return e;\n            })));\n\n            if (max > 300) {\n              _max = Number(max.toFixed());\n              heights = [+(_max / 6).toFixed(), +(_max / 3).toFixed(), +(_max / 2).toFixed(), +(_max / 1.5).toFixed(), +(_max / 1.2).toFixed(), _max];\n              setValueHeightChart(heights);\n            }\n\n            setPointNet(data.lineNet);\n            setPointGross(data.lineGross);\n            setPointCustomer(data.customerBar);\n            setPointTransaction(data.transactionBar);\n            setIssubmit(false);\n\n          case 16:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadRevenueOfDaily = function loadRevenueOfDaily(date) {\n    var model, data;\n    return _regeneratorRuntime.async(function loadRevenueOfDaily$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setDataRevenueDaily(null);\n            model = {\n              \"DateFrom\": date,\n              \"DateTo\": date\n            };\n            setIssubmit(true);\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(OwnerHighLevelService.ReportRevenueDaily(model));\n\n          case 5:\n            data = _context5.sent;\n            setIssubmit(false);\n            setDataRevenueDaily(data);\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadRevenueOfMonthly = function loadRevenueOfMonthly(month, year) {\n    var model, data;\n    return _regeneratorRuntime.async(function loadRevenueOfMonthly$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setDataRevenueDaily(null);\n            model = {\n              \"Month\": month,\n              \"Year\": year\n            };\n            setIssubmit(true);\n            _context6.next = 5;\n            return _regeneratorRuntime.awrap(OwnerHighLevelService.ReportRevenueMonthly(model));\n\n          case 5:\n            data = _context6.sent;\n            setIssubmit(false);\n            setDataRevenueDaily(data);\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadListYear();\n    loadRevenueOfYear();\n\n    if (checkLoadDatetimeDefault) {\n      if (fromDateTime !== null && endDateTime !== null) {\n        loadCharDateTime(fromDateTime, endDateTime);\n      }\n    }\n  }, [pickerValueYear]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }, React.createElement(PickerModel, {\n    defaultValue: \"Outlet\",\n    onSelectedValue: function onSelectedValue(value) {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.containerCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.salseYear, {\n      zIndex: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.saleForYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.tesxtAaleForYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 29\n    }\n  }, \"Sales for year\")), React.createElement(View, {\n    style: styles.year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      paddingTop: 10\n    },\n    onPress: function onPress() {\n      setModalVisibleYear(!modalVisibleYear);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontSize: 14,\n      paddingLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 37\n    }\n  }, pickerValueYear)), React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 33\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.dateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 37\n    }\n  }))), modalVisibleYear && React.createElement(View, {\n    style: [styles.listPickerYear, {\n      width: '100%'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 29\n    }\n  }, React.createElement(ScrollView, {\n    nestedScrollEnabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 33\n    }\n  }, dataModelYear.map(function (data, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 41\n      }\n    }, React.createElement(TouchableHighlight, {\n      style: {\n        padding: 10\n      },\n      underlayColor: 'rgba(0, 0, 0, 0.2)',\n      onPress: function onPress() {\n        setModalVisibleYear(false);\n        setPickerValueYear(data.label);\n        setYearNowChart(data.label);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 45\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: colors.colorText,\n        fontWeight: '500',\n        fontSize: 16,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 49\n      }\n    }, data.label)));\n  })))), React.createElement(View, {\n    style: {\n      flex: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.charYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 21\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    endFillColor: '#fff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 29\n    }\n  }, React.createElement(VictoryChart, {\n    width: 900,\n    domainPadding: {\n      x: 55,\n      y: 45\n    },\n    padding: {\n      top: 5,\n      bottom: 50,\n      left: 67,\n      right: 25\n    },\n    containerComponent: React.createElement(VictoryVoronoiContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 41\n      }\n    }),\n    style: {\n      parent: {\n        cursor: \"pointer\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 33\n    }\n  }, React.createElement(VictoryLabel, {\n    y: 250,\n    x: 50,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorText\n    },\n    text: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 37\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: [125000000, 250000000, 375000000, 500000000, 625000000, 750000000],\n    tickFormat: function tickFormat(t) {\n      return \"\" + Money(t);\n    },\n    dependentAxis: true,\n    orientation: \"left\",\n    style: whiteStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 37\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: [yearNowChar + \"-01\", yearNowChar + \"-02\", yearNowChar + \"-03\", yearNowChar + \"-04\", yearNowChar + \"-05\", yearNowChar + \"-06\", yearNowChar + \"-07\", yearNowChar + \"-08\", yearNowChar + \"-09\", yearNowChar + \"-10\", yearNowChar + \"-11\", yearNowChar + \"-12\"],\n    style: whiteStyleBottom,\n    orientation: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 37\n    }\n  }), React.createElement(VictoryGroup, {\n    data: dataRevenuePoint,\n    color: \"#5F8BFC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 37\n    }\n  }, React.createElement(VictoryLine, {\n    interpolation: \"natural\",\n    labels: function labels(_ref) {\n      var _ref2;\n\n      var datum = _ref.datum;\n      return [pickerValueYear + '-' + datum.month, (_ref2 = \"This year: \" + Money(datum.revenue ? Math.round(datum.revenue).toString() : Math.round(datum.y).toString())) != null ? _ref2 : '0', \"Last year: \" + Money(datum.lastYearRevenue ? Math.round(datum.lastYearRevenue).toString() : '0')];\n    },\n    labelComponent: React.createElement(VictoryTooltip, {\n      activateData: true,\n      renderInPortal: false,\n      centerOffset: {\n        y: -20\n      },\n      style: {\n        fontSize: 13,\n        margin: 5,\n        fill: \"#5F8BFC\"\n      },\n      flyoutStyle: {\n        stroke: \"#C4C4C4\",\n        fill: \"#414141\"\n      },\n      cornerRadius: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 41\n    }\n  }), React.createElement(VictoryScatter, {\n    size: 3,\n    style: {\n      data: {\n        fill: \"#DAB451\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 41\n    }\n  }))))))), React.createElement(View, {\n    style: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.containerCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.rowHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.rowFromDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.textFromDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 29\n    }\n  }, \"From Date\"), React.createElement(View, {\n    style: styles.fromDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.cssText,\n    onPress: function onPress() {\n      return showDatePicker('from');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 8,\n      paddingLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 41\n    }\n  }, fromDateTime === null ? 'Select date..' : moment(fromDateTime).format(\"DD/MM/YYYY\"))), React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 37\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.dateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 41\n    }\n  }))))), React.createElement(View, {\n    style: styles.rowEndDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 29\n    }\n  }, \"End Date\"), React.createElement(View, {\n    style: styles.fromDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.cssText,\n    onPress: function onPress() {\n      return showDatePicker('end');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 8,\n      paddingLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 41\n    }\n  }, endDateTime === null ? 'Select date..' : moment(endDateTime).format(\"DD/MM/YYYY\"))), React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 37\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.dateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 41\n    }\n  })))))), React.createElement(View, {\n    style: [styles.salectChart, {\n      zIndex: Platform.OS === 'ios' ? 10 : undefined\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.chartPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisibleSelect(!modalVisibleSelect);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.selectpickerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 37\n    }\n  }, pickerValueSelect))), React.createElement(Ionicons, {\n    style: styles.iconDown,\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    onPress: function onPress() {\n      setModalVisibleSelect(!modalVisibleSelect);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 29\n    }\n  })), modalVisibleSelect && React.createElement(View, {\n    style: [styles.listPicker, {\n      width: width - 30\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 275\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 33\n    }\n  }, React.createElement(SelectMultiple, {\n    rowStyle: {\n      backgroundColor: colors.grayLight,\n      borderBottomWidth: 0\n    },\n    labelStyle: {\n      color: colors.white\n    },\n    checkboxStyle: {\n      tintColor: colors.white\n    },\n    selectedCheckboxSource: Icons.iconChecked,\n    items: dataModelSelect,\n    style: {\n      zIndex: 100\n    },\n    selectedItems: selectedChart,\n    onSelectionsChange: onSelectionsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 37\n    }\n  })))), React.createElement(ScrollView, {\n    horizontal: true,\n    endFillColor: '#fff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingTop: 30,\n      minWidth: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 29\n    }\n  }, isAll && React.createElement(VictoryChart, {\n    domainPadding: {\n      x: 40,\n      y: 45\n    },\n    width: widthChart,\n    padding: {\n      top: 5,\n      bottom: 50,\n      left: 90,\n      right: 80\n    },\n    containerComponent: React.createElement(VictoryVoronoiContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 45\n      }\n    }),\n    style: {\n      parent: {\n        cursor: \"pointer\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 37\n    }\n  }, React.createElement(VictoryChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 41\n    }\n  }, React.createElement(VictoryLabel, {\n    y: 200,\n    x: 5,\n    angle: -90,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorText\n    },\n    text: \"Net Sales - Gross Sales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 45\n    }\n  }), React.createElement(VictoryLabel, {\n    y: 200,\n    x: widthChart - 25,\n    angle: -90,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorText\n    },\n    text: \"Transaction - Customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 45\n    }\n  }), React.createElement(VictoryLabel, {\n    y: 250,\n    x: 70,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorText\n    },\n    text: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 45\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: valueHeightChart,\n    tickFormat: function tickFormat(t) {\n      return \"\" + Money(Math.round(t * ratio));\n    },\n    dependentAxis: true,\n    orientation: \"left\",\n    style: whiteStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 45\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: dateMonth,\n    style: whiteStyleBottom,\n    orientation: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 45\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: valueHeightChart,\n    tickFormat: function tickFormat(t) {\n      return \"\" + Money(t);\n    },\n    dependentAxis: true,\n    orientation: \"right\",\n    style: whiteStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 45\n    }\n  })), isNetSales && React.createElement(VictoryGroup, {\n    data: pointNet,\n    color: \"#F6606F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 45\n    }\n  }, React.createElement(VictoryLine, {\n    interpolation: \"natural\",\n    labels: function labels(_ref3) {\n      var _Money;\n\n      var datum = _ref3.datum;\n      return [\"N: \" + datum.date, \"\" + ((_Money = Money(datum.revenue)) != null ? _Money : 0) + \" VND\"];\n    },\n    labelComponent: React.createElement(VictoryTooltip, {\n      renderInPortal: false,\n      centerOffset: {\n        x: 0,\n        y: -80\n      },\n      style: {\n        fontSize: 10,\n        fill: \"#F6606F\"\n      },\n      flyoutStyle: {\n        stroke: \"#C4C4C4\",\n        fill: \"#414141\"\n      },\n      cornerRadius: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 57\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 49\n    }\n  }), React.createElement(VictoryScatter, {\n    size: 3,\n    style: {\n      data: {\n        fill: \"#DAB451\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 49\n    }\n  })), React.createElement(VictoryGroup, {\n    offset: 15,\n    style: {\n      data: {\n        width: 15\n      }\n    },\n    colorScale: [\"#5F8BFC\", \"#FDB441\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 41\n    }\n  }, isTransaction && React.createElement(VictoryBar, {\n    labels: function labels(_ref4) {\n      var datum = _ref4.datum;\n      return [\"T: \" + datum.date, Money(datum.y.toString())];\n    },\n    labelComponent: React.createElement(VictoryTooltip, {\n      renderInPortal: false,\n      centerOffset: {\n        x: isCustomer ? 70 : 0,\n        y: -43\n      },\n      style: {\n        fontSize: 10,\n        fill: \"#5F8BFC\"\n      },\n      flyoutStyle: {\n        stroke: \"#C4C4C4\",\n        fill: \"#414141\"\n      },\n      cornerRadius: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 57\n      }\n    }),\n    data: pointTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 49\n    }\n  }), isCustomer && React.createElement(VictoryBar, {\n    labels: function labels(_ref5) {\n      var datum = _ref5.datum;\n      return [\"C: \" + datum.date, Money(datum.y.toString())];\n    },\n    labelComponent: React.createElement(VictoryTooltip, {\n      renderInPortal: false,\n      centerOffset: {\n        x: isTransaction ? -60 : 0,\n        y: -43\n      },\n      style: {\n        fontSize: 10,\n        fill: \"#FDB441\"\n      },\n      flyoutStyle: {\n        stroke: \"#C4C4C4\",\n        fill: \"#414141\"\n      },\n      cornerRadius: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 57\n      }\n    }),\n    data: pointCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 49\n    }\n  })), isGrossSales && React.createElement(VictoryGroup, {\n    data: pointGross,\n    color: \"#76D146\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 45\n    }\n  }, React.createElement(VictoryLine, {\n    interpolation: \"natural\",\n    labels: function labels(_ref6) {\n      var _Money2;\n\n      var datum = _ref6.datum;\n      return [\"G: \" + datum.date, \"\" + ((_Money2 = Money(datum.revenue)) != null ? _Money2 : 0) + \" VND\"];\n    },\n    labelComponent: React.createElement(VictoryTooltip, {\n      renderInPortal: false,\n      centerOffset: {\n        x: 0,\n        y: -5\n      },\n      style: {\n        fontSize: 10,\n        fill: \"#76D146\"\n      },\n      flyoutStyle: {\n        stroke: \"#C4C4C4\",\n        fill: \"#414141\"\n      },\n      cornerRadius: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 57\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 49\n    }\n  }), React.createElement(VictoryScatter, {\n    size: 3,\n    style: {\n      data: {\n        fill: \"#DAB451\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 49\n    }\n  })))), React.createElement(View, {\n    style: styles.rowTableChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 37\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.Ellipse_foc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 41\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 41\n    }\n  }, \" \"), React.createElement(Text, {\n    style: styles.commentChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 41\n    }\n  }, \"Net Sales\"))), React.createElement(View, {\n    style: {\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 37\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.Ellipse_discount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 41\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 41\n    }\n  }, \" \"), React.createElement(Text, {\n    style: styles.commentChartTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 41\n    }\n  }, \"Gross Sales\"))), React.createElement(View, {\n    style: {\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 37\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.iconTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 41\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 41\n    }\n  }, \" \"), React.createElement(Text, {\n    style: styles.commentTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 41\n    }\n  }, \" Transaction\"))), React.createElement(View, {\n    style: {\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 37\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.iconCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 41\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 41\n    }\n  }, \" \"), React.createElement(Text, {\n    style: styles.commentCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 41\n    }\n  }, \"Customer\")))))), React.createElement(View, {\n    style: {\n      paddingBottom: 15,\n      paddingTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: [modalCheckBox && {\n      minHeight: 200\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.viewPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    style: {\n      zIndex: 3\n    },\n    onPress: function onPress() {\n      setModalCheckBox(!modalCheckBox);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.pickerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 37\n    }\n  }, pickerValueCheckBox))), React.createElement(Ionicons, {\n    style: styles.iconDown,\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    onPress: function onPress() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 29\n    }\n  })), modalCheckBox && React.createElement(View, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      zIndex: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: [styles.modalViewSelectMultiple, {\n      backgroundColor: \"#414141\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 33\n    }\n  }, React.createElement(RadioForm, {\n    initial: radioValue,\n    style: {\n      zIndex: 10\n    },\n    radio_props: dataModelBox,\n    buttonColor: colors.white,\n    labelStyle: {\n      fontSize: 16,\n      color: colors.white,\n      paddingBottom: 20,\n      paddingTop: 3\n    },\n    buttonOuterColor: colors.white,\n    selectedButtonColor: colors.white,\n    buttonSize: 16,\n    onPress: onchangeRadio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 37\n    }\n  }))), checkDailyDay && React.createElement(View, {\n    style: styles.daily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles.ViewDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.textDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 45\n    }\n  }, textDate, \":\")), React.createElement(View, {\n    style: {\n      flex: 3,\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 41\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.cssText,\n    onPress: function onPress() {\n      return showDatePicker('daily');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 3,\n      flexDirection: 'row',\n      paddingTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: {\n      flex: 8.6,\n      color: \"#fff\",\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 53\n    }\n  }, moment(DateTimeDaily).format(\"DD/MM/YYYY\")), React.createElement(Text, {\n    style: {\n      flex: 1.4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 53\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.dateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 57\n    }\n  })))))), React.createElement(View, {\n    style: styles.information,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.shareInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: styles.rowInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.headerInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 49\n    }\n  }, \"Net value\"), React.createElement(View, {\n    style: {\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 49\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 53\n    }\n  })), React.createElement(View, {\n    style: styles.itemRevenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.numInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 53\n    }\n  }, Money(dataRevenueDaily == null ? void 0 : dataRevenueDaily.now.totalNetSales)), React.createElement(SvgUri, {\n    source: Icons.icondaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 49\n    }\n  }, \"Last \", dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.weekdays), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 49\n    }\n  }, Money(dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.totalNetSales))), React.createElement(View, {\n    style: {\n      flex: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 45\n    }\n  }), React.createElement(View, {\n    style: styles.rowInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.headerInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 49\n    }\n  }, \"Transaction\"), React.createElement(View, {\n    style: {\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 49\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 53\n    }\n  })), React.createElement(View, {\n    style: styles.itemRevenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: styles.numInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 53\n    }\n  }, dataRevenueDaily == null ? void 0 : dataRevenueDaily.now.totalTransaction), React.createElement(SvgUri, {\n    source: Icons.icondaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 49\n    }\n  }, \"Last \", dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.weekdays), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 49\n    }\n  }, dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.totalTransaction))), React.createElement(View, {\n    style: {\n      flex: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 4.75,\n      backgroundColor: colors.backgroundApp,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: styles.rowInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.headerInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 49\n    }\n  }, \"Customer\"), React.createElement(View, {\n    style: {\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 49\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 53\n    }\n  })), React.createElement(View, {\n    style: styles.itemRevenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: styles.numInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 53\n    }\n  }, dataRevenueDaily == null ? void 0 : dataRevenueDaily.now.totalCustomer), React.createElement(SvgUri, {\n    source: Icons.icondaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 49\n    }\n  }, \"Last \", dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.weekdays), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 49\n    }\n  }, dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.totalCustomer)), React.createElement(View, {\n    style: {\n      flex: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 45\n    }\n  }), React.createElement(View, {\n    style: styles.rowInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.headerInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 49\n    }\n  }, \"Week to date\"), React.createElement(View, {\n    style: {\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 49\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 53\n    }\n  })), React.createElement(View, {\n    style: styles.itemRevenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.numInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 53\n    }\n  }, Money(dataRevenueDaily == null ? void 0 : dataRevenueDaily.now.totalNetSalesWeeks)), React.createElement(SvgUri, {\n    source: Icons.icondaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 49\n    }\n  }, \"Week to Last \", dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.weekdays), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 49\n    }\n  }, Money(dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.totalNetSalesWeeks)))))), checkDailyMoth && React.createElement(View, {\n    style: styles.daily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles.ViewDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.textDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 45\n    }\n  }, textDate, \":\")), React.createElement(View, {\n    style: {\n      flex: 2,\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 41\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.cssText,\n    onPress: function onPress() {\n      return setModalCheckBoxMonth(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 3,\n      flexDirection: 'row',\n      paddingTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: {\n      flex: 7.7,\n      color: \"#fff\",\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 53\n    }\n  }, monthly), React.createElement(Text, {\n    style: {\n      flex: 2.3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 53\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.dateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 57\n    }\n  })))))), React.createElement(View, {\n    style: styles.information,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.shareInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: styles.rowInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.headerInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 49\n    }\n  }, \"Net value\"), React.createElement(View, {\n    style: {\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 49\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 53\n    }\n  })), React.createElement(View, {\n    style: styles.itemRevenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: styles.numInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 53\n    }\n  }, Money(dataRevenueDaily == null ? void 0 : dataRevenueDaily.now.totalNetSales)), React.createElement(SvgUri, {\n    source: Icons.icondaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 49\n    }\n  }, \"Last Month\"), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 49\n    }\n  }, Money(dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.totalNetSales))), React.createElement(View, {\n    style: {\n      flex: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 45\n    }\n  }), React.createElement(View, {\n    style: styles.rowInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.headerInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 49\n    }\n  }, \"Transaction\"), React.createElement(View, {\n    style: {\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 49\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 53\n    }\n  })), React.createElement(View, {\n    style: styles.itemRevenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: styles.numInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 53\n    }\n  }, dataRevenueDaily == null ? void 0 : dataRevenueDaily.now.totalTransaction), React.createElement(SvgUri, {\n    source: Icons.icondaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 49\n    }\n  }, \"Last Month\"), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1058,\n      columnNumber: 49\n    }\n  }, dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.totalTransaction))), React.createElement(View, {\n    style: {\n      flex: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 4.75,\n      backgroundColor: colors.backgroundApp,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: styles.rowInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.headerInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 49\n    }\n  }, \"Customer\"), React.createElement(View, {\n    style: {\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 49\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 53\n    }\n  })), React.createElement(View, {\n    style: styles.itemRevenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: styles.numInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1069,\n      columnNumber: 53\n    }\n  }, dataRevenueDaily == null ? void 0 : dataRevenueDaily.now.totalCustomer), React.createElement(SvgUri, {\n    source: Icons.icondaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 49\n    }\n  }, \"Last Month\"), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 49\n    }\n  }, dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.totalCustomer)), React.createElement(View, {\n    style: {\n      flex: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 45\n    }\n  }), React.createElement(View, {\n    style: styles.rowInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.headerInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 49\n    }\n  }, \"Accumulated till this month\"), React.createElement(View, {\n    style: {\n      paddingLeft: 12,\n      paddingRight: 12,\n      paddingBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 49\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 53\n    }\n  })), React.createElement(View, {\n    style: styles.itemRevenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: styles.numInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 53\n    }\n  }, Money(dataRevenueDaily == null ? void 0 : dataRevenueDaily.now.totalNetSalesWeeks)), React.createElement(SvgUri, {\n    source: Icons.icondaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 49\n    }\n  }, \"Same Period last year\"), React.createElement(Text, {\n    style: styles.dayInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1090,\n      columnNumber: 49\n    }\n  }, Money(dataRevenueDaily == null ? void 0 : dataRevenueDaily.last.totalNetSalesWeeks))))))))), isDatePickerVisible && React.createElement(ScrollView, {\n    style: [styles.dateTimeModal, {\n      height: windowHeight - 130\n    }],\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 21\n    }\n  }, React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: isDatePickerVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      top: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1107,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.dateTimeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles.dateTimeHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeHeaderText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 41\n    }\n  }, \"DATE\")), React.createElement(Calendar, {\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    monthFormat: \"MMM yyyy\",\n    renderHeader: function renderHeader(date) {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 53\n        }\n      }, moment(date.toString()).format(\"MMM yyyy\")));\n    },\n    firstDay: 1,\n    onDayPress: onDayPress,\n    onDayLongPress: onDayPress,\n    markedDates: dataMarkedDatesState,\n    theme: {\n      arrowColor: \"white\",\n      textSectionTitleColor: \"#fff\",\n      calendarBackground: \"transparent\",\n      dayTextColor: \"#fff\",\n      selectedDayBackgroundColor: \"#DAB451\",\n      selectedDayTextColor: \"#ff0\",\n      textDisabledColor: \"transparent\",\n      todayTextColor: \"#fff\",\n      'stylesheet.calendar.header': {\n        header: {\n          backgroundColor: '#595959',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          paddingLeft: 10,\n          paddingRight: 10,\n          marginTop: 6,\n          alignItems: 'center'\n        }\n      },\n      'stylesheet.calendar.main': {\n        container: {\n          padding: 0\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1112,\n      columnNumber: 37\n    }\n  }), React.createElement(LinearGradient, {\n    style: styles.dateTimeButton,\n    colors: ['#DAB451', '#988050'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 37\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 45\n    }\n  }, \"Done\"))), React.createElement(TouchableOpacity, {\n    style: [styles.dateTimeButton, {\n      marginBottom: 10\n    }],\n    onPress: hideDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 41\n    }\n  }, \"Close\")))))), modalCheckBoxMonth && React.createElement(ScrollView, {\n    style: [styles.dateTimeModal, {\n      height: windowHeight - 130\n    }],\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 21\n    }\n  }, React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalCheckBoxMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      top: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.dateTimeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles.dateTimeHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeHeaderText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 41\n    }\n  }, \"Monthly\")), React.createElement(View, {\n    style: {\n      paddingTop: 8,\n      paddingLeft: 32,\n      paddingRight: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 41\n    }\n  })), React.createElement(View, {\n    style: styles.timeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: styles.timeHourView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 41\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.timeArrow,\n    onPress: increaseMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 45\n    }\n  }, React.createElement(Ionicons, {\n    name: \"caret-up\",\n    size: 20,\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 49\n    }\n  })), React.createElement(Text, {\n    style: styles.timeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 45\n    }\n  }, \"\" + month), React.createElement(TouchableOpacity, {\n    onPress: decreaseMonth,\n    style: styles.timeArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 45\n    }\n  }, React.createElement(Ionicons, {\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1214,\n      columnNumber: 49\n    }\n  }))), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: styles.timeHourView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 41\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.timeArrow,\n    onPress: increaseYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 45\n    }\n  }, React.createElement(Ionicons, {\n    name: \"caret-up\",\n    size: 20,\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 49\n    }\n  })), React.createElement(Text, {\n    style: styles.timeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 45\n    }\n  }, \"\" + year), React.createElement(TouchableOpacity, {\n    style: styles.timeArrow,\n    onPress: decreaseYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 45\n    }\n  }, React.createElement(Ionicons, {\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1239,\n      columnNumber: 49\n    }\n  }))), React.createElement(View, {\n    style: {\n      flex: 1.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 41\n    }\n  })), React.createElement(LinearGradient, {\n    style: styles.dateTimeButton,\n    colors: ['#DAB451', '#988050'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 37\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleConfirmYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 45\n    }\n  }, \"Done\"))), React.createElement(TouchableOpacity, {\n    style: [styles.dateTimeButton, {\n      marginBottom: 10\n    }],\n    onPress: hideMonthlyPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 41\n    }\n  }, \"Close\")))))), isSubmit && React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 26\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.white\n  },\n  viewPicker: {\n    paddingLeft: 15,\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    width: 220\n  },\n  pickerModal: {\n    height: 46,\n    borderRadius: 4,\n    justifyContent: 'center',\n    backgroundColor: colors.grayLight,\n    color: '#fff',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  },\n  text: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  iconDown: {\n    justifyContent: 'center',\n    position: 'absolute',\n    right: 10,\n    bottom: 12,\n    zIndex: 4\n  },\n  centeredView: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  centeredViewYear: {\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    paddingRight: 22\n  },\n  centeredViewSelectMultiple: {\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-start\",\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  modalView: {\n    backgroundColor: colors.white,\n    width: 354,\n    height: 200,\n    padding: 15,\n    borderRadius: 4,\n    paddingBottom: 20,\n    justifyContent: \"flex-start\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalViewYear: {\n    backgroundColor: colors.grayLight,\n    width: 150,\n    height: 200,\n    paddingTop: 15,\n    borderRadius: 4,\n    paddingBottom: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalViewSelectMultiple: {\n    backgroundColor: colors.white,\n    paddingTop: 25,\n    paddingLeft: 15,\n    paddingRight: 15,\n    height: 120,\n    width: 220,\n    borderRadius: 4,\n    justifyContent: 'flex-start',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  containerCenter: {\n    backgroundColor: colors.backgroundApp,\n    padding: 15\n  },\n  salseYear: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  saleForYear: {\n    flex: 3,\n    borderRadius: 4,\n    alignItems: 'center',\n    height: 40,\n    backgroundColor: colors.grayLight\n  },\n  tesxtAaleForYear: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '600',\n    paddingTop: 10\n  },\n  year: {\n    flex: 3,\n    borderRadius: 4,\n    alignItems: 'center',\n    height: 40,\n    marginLeft: 10,\n    backgroundColor: colors.grayLight\n  },\n  charYear: {\n    flex: 1,\n    fontSize: 12\n  },\n  fromDate: {\n    flex: 1,\n    fontSize: 14,\n    backgroundColor: colors.grayLight,\n    borderRadius: 4\n  },\n  rowHeader: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  rowFromDate: {\n    flex: 1,\n    height: 60,\n    backgroundColor: colors.backgroundApp,\n    paddingRight: 5\n  },\n  textFromDate: {\n    fontStyle: \"normal\",\n    fontWeight: \"600\",\n    fontSize: 12,\n    lineHeight: 21,\n    color: \"#A4A4A4\"\n  },\n  cssText: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: 'center'\n  },\n  rowEndDate: {\n    flex: 1,\n    height: 60,\n    backgroundColor: colors.backgroundApp,\n    paddingLeft: 5\n  },\n  endDate: {\n    fontStyle: \"normal\",\n    fontWeight: \"600\",\n    fontSize: 12,\n    lineHeight: 21,\n    color: \"#A4A4A4\"\n  },\n  BoxModal: {\n    flex: 1,\n    paddingLeft: 10\n  },\n  checkBox: {\n    alignSelf: \"center\"\n  },\n  textModalBox: {\n    flex: 9,\n    color: colors.black,\n    fontWeight: '500',\n    fontSize: 16,\n    paddingTop: 5\n  },\n  modelCategory: {\n    zIndex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.3)'\n  },\n  rowTableChart: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: 30,\n    justifyContent: 'center'\n  },\n  commentChart: {\n    color: \"#F6606F\",\n    textAlign: \"center\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: 12,\n    lineHeight: 20\n  },\n  commentChartTable: {\n    color: \"#76D146\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: 12,\n    lineHeight: 20\n  },\n  lineItem: {\n    height: 1,\n    backgroundColor: colors.colorLine\n  },\n  commentTransaction: {\n    color: \"#5F8BFC\",\n    textAlign: \"center\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: 12,\n    lineHeight: 20\n  },\n  commentCustomer: {\n    color: \"#FDB441\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: 12,\n    lineHeight: 20\n  },\n  dateTimeModal: {\n    flex: 1,\n    width: \"100%\",\n    position: \"absolute\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  dateTimeContainer: {\n    width: \"90%\",\n    alignSelf: 'center',\n    backgroundColor: colors.grayLight,\n    borderRadius: 5\n  },\n  dateTimeHeader: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    marginTop: 14\n  },\n  dateTimeHeaderText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontSize: 17\n  },\n  timeContainer: {\n    flexDirection: \"row\",\n    padding: 30,\n    height: 150\n  },\n  timeHourView: {\n    flex: 3,\n    backgroundColor: \"#595959\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  timeArrow: {\n    width: 30,\n    height: 30,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  timeText: {\n    color: \"#fff\",\n    fontSize: 18\n  },\n  timeDevide: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  timePeriod: {\n    flex: 2,\n    backgroundColor: \"#595959\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  timePeriodDivide: {\n    width: \"33%\",\n    height: 1,\n    backgroundColor: \"#A4A4A4\"\n  },\n  dateTimeButton: {\n    width: \"90%\",\n    height: 40,\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    borderRadius: 4\n  },\n  dateTimeText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontSize: 17\n  },\n  salectChart: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingTop: 15\n  },\n  chartPicker: {\n    flex: 5,\n    backgroundColor: colors.grayLight,\n    borderRadius: 4\n  },\n  selectpickerModal: {\n    height: 40,\n    borderRadius: 4,\n    justifyContent: 'center',\n    backgroundColor: colors.grayLight,\n    color: '#fff',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    paddingLeft: 8\n  },\n  daily: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  ViewDate: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: 40\n  },\n  textDate: {\n    paddingTop: 10,\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  information: {\n    flex: 9,\n    flexDirection: \"column\",\n    height: 290\n  },\n  shareInformation: {\n    flex: 4.75,\n    flexDirection: \"row\"\n  },\n  headerInformation: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '500',\n    textAlign: \"center\",\n    padding: 12\n  },\n  numInformation: {\n    color: colors.white,\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: \"center\",\n    justifyContent: 'center',\n    marginRight: 8,\n    maxWidth: '80%'\n  },\n  itemRevenue: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  dayInformation: {\n    color: colors.colorLine,\n    fontSize: 12,\n    fontWeight: '500',\n    textAlign: \"center\",\n    paddingTop: 4\n  },\n  rowInformation: {\n    flex: 4.75,\n    backgroundColor: colors.grayLight,\n    borderRadius: 4\n  },\n  iconInformation: {},\n  listPicker: {\n    zIndex: 5,\n    position: 'absolute',\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    borderColor: colors.backgroundApp,\n    paddingHorizontal: 7,\n    paddingVertical: 5,\n    height: 275,\n    top: 60\n  },\n  listPickerYear: {\n    zIndex: 5,\n    position: 'absolute',\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    borderColor: colors.backgroundApp,\n    paddingHorizontal: 7,\n    paddingVertical: 5,\n    height: 180,\n    top: 45\n  },\n  itemPicker: {\n    height: 30,\n    justifyContent: \"center\"\n  },\n  textItemPicker: {\n    color: colors.colorText\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/bottomTabs/TabOwnerHighLVScreen.tsx"],"names":["React","useEffect","Ionicons","colors","useState","SvgUri","moment","Icons","VictoryChart","VictoryAxis","VictoryLine","VictoryScatter","VictoryLabel","VictoryBar","VictoryTooltip","VictoryVoronoiContainer","VictoryGroup","LinearGradient","Calendar","RadioForm","PickerModel","SelectMultiple","OwnerHighLevelService","Money","Loading","ScrollView","TouchableHighlight","TabOwnerHighLVScreen","loadListYear","currentYear","Date","getFullYear","data","i","push","label","toString","value","setDataModelYear","dataModelYear","dataModelBox","width","Dimensions","get","pickerValueCheckBox","setPickerValueCheckBox","modalVisibleYear","setModalVisibleYear","modalVisibleSelect","setModalVisibleSelect","pickerValueYear","setPickerValueYear","dimensions","windowHeight","height","isDatePickerVisible","setDatePickerVisibility","toDate","modalCheckBox","setModalCheckBox","dataRevenuePoint","setDataRevenuePoint","dataRevenueDaily","setDataRevenueDaily","isSubmit","setIssubmit","fromDateTime","setFromDateTime","endDateTime","setEndDateTime","setDate","getDate","format","DateTimeDaily","setFromDateTimeDaily","whiteStyle","grid","stroke","colorLine","strokeWidth","axis","backgroundApp","tickLabels","fill","colorChartLine","fontSize","date","typeDateTime","setTypeDateTime","dataMarkedDatesState","setDataMarkedDatesState","showDatePicker","type","dateTime","dataMarked","datePresent","slice","selected","onDayPress","day","setFullYear","year","Number","month","dateString","hideDatePicker","handleConfirm","pickDate","setSeconds","dateNow","ParamDateTime","loadCharDateTime","loadRevenueOfDaily","whiteStyleBottom","ticks","gray","size","margin","padding","modalCheckBoxMonth","setModalCheckBoxMonth","checkDailyDay","setCheckDailyDay","checkDailyMoth","setCheckDailyMoth","textDate","setTextDate","radioValue","setradioValue","onchangeRadio","event","isAll","setAll","isNetSales","setNetSales","isGrossSales","setGrossSales","isTransaction","setTransaction","isCustomer","setCustomer","pickerValueSelect","setPickerValueSelect","valueHeightChart","setValueHeightChart","dataModelSelect","dataModel","dataChart","setDataChart","selectedChart","setselectedChartValue","onSelectionsChange","item","selectedAll","find","x","length","indexAll","findIndex","splice","checkNetSales","checkGrossSales","checkTransaction","checkCustomer","labelSeleted","map","index","setMonth","setYear","yearNow","increaseMonth","decreaseMonth","increaseYear","decreaseYear","nonthYearNow","monthly","setmonthly","handleConfirmYear","monthYear","loadRevenueOfMonthly","hideMonthlyPicker","getYear","yearNowChar","setYearNowChart","dateMonthArray","pointNet","setPointNet","pointGross","setPointGross","pointTransaction","setPointTransaction","pointCustomer","setPointCustomer","dateMonth","setDateMonth","checkLoadDatetimeDefault","setLoadDatetimeDefault","widthChart","setWidthChart","getDaysArray","arr","dt","startDate","endDate","daylist","v","join","loadRevenueOfDate","loadRevenueOfYear","model","ReportRevenueYear","ratio","ReportRevenueDate","maxNet","Math","max","lineNet","e","revenue","toFixed","maxGross","lineGross","maxCustomer","customerBar","maxTransaction","transactionBar","_max","heights","ReportRevenueDaily","ReportRevenueMonthly","styles","container","line","containerCenter","salseYear","zIndex","saleForYear","tesxtAaleForYear","flex","flexDirection","paddingTop","color","paddingLeft","listPickerYear","colorText","fontWeight","textAlign","charYear","y","top","bottom","left","right","parent","cursor","fontStyle","t","datum","round","lastYearRevenue","rowHeader","rowFromDate","textFromDate","fromDate","cssText","rowEndDate","salectChart","Platform","OS","undefined","chartPicker","selectpickerModal","text","iconDown","listPicker","backgroundColor","grayLight","borderBottomWidth","white","tintColor","iconChecked","minWidth","rowTableChart","marginRight","Ellipse_foc","commentChart","Ellipse_discount","commentChartTable","iconTransaction","commentTransaction","iconCustomer","commentCustomer","paddingBottom","lineItem","minHeight","viewPicker","pickerModal","position","modalViewSelectMultiple","daily","ViewDate","alignItems","information","shareInformation","rowInformation","headerInformation","itemRevenue","numInformation","now","totalNetSales","icondaily","dayInformation","last","weekdays","totalTransaction","totalCustomer","totalNetSalesWeeks","paddingRight","dateTimeModal","dateTimeContainer","dateTimeHeader","dateTimeHeaderText","arrowColor","textSectionTitleColor","calendarBackground","dayTextColor","selectedDayBackgroundColor","selectedDayTextColor","textDisabledColor","todayTextColor","header","justifyContent","marginTop","dateTimeButton","dateTimeText","marginBottom","timeContainer","timeHourView","timeArrow","timeText","StyleSheet","create","title","borderRadius","shadowColor","shadowOffset","centeredView","centeredViewYear","centeredViewSelectMultiple","modalView","shadowOpacity","shadowRadius","elevation","modalViewYear","backgroundTab","marginLeft","lineHeight","BoxModal","checkBox","alignSelf","textModalBox","black","modelCategory","timeDevide","timePeriod","timePeriodDivide","maxWidth","iconInformation","borderColor","paddingHorizontal","paddingVertical","itemPicker","textItemPicker"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAYA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT;AACA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,YALJ,EAMIC,UANJ,EAOIC,cAPJ,EAQIC,uBARJ,EASIC,YATJ,QAUO,gBAVP;AAWA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,SAASC,qBAAT;AACA,SAASC,KAAT;AAGA,OAAOC,OAAP;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,8BAA/C;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC3C,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,WADa,GACC,IAAIC,IAAJ,GAAWC,WAAX,EADD;AAEbC,YAAAA,IAFa,GAEN,EAFM;;AAGjB,iBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,cAAAA,IAAI,CAACE,IAAL,CAAU;AAAEC,gBAAAA,KAAK,EAAE,CAACN,WAAW,GAAGI,CAAf,EAAkBG,QAAlB,EAAT;AAAuCC,gBAAAA,KAAK,EAAEJ;AAA9C,eAAV;AACH;;AACDK,YAAAA,gBAAgB,CAACN,IAAD,CAAhB;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAQA,kBAA0C5B,QAAQ,CAAW,EAAX,CAAlD;AAAA;AAAA,MAAOmC,aAAP;AAAA,MAAsBD,gBAAtB;;AAEA,MAAME,YAAY,GAAG,CACjB;AAAEL,IAAAA,KAAK,EAAE,eAAT;AAA0BE,IAAAA,KAAK,EAAE;AAAjC,GADiB,EAEjB;AAAEF,IAAAA,KAAK,EAAE,iBAAT;AAA4BE,IAAAA,KAAK,EAAE;AAAnC,GAFiB,CAArB;AAKA,MAAMI,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAvC;;AACA,mBAAsDrC,QAAQ,CAAC,yBAAD,CAA9D;AAAA;AAAA,MAAOwC,mBAAP;AAAA,MAA4BC,sBAA5B;;AACA,mBAAgDzC,QAAQ,CAAC,KAAD,CAAxD;AAAA;AAAA,MAAO0C,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,mBAAoD3C,QAAQ,CAAC,KAAD,CAA5D;AAAA;AAAA,MAAO4C,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,mBAA8C7C,QAAQ,CAAC,IAAI0B,IAAJ,GAAWC,WAAX,GAAyBK,QAAzB,EAAD,CAAtD;AAAA;AAAA,MAAOc,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,MAAMC,UAAU,GAAGV,UAAU,CAACC,GAAX,CAAe,QAAf,CAAnB;AACA,MAAMU,YAAY,GAAGD,UAAU,CAACE,MAAhC;;AACA,oBAAuDlD,QAAQ,CAAC,KAAD,CAA/D;AAAA;AAAA,MAAOmD,mBAAP;AAAA,MAA4BC,uBAA5B;;AACA,MAAMC,MAAM,GAAG,IAAI3B,IAAJ,EAAf;;AACA,oBAA0C1B,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOsD,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAgDvD,QAAQ,CAAQ,EAAR,CAAxD;AAAA;AAAA,MAAOwD,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,oBAAgDzD,QAAQ,CAAsB,IAAtB,CAAxD;AAAA;AAAA,MAAO0D,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,oBAAgC3D,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAO4D,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAAwC7D,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAO8D,YAAP;AAAA,MAAqBC,eAArB;;AAEA,oBAAsC/D,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOgE,WAAP;AAAA,MAAoBC,cAApB;;AAEA,oBAA8CjE,QAAQ,CAClDE,MAAM,CAAC,IAAIwB,IAAJ,GAAWwC,OAAX,CAAmBb,MAAM,CAACc,OAAP,EAAnB,CAAD,CAAN,CAA6CC,MAA7C,CAAoD,YAApD,CADkD,CAAtD;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsBC,oBAAtB;;AAGA,MAAMC,UAAU,GAAG;AACfC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE1E,MAAM,CAAC2E,SAAjB;AAA4BC,MAAAA,WAAW,EAAE;AAAzC,KADS;AAEfC,IAAAA,IAAI,EAAE;AAAEH,MAAAA,MAAM,EAAE1E,MAAM,CAAC8E;AAAjB,KAFS;AAGfC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,IAAI,EAAEhF,MAAM,CAACiF,cAAf;AAA+BC,MAAAA,QAAQ,EAAE;AAAzC;AAHG,GAAnB;;AAMA,oBAAwBjF,QAAQ,CAACE,MAAM,CAAC,IAAIwB,IAAJ,GAAWwC,OAAX,CAAmBb,MAAM,CAACc,OAAP,KAAmB,CAAtC,CAAD,CAAN,CAAiDC,MAAjD,CAAwD,YAAxD,CAAD,CAAhC;AAAA;AAAA,MAAOc,IAAP;AAAA,MAAahB,OAAb;;AACA,oBAAwClE,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOmF,YAAP;AAAA,MAAqBC,eAArB;;AAEA,oBAAwDpF,QAAQ,CAAC,EAAD,CAAhE;AAAA;AAAA,MAAOqF,oBAAP;AAAA,MAA6BC,uBAA7B;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAkB;AACrC,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAID,IAAI,KAAK,MAAb,EAAqB;AACjB1B,MAAAA,YAAY,KAAG,IAAf,GAAqB2B,QAAQ,GAAG3B,YAAhC,GAA+C2B,QAAQ,GAAEvF,MAAM,CAAC,IAAIwB,IAAJ,EAAD,CAAN,CAAmB0C,MAAnB,CAA0B,YAA1B,CAAzD;AACH,KAFD,MAEO,IAAIoB,IAAI,KAAK,KAAb,EAAoB;AACvBxB,MAAAA,WAAW,KAAG,IAAd,GAAoByB,QAAQ,GAAGzB,WAA/B,GAA6CyB,QAAQ,GAAEvF,MAAM,CAAC,IAAIwB,IAAJ,EAAD,CAAN,CAAmB0C,MAAnB,CAA0B,YAA1B,CAAvD;AACH,KAFM,MAEA,IAAIoB,IAAI,KAAK,OAAb,EAAsB;AACzBC,MAAAA,QAAQ,GAAGpB,aAAX;AACH;;AACD,QAAIqB,UAAe,GAAG,EAAtB;AACA,QAAIC,WAAW,GAAGF,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAlB;AAEAF,IAAAA,UAAU,CAACC,WAAD,CAAV,GAA0B;AACtBE,MAAAA,QAAQ,EAAE;AADY,KAA1B;AAGA3B,IAAAA,OAAO,CAACyB,WAAD,CAAP;AACAP,IAAAA,eAAe,CAACI,IAAD,CAAf;AACAF,IAAAA,uBAAuB,CAACI,UAAD,CAAvB;AACAtC,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,GAnBD;;AAqBA,MAAM0C,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAc;AAE7B,QAAMb,IAAI,GAAG,IAAIxD,IAAJ,CACT,IAAIA,IAAJ,GAAWsE,WAAX,CAAuBD,GAAG,CAACE,IAA3B,EAAiCC,MAAM,CAACH,GAAG,CAACI,KAAJ,GAAY,CAAb,CAAvC,EAAwDJ,GAAG,CAACA,GAA5D,CADS,CAAb;AAGA7B,IAAAA,OAAO,CAAChE,MAAM,CAACgF,IAAD,CAAN,CAAad,MAAb,CAAoB,YAApB,CAAD,CAAP;AACA,QAAIsB,UAAe,GAAG,EAAtB;AACAA,IAAAA,UAAU,CAACK,GAAG,CAACK,UAAL,CAAV,GAA6B;AACzBP,MAAAA,QAAQ,EAAE;AADe,KAA7B;AAGAP,IAAAA,uBAAuB,CAACI,UAAD,CAAvB;AACH,GAXD;;AAcA,MAAMW,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,WAAOjD,uBAAuB,CAAC,KAAD,CAA9B;AACH,GAFD;;AAIA,MAAMkD,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,YAAAA,QADY,GACD,IAAI7E,IAAJ,CAASwD,IAAT,CADC;AAElBqB,YAAAA,QAAQ,CAACC,UAAT,CAAoB,CAApB;AACMC,YAAAA,OAHY,GAGF,IAAI/E,IAAJ,EAHE;AAIZgF,YAAAA,aAJY,GAIIxG,MAAM,CAACqG,QAAD,CAAN,CAAiBnC,MAAjB,CAAwB,YAAxB,CAJJ;;AAKlB,gBAAIe,YAAY,KAAK,KAArB,EAA4B;AACxBlB,cAAAA,cAAc,CAACyC,aAAD,CAAd;;AACA,kBAAG5C,YAAY,KAAG,IAAlB,EAAuB;AACnB6C,gBAAAA,gBAAgB,CAAC7C,YAAD,EAAe4C,aAAf,CAAhB;AACH;AACJ,aALD,MAKO,IAAIvB,YAAY,KAAK,MAArB,EAA6B;AAChCpB,cAAAA,eAAe,CAAC2C,aAAD,CAAf;;AACA,kBAAG1C,WAAW,KAAG,IAAjB,EAAsB;AAClB2C,gBAAAA,gBAAgB,CAACD,aAAD,EAAgB1C,WAAhB,CAAhB;AACH;AACJ,aALM,MAKA,IAAImB,YAAY,KAAK,OAAjB,IAA4BoB,QAAQ,GAAGE,OAA3C,EAAoD;AACvDnC,cAAAA,oBAAoB,CAACoC,aAAD,CAApB;AACAE,cAAAA,kBAAkB,CAACF,aAAD,CAAlB;AACH;;AACDL,YAAAA,cAAc;;AAnBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAqBA,MAAMQ,gBAAgB,GAAG;AACrBjC,IAAAA,IAAI,EAAE;AAAEH,MAAAA,MAAM,EAAE1E,MAAM,CAAC2E;AAAjB,KADe;AAErBoC,IAAAA,KAAK,EAAE;AAAErC,MAAAA,MAAM,EAAE1E,MAAM,CAACgH,IAAjB;AAAuBC,MAAAA,IAAI,EAAE,CAA7B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAFc;AAGrBnC,IAAAA,UAAU,EAAE;AAAEG,MAAAA,QAAQ,EAAE,EAAZ;AAAgBiC,MAAAA,OAAO,EAAE,CAAzB;AAA4BnC,MAAAA,IAAI,EAAE;AAAlC;AAHS,GAAzB;;AAMA,oBAAoD/E,QAAQ,CAAC,KAAD,CAA5D;AAAA;AAAA,MAAOmH,kBAAP;AAAA,MAA2BC,qBAA3B;;AAGA,oBAA0CpH,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOqH,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAA4CtH,QAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAOuH,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,oBAAgCxH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOyH,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAAoC1H,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAO2H,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgB;AAClCvE,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;;AACA,QAAIuE,KAAK,IAAI,CAAb,EAAgB;AACZvC,MAAAA,cAAc,CAAC,OAAD,CAAd;AACAnC,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAkE,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA/E,MAAAA,sBAAsB,CAAC,eAAD,CAAtB;AACAiF,MAAAA,WAAW,CAAC,MAAD,CAAX;AACH,KAPD,MAOO;AACHF,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAhE,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAX,MAAAA,sBAAsB,CAAC,iBAAD,CAAtB;AACAiF,MAAAA,WAAW,CAAC,OAAD,CAAX;AACH;;AACDE,IAAAA,aAAa,CAACE,KAAD,CAAb;AACH,GAlBD;;AAsBA,oBAAwB9H,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAO+H,KAAP;AAAA,MAAcC,MAAd;;AACA,oBAAkChI,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOiI,UAAP;AAAA,MAAmBC,WAAnB;;AACA,oBAAsClI,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOmI,YAAP;AAAA,MAAqBC,aAArB;;AACA,oBAAwCpI,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOqI,aAAP;AAAA,MAAsBC,cAAtB;;AACA,oBAAkCtI,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOuI,UAAP;AAAA,MAAmBC,WAAnB;;AAEA,oBAAkDxI,QAAQ,CAAC,WAAD,CAA1D;AAAA;AAAA,MAAOyI,iBAAP;AAAA,MAA0BC,oBAA1B;;AAEA,oBAAgD1I,QAAQ,CAAC,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,CAAD,CAAxD;AAAA;AAAA,MAAO2I,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,MAAMC,eAAe,GAAG,CACpB;AAAE9G,IAAAA,KAAK,EAAE,KAAT;AAAgBE,IAAAA,KAAK,EAAE;AAAvB,GADoB,EAEpB;AAAEF,IAAAA,KAAK,EAAE,WAAT;AAAsBE,IAAAA,KAAK,EAAE;AAA7B,GAFoB,EAGpB;AAAEF,IAAAA,KAAK,EAAE,aAAT;AAAwBE,IAAAA,KAAK,EAAE;AAA/B,GAHoB,EAIpB;AAAEF,IAAAA,KAAK,EAAE,aAAT;AAAwBE,IAAAA,KAAK,EAAE;AAA/B,GAJoB,EAKpB;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBE,IAAAA,KAAK,EAAE;AAA5B,GALoB,CAAxB;AAQA,MAAM6G,SAAmB,GAAG,EAA5B;;AACA,oBAAkC9I,QAAQ,CAAC6I,eAAD,CAA1C;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAA+ChJ,QAAQ,CAAC8I,SAAD,CAAvD;AAAA;AAAA,MAAOG,aAAP;AAAA,MAAsBC,qBAAtB;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACvH,IAAD,EAAiBwH,IAAjB,EAAkC;AACzD,QAAIC,WAAW,GAAGzH,IAAI,CAAC0H,IAAL,CAAU,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACtH,KAAF,IAAW,CAAf;AAAA,KAAX,CAAlB;;AACA,QAAIoH,WAAW,IAAID,IAAI,CAACnH,KAAL,IAAc,CAAjC,EAAoC;AAChCiH,MAAAA,qBAAqB,CAACH,SAAD,CAArB;AACAf,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,KARD,MASK;AACDV,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAU,MAAAA,qBAAqB,CAACJ,SAAD,CAArB;AACAJ,MAAAA,oBAAoB,CAAC,WAAD,CAApB;AACH;;AACD,QAAIU,IAAI,CAACnH,KAAL,IAAc,CAAlB,EAAqB;AACjB,UAAI,CAACoH,WAAD,IAAgBzH,IAAI,CAAC4H,MAAL,IAAeT,SAAS,CAACS,MAAV,GAAmB,CAAtD,EAAyD;AACrDN,QAAAA,qBAAqB,CAACH,SAAD,CAArB;AACAL,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,OAHD,MAIK;AAED,YAAIe,QAAQ,GAAGR,aAAa,CAACS,SAAd,CAAwB,UAAAH,CAAC;AAAA,iBAAIA,CAAC,CAACtH,KAAF,IAAW,CAAf;AAAA,SAAzB,CAAf;;AACA,YAAIwH,QAAQ,IAAI,CAAhB,EAAmB;AACf7H,UAAAA,IAAI,CAAC+H,MAAL,CAAYF,QAAZ,EAAsB,CAAtB;AACH;;AACDP,QAAAA,qBAAqB,CAACtH,IAAD,CAArB;AACA,YAAMgI,aAAa,GAAGhI,IAAI,CAAC0H,IAAL,CAAU,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACtH,KAAF,IAAW,CAAf;AAAA,SAAX,CAAtB;AACA,YAAM4H,eAAe,GAAGjI,IAAI,CAAC0H,IAAL,CAAU,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACtH,KAAF,IAAW,CAAf;AAAA,SAAX,CAAxB;AACA,YAAM6H,gBAAgB,GAAGlI,IAAI,CAAC0H,IAAL,CAAU,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACtH,KAAF,IAAW,CAAf;AAAA,SAAX,CAAzB;AACA,YAAM8H,aAAa,GAAGnI,IAAI,CAAC0H,IAAL,CAAU,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACtH,KAAF,IAAW,CAAf;AAAA,SAAX,CAAtB;AACAiG,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,QAAAA,WAAW,CAAC,KAAD,CAAX;AAEA,YAAIwB,YAAY,GAAG,EAAnB;AACApI,QAAAA,IAAI,CAACqI,GAAL,CAAS,UAACA,GAAD,EAAMC,KAAN,EAAgB;AACrB,cAAID,GAAG,CAAChI,KAAJ,IAAa,CAAjB,EACI+H,YAAY,IAAIE,KAAK,IAAKtI,IAAI,CAAC4H,MAAL,GAAc,CAAxB,GAAgCS,GAAG,CAAClI,KAApC,cAAkDkI,GAAG,CAAClI,KAAtE;AACP,SAHD;AAIA2G,QAAAA,oBAAoB,CAACsB,YAAD,CAApB;;AAGA,YAAIJ,aAAJ,EAAmB;AACf1B,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH,SAFD,MAEO;AACHA,UAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,YAAI2B,eAAJ,EAAqB;AACjBzB,UAAAA,aAAa,CAAC,IAAD,CAAb;AACH,SAFD,MAEO;AACHA,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH;;AAED,YAAI0B,gBAAJ,EAAsB;AAClBxB,UAAAA,cAAc,CAAC,IAAD,CAAd;AACH,SAFD,MAEO;AACHA,UAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAED,YAAIyB,aAAJ,EAAmB;AACfvB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH,SAFD,MAEO;AACHA,UAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ;AACJ;AACJ,GA1ED;;AA8EA,oBAA0BxI,QAAQ,CAAC,CAACE,MAAM,CAAC,IAAIwB,IAAJ,GAAWwC,OAAX,CAAmBb,MAAM,CAACc,OAAP,EAAnB,CAAD,CAAN,CAA6CC,MAA7C,CAAoD,IAApD,CAAF,CAAlC;AAAA;AAAA,MAAO+B,KAAP;AAAA,MAAcgE,QAAd;;AAEA,oBAAwBnK,QAAQ,CAAC,CAACE,MAAM,CAAC,IAAIwB,IAAJ,GAAWwC,OAAX,CAAmBb,MAAM,CAACc,OAAP,EAAnB,CAAD,CAAN,CAA6CC,MAA7C,CAAoD,MAApD,CAAF,CAAhC;AAAA;AAAA,MAAO6B,IAAP;AAAA,MAAamE,OAAb;;AAEA,MAAIC,OAAO,GAAG,CAACnK,MAAM,CAAC,IAAIwB,IAAJ,GAAWwC,OAAX,CAAmBb,MAAM,CAACc,OAAP,EAAnB,CAAD,CAAN,CAA6CC,MAA7C,CAAoD,MAApD,CAAf;;AAEA,MAAMkG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAInE,KAAK,GAAG,EAAZ,EAAgB;AACZgE,MAAAA,QAAQ,CAAChE,KAAK,GAAG,CAAT,CAAR;AACH,KAFD,MAEOgE,QAAQ,CAAC,CAAD,CAAR;AACV,GAJD;;AAMA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIpE,KAAK,GAAG,CAAZ,EAAe;AACXgE,MAAAA,QAAQ,CAAChE,KAAK,GAAG,CAAT,CAAR;AACH,KAFD,MAEOgE,QAAQ,CAAC,EAAD,CAAR;AACV,GAJD;;AAMA,MAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAIvE,IAAI,GAAGoE,OAAX,EAAoB;AAChBD,MAAAA,OAAO,CAACnE,IAAI,GAAG,CAAR,CAAP;AACH,KAFD,MAEOmE,OAAO,CAAC,IAAD,CAAP;AACV,GAJD;;AAMA,MAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAIxE,IAAI,GAAG,IAAX,EAAiB;AACbmE,MAAAA,OAAO,CAACnE,IAAI,GAAG,CAAR,CAAP;AACH,KAFD,MAEOmE,OAAO,CAACC,OAAD,CAAP;AACV,GAJD;;AAMA,MAAMK,YAAY,GAAGvE,KAAK,GAAG,GAAR,GAAcF,IAAnC;;AACA,oBAA8BjG,QAAQ,CAAC0K,YAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAMC,SAAS,GAAG3E,KAAK,GAAG,GAAR,GAAcF,IAAhC;AACA2E,IAAAA,UAAU,CAACE,SAAD,CAAV;AACAC,IAAAA,oBAAoB,CAAC5E,KAAD,EAAQF,IAAR,CAApB;AACA+E,IAAAA,iBAAiB;AACpB,GALD;;AAQA,MAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,WAAO5D,qBAAqB,CAAC,KAAD,CAA5B;AACH,GAFD;;AAIA,MAAI6D,OAAO,GAAG5H,MAAM,CAAC1B,WAAP,EAAd;;AACA,oBAAuC3B,QAAQ,CAACiL,OAAO,CAACjJ,QAAR,EAAD,CAA/C;AAAA;AAAA,MAAOkJ,WAAP;AAAA,MAAoBC,eAApB;;AAEA,MAAMC,cAAwB,GAAG,EAAjC;;AACA,oBAAgCpL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOqL,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAAoCtL,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOuL,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAAgDxL,QAAQ,CAAC,EAAD,CAAxD;AAAA;AAAA,MAAOyL,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,oBAA0C1L,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAO2L,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAkC5L,QAAQ,CAACoL,cAAD,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAA2D9L,QAAQ,CAAC,IAAD,CAAnE;AAAA;AAAA,MAAO+L,wBAAP;AAAA,MAAiCC,sBAAjC;;AACA,oBAAoChM,QAAQ,CAAC,GAAD,CAA5C;AAAA;AAAA,MAAOiM,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACrI,YAAD,EAAoBE,WAApB,EAAyC;AAC1D,SAAK,IAAIoI,GAAG,GAAG,EAAV,EAAcC,EAAE,GAAG,IAAI3K,IAAJ,CAASoC,YAAT,CAAxB,EAAgDuI,EAAE,IAAIrI,WAAtD,EAAmEqI,EAAE,CAACnI,OAAH,CAAWmI,EAAE,CAAClI,OAAH,KAAe,CAA1B,CAAnE,EAAiG;AAC7FiI,MAAAA,GAAG,CAACtK,IAAJ,CAAS5B,MAAM,CAAC,IAAIwB,IAAJ,CAAS2K,EAAT,CAAD,CAAN,CAAqBjI,MAArB,CAA4B,OAA5B,CAAT;AACH;;AACD,WAAOgI,GAAP;AACH,GALD;;AAMA,MAAMzF,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC2F,SAAD,EAAiBC,OAAjB,EAAkC;AACvD,QAAIC,OAAO,GAAGL,YAAY,CAAC,IAAIzK,IAAJ,CAAS4K,SAAT,CAAD,EAAsB,IAAI5K,IAAJ,CAAS6K,OAAT,CAAtB,CAA1B;AACAC,IAAAA,OAAO,CAACvC,GAAR,CAAY,UAACwC,CAAD;AAAA,aAAOA,CAAC,CAAC7G,KAAF,CAAQ,CAAR,EAAW,EAAX,CAAP;AAAA,KAAZ,EAAmC8G,IAAnC,CAAwC,EAAxC;AAEAZ,IAAAA,YAAY,CAACU,OAAD,CAAZ;;AACA,QAAIA,OAAO,CAAChD,MAAR,GAAiB,CAArB,EAAwB;AACpB0C,MAAAA,aAAa,CAAEM,OAAO,CAAChD,MAAR,GAAiB,EAAjB,GAAsB,GAAxB,CAAb;AACH;;AACDmD,IAAAA,iBAAiB,CAACL,SAAD,EAAYC,OAAZ,CAAjB;AACH,GATD;;AAWA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,KADkB,GACV;AACR,sBAAQ3G,MAAM,CAACpD,eAAD;AADN,aADU;AAItBe,YAAAA,WAAW,CAAC,IAAD,CAAX;AAJsB;AAAA,6CAKL3C,qBAAqB,CAAC4L,iBAAtB,CAAwCD,KAAxC,CALK;;AAAA;AAKlBjL,YAAAA,IALkB;AAMtBiC,YAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,YAAAA,mBAAmB,CAAC7B,IAAD,CAAnB;;AAPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAUA,MAAMmL,KAAK,GAAG,MAAd;;AACA,MAAMJ,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOL,SAAP,EAAuBC,OAAvB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAElBM,YAAAA,KAFkB,GAEV;AACR,0BAAYP,SADJ;AAER,wBAAUC,OAFF;AAGR,uBAASQ;AAHD,aAFU;AAOtBlJ,YAAAA,WAAW,CAAC,IAAD,CAAX;AAPsB;AAAA,6CAQL3C,qBAAqB,CAAC8L,iBAAtB,CAAwCH,KAAxC,CARK;;AAAA;AAQlBjL,YAAAA,IARkB;AASlBqL,YAAAA,MATkB,GASVC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQtL,IAAI,CAACwL,OAAL,CAAanD,GAAb,CAAiB,UAAAoD,CAAC;AAAA,qBAAIA,CAAC,CAACC,OAAN;AAAA,aAAlB,CAAR,EAAJ,CAA8CC,OAA9C,EATU;AAUlBC,YAAAA,QAVkB,GAURN,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQtL,IAAI,CAAC6L,SAAL,CAAexD,GAAf,CAAmB,UAAAoD,CAAC;AAAA,qBAAIA,CAAC,CAACC,OAAN;AAAA,aAApB,CAAR,EAAJ,CAAgDC,OAAhD,EAVQ;AAWlBG,YAAAA,WAXkB,GAWLR,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQtL,IAAI,CAAC+L,WAAL,CAAiB1D,GAAjB,CAAqB,UAAAoD,CAAC;AAAA,qBAAIA,CAAC,CAACC,OAAN;AAAA,aAAtB,CAAR,EAAJ,CAAkDC,OAAlD,EAXK;AAYlBK,YAAAA,cAZkB,GAYFV,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQtL,IAAI,CAACiM,cAAL,CAAoB5D,GAApB,CAAwB,UAAAoD,CAAC;AAAA,qBAAIA,CAAC,CAACC,OAAN;AAAA,aAAzB,CAAR,EAAJ,CAAqDC,OAArD,EAZE;AAalBJ,YAAAA,GAbkB,GAaZD,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,CAAC,CAACD,MAAD,GAAQ,MAAT,EAAgB,CAACO,QAAD,GAAU,MAA1B,EAAiC,CAACE,WAAlC,EAA8C,CAACE,cAA/C,EAA+D3D,GAA/D,CAAmE,UAAAoD,CAAC;AAAA,qBAAIA,CAAJ;AAAA,aAApE,CAAR,EAbQ;;AActB,gBAAGF,GAAG,GAAG,GAAT,EAAa;AACLW,cAAAA,IADK,GACC5H,MAAM,CAACiH,GAAG,CAACI,OAAJ,EAAD,CADP;AAELQ,cAAAA,OAFK,GAEK,CAAC,CAAC,CAACD,IAAI,GAAC,CAAN,EAASP,OAAT,EAAF,EAAqB,CAAC,CAACO,IAAI,GAAC,CAAN,EAASP,OAAT,EAAtB,EAAyC,CAAC,CAACO,IAAI,GAAC,CAAN,EAASP,OAAT,EAA1C,EAA8D,CAAC,CAACO,IAAI,GAAC,GAAN,EAAWP,OAAX,EAA/D,EAAoF,CAAC,CAACO,IAAI,GAAC,GAAN,EAAWP,OAAX,EAArF,EAA2GO,IAA3G,CAFL;AAGTlF,cAAAA,mBAAmB,CAACmF,OAAD,CAAnB;AACH;;AACDzC,YAAAA,WAAW,CAAC1J,IAAI,CAACwL,OAAN,CAAX;AACA5B,YAAAA,aAAa,CAAC5J,IAAI,CAAC6L,SAAN,CAAb;AACA7B,YAAAA,gBAAgB,CAAChK,IAAI,CAAC+L,WAAN,CAAhB;AACAjC,YAAAA,mBAAmB,CAAC9J,IAAI,CAACiM,cAAN,CAAnB;AACAhK,YAAAA,WAAW,CAAC,KAAD,CAAX;;AAvBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AA0BA,MAAM+C,kBAAkB,GAAG,SAArBA,kBAAqB,CAAO1B,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBvB,YAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACIkJ,YAAAA,KAFmB,GAEX;AACR,0BAAY3H,IADJ;AAER,wBAAUA;AAFF,aAFW;AAMvBrB,YAAAA,WAAW,CAAC,IAAD,CAAX;AANuB;AAAA,6CAON3C,qBAAqB,CAAC8M,kBAAtB,CAAyCnB,KAAzC,CAPM;;AAAA;AAOnBjL,YAAAA,IAPmB;AAQvBiC,YAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,YAAAA,mBAAmB,CAAC/B,IAAD,CAAnB;;AATuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAYA,MAAMmJ,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAO5E,KAAP,EAAmBF,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBtC,YAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACIkJ,YAAAA,KAFqB,GAEb;AACR,uBAAS1G,KADD;AAER,sBAAQF;AAFA,aAFa;AAMzBpC,YAAAA,WAAW,CAAC,IAAD,CAAX;AANyB;AAAA,6CAOR3C,qBAAqB,CAAC+M,oBAAtB,CAA2CpB,KAA3C,CAPQ;;AAAA;AAOrBjL,YAAAA,IAPqB;AAQzBiC,YAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,YAAAA,mBAAmB,CAAC/B,IAAD,CAAnB;;AATyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAYA/B,EAAAA,SAAS,CAAC,YAAM;AACZ2B,IAAAA,YAAY;AACZoL,IAAAA,iBAAiB;;AACjB,QAAIb,wBAAJ,EAA8B;AAC1B,UAAIjI,YAAY,KAAG,IAAf,IAAsBE,WAAW,KAAG,IAAxC,EAA6C;AACzC2C,QAAAA,gBAAgB,CAAC7C,YAAD,EAAeE,WAAf,CAAhB;AACH;AACJ;AACJ,GARQ,EAQN,CAAClB,eAAD,CARM,CAAT;AASA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoL,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACI,IAAA,YAAY,EAAC,QADjB;AAEI,IAAA,eAAe,EAAE,yBAAAlM,KAAK,EAAI,CAEzB,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiM,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACH,MAAM,CAACI,SAAR,EAAmB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACjI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE;AAAEyI,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,aAAa,EAAE,KAA1B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KADX;AAEI,IAAA,OAAO,EAAE,mBAAM;AACXjM,MAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEgM,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE,MAAT;AAAiB5J,MAAAA,QAAQ,EAAE,EAA3B;AAA+B6J,MAAAA,WAAW,EAAE;AAA5C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhM,eADL,CADJ,CANJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4L,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEvO,KAAK,CAACsF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXJ,CADJ,EAgBK/C,gBAAgB,IACjB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACwL,MAAM,CAACa,cAAR,EAAwB;AAAE1M,MAAAA,KAAK,EAAE;AAAT,KAAxB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,mBAAmB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,aAAa,CAAC8H,GAAd,CAAkB,UAACrI,IAAD,EAAOsI,KAAP;AAAA,WACf,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AACI,MAAA,KAAK,EAAE;AAAEhD,QAAAA,OAAO,EAAE;AAAX,OADX;AAEI,MAAA,aAAa,EAAE,oBAFnB;AAGI,MAAA,OAAO,EAAE,mBAAM;AACXvE,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAI,QAAAA,kBAAkB,CAACnB,IAAI,CAACG,KAAN,CAAlB;AACAoJ,QAAAA,eAAe,CAACvJ,IAAI,CAACG,KAAN,CAAf;AACH,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8M,QAAAA,KAAK,EAAE9O,MAAM,CAACiP,SAAhB;AAA2BC,QAAAA,UAAU,EAAE,KAAvC;AAA8ChK,QAAAA,QAAQ,EAAE,EAAxD;AAA4DiK,QAAAA,SAAS,EAAE;AAAvE,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiGtN,IAAI,CAACG,KAAtG,CATJ,CADJ,CADe;AAAA,GAAlB,CADL,CADJ,CAjBJ,CALJ,EA4CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE2M,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CJ,CADJ,EAgDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACiB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAE,IAAxB;AAA8B,IAAA,YAAY,EAAE,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAE,GADX;AAEI,IAAA,aAAa,EAAE;AAAE5F,MAAAA,CAAC,EAAE,EAAL;AAAS6F,MAAAA,CAAC,EAAE;AAAZ,KAFnB;AAGI,IAAA,OAAO,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,MAAM,EAAE,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,EAA5B;AAAgCC,MAAAA,KAAK,EAAE;AAAvC,KAHb;AAII,IAAA,kBAAkB,EACd,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR;AAOI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAV,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,YAAD;AACI,IAAA,CAAC,EAAE,GADP;AAEI,IAAA,CAAC,EAAE,EAFP;AAGI,IAAA,KAAK,EAAE;AACHzK,MAAAA,QAAQ,EAAE,EADP;AAEH0K,MAAAA,SAAS,EAAE,QAFR;AAGH5K,MAAAA,IAAI,EAAEhF,MAAM,CAACiP;AAHV,KAHX;AAQI,IAAA,IAAI,EAAE,GARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAmBI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CADhB;AAEI,IAAA,UAAU,EAAE,oBAACY,CAAD;AAAA,kBAAUzO,KAAK,CAACyO,CAAD,CAAf;AAAA,KAFhB;AAGI,IAAA,aAAa,MAHjB;AAII,IAAA,WAAW,EAAC,MAJhB;AAKI,IAAA,KAAK,EAAErL,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EA0BI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAE,CAAI2G,WAAJ,UAAyBA,WAAzB,UAA8CA,WAA9C,UAAmEA,WAAnE,UACTA,WADS,UACYA,WADZ,UACiCA,WADjC,UACsDA,WADtD,UAETA,WAFS,UAEYA,WAFZ,UAEiCA,WAFjC,UAEsDA,WAFtD,SADhB;AAII,IAAA,KAAK,EAAErE,gBAJX;AAKI,IAAA,WAAW,EAAC,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EAiCI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAErD,gBADV;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,WAAD;AACI,IAAA,aAAa,EAAC,SADlB;AAEI,IAAA,MAAM,EAAE;AAAA;;AAAA,UAAGqM,KAAH,QAAGA,KAAH;AAAA,aAAe,CACnB/M,eAAe,GAAG,GAAlB,GAAwB+M,KAAK,CAAC1J,KADX,WAEnB,gBAAgBhF,KAAK,CAAC0O,KAAK,CAACvC,OAAN,GAAgBJ,IAAI,CAAC4C,KAAL,CAAWD,KAAK,CAACvC,OAAjB,EAA0BtL,QAA1B,EAAhB,GAAuDkL,IAAI,CAAC4C,KAAL,CAAWD,KAAK,CAACT,CAAjB,EAAoBpN,QAApB,EAAxD,CAFF,oBAE6F,GAF7F,EAGnB,gBAAgBb,KAAK,CAAC0O,KAAK,CAACE,eAAN,GAAwB7C,IAAI,CAAC4C,KAAL,CAAWD,KAAK,CAACE,eAAjB,EAAkC/N,QAAlC,EAAxB,GAAuE,GAAxE,CAHF,CAAf;AAAA,KAFZ;AAOI,IAAA,cAAc,EACV,oBAAC,cAAD;AACI,MAAA,YAAY,EAAE,IADlB;AAEI,MAAA,cAAc,EAAE,KAFpB;AAGI,MAAA,YAAY,EAAE;AAAEoN,QAAAA,CAAC,EAAE,CAAC;AAAN,OAHlB;AAII,MAAA,KAAK,EACD;AACInK,QAAAA,QAAQ,EAAE,EADd;AAEIgC,QAAAA,MAAM,EAAE,CAFZ;AAGIlC,QAAAA,IAAI,EAAE;AAHV,OALR;AAWI,MAAA,WAAW,EAAE;AACTN,QAAAA,MAAM,EAAE,SADC;AAETM,QAAAA,IAAI,EAAE;AAFG,OAXjB;AAeI,MAAA,YAAY,EAAE,CAflB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EA+BI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAE,CADV;AAEI,IAAA,KAAK,EAAE;AACHnD,MAAAA,IAAI,EAAE;AACFmD,QAAAA,IAAI,EAAE;AADJ;AADH,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CAjCJ,CADJ,CADJ,CADJ,CAhDJ,CADJ,EAkII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmJ,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlIJ,EAmII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAAC8B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAM,CAAC+B,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACgC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhC,MAAM,CAACiC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEjC,MAAM,CAACkC,OADlB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAM7K,cAAc,CAAC,MAAD,CAApB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEmJ,MAAAA,IAAI,EAAE,CAAR;AAAWI,MAAAA,WAAW,EAAE;AAAxB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiB5J,MAAAA,QAAQ,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,YAAY,KAAG,IAAf,GAAoB,eAApB,GAAoC5D,MAAM,CAAC4D,YAAD,CAAN,CAAqBM,MAArB,CAA4B,YAA5B,CADzC,CADJ,CAJJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsK,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEvO,KAAK,CAACsF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADJ,CAFJ,CADJ,EAmBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyI,MAAM,CAACmC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnC,MAAM,CAAC3B,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE2B,MAAM,CAACiC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEjC,MAAM,CAACkC,OADlB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAM7K,cAAc,CAAC,KAAD,CAApB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEmJ,MAAAA,IAAI,EAAE,CAAR;AAAWI,MAAAA,WAAW,EAAE;AAAxB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiB5J,MAAAA,QAAQ,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,WAAW,KAAG,IAAd,GAAmB,eAAnB,GAAmC9D,MAAM,CAAC8D,WAAD,CAAN,CAAoBI,MAApB,CAA2B,YAA3B,CADxC,CADJ,CAJJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsK,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEvO,KAAK,CAACsF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADJ,CAFJ,CAnBJ,CADJ,EAwCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACyI,MAAM,CAACoC,WAAR,EAAqB;AAAE/B,MAAAA,MAAM,EAAEgC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6BC;AAAvC,KAArB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAACwC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,OAAO,EACH,mBAAM;AACF7N,MAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACH,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsL,MAAM,CAACyC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzC,MAAM,CAAC0C,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BnI,iBAA3B,CADJ,CAPJ,CADJ,EAYI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEyF,MAAM,CAAC2C,QAAxB;AAAkC,IAAA,IAAI,EAAC,YAAvC;AAAoD,IAAA,IAAI,EAAE,EAA1D;AAA8D,IAAA,KAAK,EAAC,MAApE;AACI,IAAA,OAAO,EAAE,mBAAM;AACXhO,MAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ,EAkBKA,kBAAkB,IACf,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACsL,MAAM,CAAC4C,UAAR,EAAoB;AAAEzO,MAAAA,KAAK,EAAEA,KAAK,GAAG;AAAjB,KAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACI,IAAA,QAAQ,EAAE;AAAE6N,MAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAA1B;AAAqCC,MAAAA,iBAAiB,EAAE;AAAxD,KADd;AAEI,IAAA,UAAU,EAAE;AAAEpC,MAAAA,KAAK,EAAE9O,MAAM,CAACmR;AAAhB,KAFhB;AAGI,IAAA,aAAa,EAAE;AAAEC,MAAAA,SAAS,EAAEpR,MAAM,CAACmR;AAApB,KAHnB;AAII,IAAA,sBAAsB,EAAE/Q,KAAK,CAACiR,WAJlC;AAKI,IAAA,KAAK,EAAEvI,eALX;AAMI,IAAA,KAAK,EAAE;AAAE0F,MAAAA,MAAM,EAAE;AAAV,KANX;AAOI,IAAA,aAAa,EAAEtF,aAPnB;AAQI,IAAA,kBAAkB,EAAEE,kBARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAnBR,CAxCJ,EA4EI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAE,IAAxB;AAA8B,IAAA,YAAY,EAAE,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEuF,MAAAA,IAAI,EAAE,CAAR;AAAWE,MAAAA,UAAU,EAAE,EAAvB;AAA2ByC,MAAAA,QAAQ,EAAE;AAArC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtJ,KAAK,IACF,oBAAC,YAAD;AACI,IAAA,aAAa,EAAE;AAAEwB,MAAAA,CAAC,EAAE,EAAL;AAAS6F,MAAAA,CAAC,EAAE;AAAZ,KADnB;AAEI,IAAA,KAAK,EAAEnD,UAFX;AAGI,IAAA,OAAO,EAAE;AAAEoD,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,MAAM,EAAE,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,EAA5B;AAAgCC,MAAAA,KAAK,EAAE;AAAvC,KAHb;AAII,IAAA,kBAAkB,EACd,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR;AAOI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAV,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,YAAD;AACI,IAAA,CAAC,EAAE,GADP;AAEI,IAAA,CAAC,EAAE,CAFP;AAGI,IAAA,KAAK,EAAE,CAAC,EAHZ;AAII,IAAA,KAAK,EAAE;AACHzK,MAAAA,QAAQ,EAAE,EADP;AAEH0K,MAAAA,SAAS,EAAE,QAFR;AAGH5K,MAAAA,IAAI,EAAEhF,MAAM,CAACiP;AAHV,KAJX;AASI,IAAA,IAAI,EAAE,yBATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAYI,oBAAC,YAAD;AACI,IAAA,CAAC,EAAE,GADP;AAEI,IAAA,CAAC,EAAE/C,UAAU,GAAG,EAFpB;AAGI,IAAA,KAAK,EAAE,CAAC,EAHZ;AAII,IAAA,KAAK,EAAE;AACHhH,MAAAA,QAAQ,EAAE,EADP;AAEH0K,MAAAA,SAAS,EAAE,QAFR;AAGH5K,MAAAA,IAAI,EAAEhF,MAAM,CAACiP;AAHV,KAJX;AASI,IAAA,IAAI,EAAE,wBATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAsBI,oBAAC,YAAD;AACI,IAAA,CAAC,EAAE,GADP;AAEI,IAAA,CAAC,EAAE,EAFP;AAGI,IAAA,KAAK,EAAE;AACH/J,MAAAA,QAAQ,EAAE,EADP;AAEH0K,MAAAA,SAAS,EAAE,QAFR;AAGH5K,MAAAA,IAAI,EAAEhF,MAAM,CAACiP;AAHV,KAHX;AAQI,IAAA,IAAI,EAAE,GARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,EAgCI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAErG,gBADhB;AAEI,IAAA,UAAU,EAAE,oBAACiH,CAAD;AAAA,kBAAUzO,KAAK,CAAC+L,IAAI,CAAC4C,KAAL,CAAWF,CAAC,GAAG7C,KAAf,CAAD,CAAf;AAAA,KAFhB;AAGI,IAAA,aAAa,MAHjB;AAII,IAAA,WAAW,EAAC,MAJhB;AAKI,IAAA,KAAK,EAAExI,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,EAuCI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAEsH,SADhB;AAEI,IAAA,KAAK,EAAEhF,gBAFX;AAGI,IAAA,WAAW,EAAC,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,EA6CI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAE8B,gBADhB;AAEI,IAAA,UAAU,EAAE,oBAACiH,CAAD;AAAA,kBAAUzO,KAAK,CAACyO,CAAD,CAAf;AAAA,KAFhB;AAGI,IAAA,aAAa,MAHjB;AAII,IAAA,WAAW,EAAC,OAJhB;AAKI,IAAA,KAAK,EAAErL,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CJ,CATJ,EA+DK0D,UAAU,IACP,oBAAC,YAAD;AACI,IAAA,IAAI,EAAEoD,QADV;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,WAAD;AACI,IAAA,aAAa,EAAC,SADlB;AAEI,IAAA,MAAM,EAAE;AAAA;;AAAA,UAAGwE,KAAH,SAAGA,KAAH;AAAA,aAAe,CAAC,QAAQA,KAAK,CAAC3K,IAAf,EAAqB,gBAAG/D,KAAK,CAAC0O,KAAK,CAACvC,OAAP,CAAR,qBAA2B,CAA3B,IAAiC,MAAtD,CAAf;AAAA,KAFZ;AAGI,IAAA,cAAc,EACV,oBAAC,cAAD;AACI,MAAA,cAAc,EAAE,KADpB;AAEI,MAAA,YAAY,EAAE;AAAE/D,QAAAA,CAAC,EAAE,CAAL;AAAQ6F,QAAAA,CAAC,EAAE,CAAC;AAAZ,OAFlB;AAGI,MAAA,KAAK,EACD;AACInK,QAAAA,QAAQ,EAAE,EADd;AAEIF,QAAAA,IAAI,EAAE;AAFV,OAJR;AAWI,MAAA,WAAW,EAAE;AACTN,QAAAA,MAAM,EAAE,SADC;AAETM,QAAAA,IAAI,EAAE;AAFG,OAXjB;AAeI,MAAA,YAAY,EAAE,CAflB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EA2BI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAE,CADV;AAEI,IAAA,KAAK,EAAE;AACHnD,MAAAA,IAAI,EAAE;AACFmD,QAAAA,IAAI,EAAE;AADJ;AADH,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CAhER,EAqGI,oBAAC,YAAD;AACI,IAAA,MAAM,EAAE,EADZ;AAEI,IAAA,KAAK,EAAE;AAAEnD,MAAAA,IAAI,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT;AAAR,KAFX;AAGI,IAAA,UAAU,EAAE,CAAC,SAAD,EAAY,SAAZ,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKgG,aAAa,IACV,oBAAC,UAAD;AACI,IAAA,MAAM,EAAE;AAAA,UAAGwH,KAAH,SAAGA,KAAH;AAAA,aAAe,CAAC,QAAQA,KAAK,CAAC3K,IAAf,EAAqB/D,KAAK,CAAC0O,KAAK,CAACT,CAAN,CAAQpN,QAAR,EAAD,CAA1B,CAAf;AAAA,KADZ;AAEI,IAAA,cAAc,EACV,oBAAC,cAAD;AACI,MAAA,cAAc,EAAE,KADpB;AAEI,MAAA,YAAY,EAAE;AAAEuH,QAAAA,CAAC,EAAEhB,UAAU,GAAG,EAAH,GAAQ,CAAvB;AAA0B6G,QAAAA,CAAC,EAAE,CAAC;AAA9B,OAFlB;AAGI,MAAA,KAAK,EACD;AACInK,QAAAA,QAAQ,EAAE,EADd;AAEIF,QAAAA,IAAI,EAAE;AAFV,OAJR;AAWI,MAAA,WAAW,EAAE;AACTN,QAAAA,MAAM,EAAE,SADC;AAETM,QAAAA,IAAI,EAAE;AAFG,OAXjB;AAeI,MAAA,YAAY,EAAE,CAflB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR;AAqBI,IAAA,IAAI,EAAE0G,gBArBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANR,EA8BKlD,UAAU,IACP,oBAAC,UAAD;AACI,IAAA,MAAM,EAAE;AAAA,UAAGsH,KAAH,SAAGA,KAAH;AAAA,aAAe,CAAC,QAAQA,KAAK,CAAC3K,IAAf,EAAqB/D,KAAK,CAAC0O,KAAK,CAACT,CAAN,CAAQpN,QAAR,EAAD,CAA1B,CAAf;AAAA,KADZ;AAEI,IAAA,cAAc,EACV,oBAAC,cAAD;AACI,MAAA,cAAc,EAAE,KADpB;AAEI,MAAA,YAAY,EAAE;AAAEuH,QAAAA,CAAC,EAAElB,aAAa,GAAG,CAAE,EAAL,GAAU,CAA5B;AAA+B+G,QAAAA,CAAC,EAAE,CAAC;AAAnC,OAFlB;AAGI,MAAA,KAAK,EACD;AACInK,QAAAA,QAAQ,EAAE,EADd;AAEIF,QAAAA,IAAI,EAAE;AAFV,OAJR;AAWI,MAAA,WAAW,EAAE;AACTN,QAAAA,MAAM,EAAE,SADC;AAETM,QAAAA,IAAI,EAAE;AAFG,OAXjB;AAeI,MAAA,YAAY,EAAE,CAflB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR;AAqBI,IAAA,IAAI,EAAE4G,aArBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BR,CArGJ,EA4JKxD,YAAY,IACT,oBAAC,YAAD;AACI,IAAA,IAAI,EAAEoD,UADV;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,WAAD;AACI,IAAA,aAAa,EAAC,SADlB;AAEI,IAAA,MAAM,EAAE;AAAA;;AAAA,UAAGsE,KAAH,SAAGA,KAAH;AAAA,aAAe,CAAC,QAAQA,KAAK,CAAC3K,IAAf,EAAqB,iBAAG/D,KAAK,CAAC0O,KAAK,CAACvC,OAAP,CAAR,sBAA2B,CAA3B,IAAiC,MAAtD,CAAf;AAAA,KAFZ;AAGI,IAAA,cAAc,EACV,oBAAC,cAAD;AACI,MAAA,cAAc,EAAE,KADpB;AAEI,MAAA,YAAY,EAAE;AAAE/D,QAAAA,CAAC,EAAE,CAAL;AAAQ6F,QAAAA,CAAC,EAAE,CAAC;AAAZ,OAFlB;AAGI,MAAA,KAAK,EACD;AACInK,QAAAA,QAAQ,EAAE,EADd;AAEIF,QAAAA,IAAI,EAAE;AAFV,OAJR;AAWI,MAAA,WAAW,EAAE;AACTN,QAAAA,MAAM,EAAE,SADC;AAETM,QAAAA,IAAI,EAAE;AAFG,OAXjB;AAeI,MAAA,YAAY,EAAE,CAflB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EA2BI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAE,CADV;AAEI,IAAA,KAAK,EAAE;AACHnD,MAAAA,IAAI,EAAE;AACFmD,QAAAA,IAAI,EAAE;AADJ;AADH,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CA7JR,CAFR,CADJ,EAwMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmJ,MAAM,CAACoD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAErC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE/O,KAAK,CAACqR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CADJ,CADJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAErC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE/O,KAAK,CAACuR,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExD,MAAM,CAACyD,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ,CARJ,EAeI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEJ,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAErC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE/O,KAAK,CAACyR,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1D,MAAM,CAAC2D,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ,CAfJ,EAsBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEN,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAErC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE/O,KAAK,CAAC2R,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5D,MAAM,CAAC6D,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CAtBJ,CAxMJ,CADJ,CA5EJ,EAqTI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE,EAAjB;AAAqBpD,MAAAA,UAAU,EAAE;AAAjC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArTJ,EAwTI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC3O,aAAa,IAAE;AAAC4O,MAAAA,SAAS,EAAE;AAAZ,KAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhE,MAAM,CAACiE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,wBAAD;AACI,IAAA,KAAK,EAAE;AAAE5D,MAAAA,MAAM,EAAE;AAAV,KADX;AAEI,IAAA,OAAO,EACH,mBAAM;AACFhL,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4K,MAAM,CAACkE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElE,MAAM,CAAC0C,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BpO,mBAA3B,CADJ,CARJ,CADJ,EAaI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE0L,MAAM,CAAC2C,QAAxB;AAAkC,IAAA,IAAI,EAAC,YAAvC;AAAoD,IAAA,IAAI,EAAE,EAA1D;AAA8D,IAAA,KAAK,EAAC,MAApE;AACI,IAAA,OAAO,EAAE,mBAAM,CACd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ,EAmBQvN,aAAa,IACb,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE+O,MAAAA,QAAQ,EAAE,UAAZ;AAAwB9C,MAAAA,IAAI,EAAE,CAA9B;AAAiCF,MAAAA,GAAG,EAAC,CAArC;AAAwCd,MAAAA,MAAM,EAAE;AAAhD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACL,MAAM,CAACoE,uBAAR,EAAiC;AAAEvB,MAAAA,eAAe,EAAE;AAAnB,KAAjC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAEpJ,UADb;AAEI,IAAA,KAAK,EAAE;AAAE4G,MAAAA,MAAM,EAAE;AAAV,KAFX;AAGI,IAAA,WAAW,EAAEnM,YAHjB;AAII,IAAA,WAAW,EAAErC,MAAM,CAACmR,KAJxB;AAKI,IAAA,UAAU,EAAE;AAAEjM,MAAAA,QAAQ,EAAE,EAAZ;AAAgB4J,MAAAA,KAAK,EAAE9O,MAAM,CAACmR,KAA9B;AAAqCc,MAAAA,aAAa,EAAE,EAApD;AAAwDpD,MAAAA,UAAU,EAAE;AAApE,KALhB;AAMI,IAAA,gBAAgB,EAAE7O,MAAM,CAACmR,KAN7B;AAOI,IAAA,mBAAmB,EAAEnR,MAAM,CAACmR,KAPhC;AAQI,IAAA,UAAU,EAAE,EARhB;AASI,IAAA,OAAO,EAAErJ,aATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CApBR,EAqCQR,aAAa,IAET,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE6G,MAAM,CAACqE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErE,MAAM,CAACsE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE9D,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACzG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,QAA/B,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEiH,MAAAA,IAAI,EAAE,CAAR;AAAW+D,MAAAA,UAAU,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEvE,MAAM,CAACkC,OADlB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAM7K,cAAc,CAAC,OAAD,CAApB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEmJ,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,aAAa,EAAE,KAA1B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,IAAI,EAAE,GAAR;AAAaG,MAAAA,KAAK,EAAE,MAApB;AAA4B5J,MAAAA,QAAQ,EAAE;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/E,MAAM,CAACmE,aAAD,CAAN,CAAsBD,MAAtB,CAA6B,YAA7B,CADL,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsK,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEvO,KAAK,CAACsF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAJJ,CADJ,CAJJ,CADJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyI,MAAM,CAACwE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExE,MAAM,CAACyE,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzE,MAAM,CAAC0E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1E,MAAM,CAAC2E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE3L,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgH,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC4E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK5R,KAAK,CAACuC,gBAAD,oBAACA,gBAAgB,CAAEsP,GAAlB,CAAsBC,aAAvB,CADV,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE9S,KAAK,CAAC+S,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0CzP,gBAA1C,oBAA0CA,gBAAgB,CAAE0P,IAAlB,CAAuBC,QAAjE,CAXJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqChS,KAAK,CAACuC,gBAAD,oBAACA,gBAAgB,CAAE0P,IAAlB,CAAuBH,aAAxB,CAA1C,CAZJ,CADJ,EAeI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEvE,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAAC0E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1E,MAAM,CAAC2E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE3L,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgH,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC4E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCrP,gBADD,oBACCA,gBAAgB,CAAEsP,GAAlB,CAAsBM,gBADvB,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEnT,KAAK,CAAC+S,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0CzP,gBAA1C,oBAA0CA,gBAAgB,CAAE0P,IAAlB,CAAuBC,QAAjE,CAXJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCzP,gBAArC,oBAAqCA,gBAAgB,CAAE0P,IAAlB,CAAuBE,gBAA5D,CAZJ,CAhBJ,CADJ,EAgCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE5E,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,EAiCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE,IAAR;AAAcqC,MAAAA,eAAe,EAAEhR,MAAM,CAAC8E,aAAtC;AAAqD8J,MAAAA,aAAa,EAAE;AAApE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAAC0E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1E,MAAM,CAAC2E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE3L,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgH,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC4E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrP,gBADL,oBACKA,gBAAgB,CAAEsP,GAAlB,CAAsBO,aAD3B,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEpT,KAAK,CAAC+S,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0CzP,gBAA1C,oBAA0CA,gBAAgB,CAAE0P,IAAlB,CAAuBC,QAAjE,CAXJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCzP,gBAArC,oBAAqCA,gBAAgB,CAAE0P,IAAlB,CAAuBG,aAA5D,CAZJ,CADJ,EAeI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE7E,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAAC0E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1E,MAAM,CAAC2E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE3L,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgH,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC4E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK5R,KAAK,CAACuC,gBAAD,oBAACA,gBAAgB,CAAEsP,GAAlB,CAAsBQ,kBAAvB,CADV,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAErT,KAAK,CAAC+S,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkDzP,gBAAlD,oBAAkDA,gBAAgB,CAAE0P,IAAlB,CAAuBC,QAAzE,CAXJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqChS,KAAK,CAACuC,gBAAD,oBAACA,gBAAgB,CAAE0P,IAAlB,CAAuBI,kBAAxB,CAA1C,CAZJ,CAhBJ,CAjCJ,CArBJ,CAvCZ,EAgIQjM,cAAc,IACV,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE2G,MAAM,CAACqE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErE,MAAM,CAACsE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE9D,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACzG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,QAA/B,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEiH,MAAAA,IAAI,EAAE,CAAR;AAAW+D,MAAAA,UAAU,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEvE,MAAM,CAACkC,OADlB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMhJ,qBAAqB,CAAC,IAAD,CAA3B;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsH,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,aAAa,EAAE,KAA1B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,IAAI,EAAE,GAAR;AAAaG,MAAAA,KAAK,EAAE,MAApB;AAA4B5J,MAAAA,QAAQ,EAAE;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK0F,OADL,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE+D,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEvO,KAAK,CAACsF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAJJ,CADJ,CAJJ,CADJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyI,MAAM,CAACwE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExE,MAAM,CAACyE,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzE,MAAM,CAAC0E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1E,MAAM,CAAC2E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE3L,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgH,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC4E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC5R,KAAK,CAACuC,gBAAD,oBAACA,gBAAgB,CAAEsP,GAAlB,CAAsBC,aAAvB,CADN,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE9S,KAAK,CAAC+S,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqChS,KAAK,CAACuC,gBAAD,oBAACA,gBAAgB,CAAE0P,IAAlB,CAAuBH,aAAxB,CAA1C,CAZJ,CADJ,EAeI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEvE,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAAC0E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1E,MAAM,CAAC2E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE3L,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgH,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC4E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrP,gBADL,oBACKA,gBAAgB,CAAEsP,GAAlB,CAAsBM,gBAD3B,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEnT,KAAK,CAAC+S,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCzP,gBAArC,oBAAqCA,gBAAgB,CAAE0P,IAAlB,CAAuBE,gBAA5D,CAZJ,CAhBJ,CADJ,EAgCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE5E,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,EAiCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE,IAAR;AAAcqC,MAAAA,eAAe,EAAEhR,MAAM,CAAC8E,aAAtC;AAAqD8J,MAAAA,aAAa,EAAE;AAApE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAAC0E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1E,MAAM,CAAC2E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE3L,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgH,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC4E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCrP,gBADD,oBACCA,gBAAgB,CAAEsP,GAAlB,CAAsBO,aADvB,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEpT,KAAK,CAAC+S,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCzP,gBAArC,oBAAqCA,gBAAgB,CAAE0P,IAAlB,CAAuBG,aAA5D,CAZJ,CADJ,EAeI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE7E,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAAC0E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1E,MAAM,CAAC2E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE/D,MAAAA,WAAW,EAAE,EAAf;AAAmB2E,MAAAA,YAAY,EAAE,EAAjC;AAAqCzB,MAAAA,aAAa,EAAE;AAApD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9D,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC4E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC5R,KAAK,CAACuC,gBAAD,oBAACA,gBAAgB,CAAEsP,GAAlB,CAAsBQ,kBAAvB,CADN,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAErT,KAAK,CAAC+S,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAXJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjF,MAAM,CAACiF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqChS,KAAK,CAACuC,gBAAD,oBAACA,gBAAgB,CAAE0P,IAAlB,CAAuBI,kBAAxB,CAA1C,CAZJ,CAhBJ,CAjCJ,CArBJ,CAjIZ,CAxTJ,CAnIJ,CARJ,EAgqBQrQ,mBAAmB,IACf,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,CAAC+K,MAAM,CAACwF,aAAR,EAAuB;AAAExQ,MAAAA,MAAM,EAAED,YAAY,GAAG;AAAzB,KAAvB,CAAnB;AAA2E,IAAA,4BAA4B,EAAE,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,aAAa,EAAC,MADlB;AAEI,IAAA,WAAW,EAAE,IAFjB;AAGI,IAAA,OAAO,EAAEE,mBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEkM,MAAAA,GAAG,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACyF,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzF,MAAM,CAAC0F,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1F,MAAM,CAAC2F,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,EAII,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAAE9C,MAAAA,eAAe,EAAE;AAAnB,KADX;AAEI,IAAA,WAAW,EAAE,UAFjB;AAGI,IAAA,YAAY,EAAE,sBAAC7L,IAAD,EAAkB;AAC5B,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE2J,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC3O,MAAM,CAACgF,IAAI,CAAClD,QAAL,EAAD,CAAN,CAAwBoC,MAAxB,CAA+B,UAA/B,CAAjC,CADJ,CADJ;AAKH,KATL;AAUI,IAAA,QAAQ,EAAE,CAVd;AAWI,IAAA,UAAU,EAAE0B,UAXhB;AAYI,IAAA,cAAc,EAAEA,UAZpB;AAaI,IAAA,WAAW,EAAET,oBAbjB;AAcI,IAAA,KAAK,EAAE;AACHyO,MAAAA,UAAU,EAAE,OADT;AAEHC,MAAAA,qBAAqB,EAAE,MAFpB;AAGHC,MAAAA,kBAAkB,EAAE,aAHjB;AAIHC,MAAAA,YAAY,EAAE,MAJX;AAKHC,MAAAA,0BAA0B,EAAE,SALzB;AAMHC,MAAAA,oBAAoB,EAAE,MANnB;AAOHC,MAAAA,iBAAiB,EAAE,aAPhB;AAQHC,MAAAA,cAAc,EAAE,MARb;AASH,oCAA8B;AAC1BC,QAAAA,MAAM,EAAE;AACJvD,UAAAA,eAAe,EAAE,SADb;AAEJpC,UAAAA,aAAa,EAAE,KAFX;AAGJ4F,UAAAA,cAAc,EAAE,eAHZ;AAIJzF,UAAAA,WAAW,EAAE,EAJT;AAKJ2E,UAAAA,YAAY,EAAE,EALV;AAMJe,UAAAA,SAAS,EAAE,CANP;AAOJ/B,UAAAA,UAAU,EAAE;AAPR;AADkB,OAT3B;AAoBH,kCAA4B;AACxBtE,QAAAA,SAAS,EAAE;AACPjH,UAAAA,OAAO,EAAE;AADF;AADa;AApBzB,KAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EA6CI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEgH,MAAM,CAACuG,cAA9B;AACI,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAEnO,aADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE4H,MAAM,CAACwG,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,CAFJ,CA7CJ,EAyDI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE,CAACxG,MAAM,CAACuG,cAAR,EAAwB;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KAAxB,CADX;AAEI,IAAA,OAAO,EAAEtO,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE6H,MAAM,CAACwG,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CAzDJ,CADJ,CALJ,CADJ,CAjqBZ,EAmvBQvN,kBAAkB,IACd,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,CAAC+G,MAAM,CAACwF,aAAR,EAAuB;AAAExQ,MAAAA,MAAM,EAAED,YAAY,GAAG;AAAzB,KAAvB,CAAnB;AAA2E,IAAA,4BAA4B,EAAE,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,aAAa,EAAC,MADlB;AAEI,IAAA,WAAW,EAAE,IAFjB;AAGI,IAAA,OAAO,EAAEkE,kBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEkI,MAAAA,GAAG,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACyF,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzF,MAAM,CAAC0F,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1F,MAAM,CAAC2F,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEjF,MAAAA,UAAU,EAAE,CAAd;AAAiBE,MAAAA,WAAW,EAAE,EAA9B;AAAkC2E,MAAAA,YAAY,EAAE;AAAhD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvF,MAAM,CAAC+D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAAC0G,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAElG,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAAC2G,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE3G,MAAM,CAAC4G,SADlB;AAEI,IAAA,OAAO,EAAExK,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4D,MAAM,CAAC6G,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACQ5O,KADR,CAPJ,EAUI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAEoE,aADb;AAEI,IAAA,KAAK,EAAE2D,MAAM,CAAC4G,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,YAAf;AAA4B,IAAA,IAAI,EAAE,EAAlC;AAAsC,IAAA,KAAK,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAVJ,CAFJ,EAmBI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHpG,MAAAA,IAAI,EAAE,CADH;AAEH+D,MAAAA,UAAU,EAAE,QAFT;AAGH8B,MAAAA,cAAc,EAAE;AAHb,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EA2BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErG,MAAM,CAAC2G,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE3G,MAAM,CAAC4G,SADlB;AAEI,IAAA,OAAO,EAAEtK,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0D,MAAM,CAAC6G,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACQ9O,IADR,CAPJ,EAUI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEiI,MAAM,CAAC4G,SADlB;AAEI,IAAA,OAAO,EAAErK,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,YAAf;AAA4B,IAAA,IAAI,EAAE,EAAlC;AAAsC,IAAA,KAAK,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAVJ,CA3BJ,EA4CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEiE,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CJ,CAPJ,EAqDI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAER,MAAM,CAACuG,cAA9B;AACI,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE5J,iBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEqD,MAAM,CAACwG,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,CAFJ,CArDJ,EAiEI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE,CAACxG,MAAM,CAACuG,cAAR,EAAwB;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KAAxB,CADX;AAEI,IAAA,OAAO,EAAE3J,iBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEkD,MAAM,CAACwG,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CAjEJ,CADJ,CALJ,CADJ,CApvBZ,EA+0BK9Q,QAAQ,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/0BjB,CADJ;AAm1BH;AAED,IAAMsK,MAAM,GAAG8G,UAAU,CAACC,MAAX,CAAkB;AAC7B9G,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPqC,IAAAA,eAAe,EAAEhR,MAAM,CAAC8E;AAFjB,GADkB;AAK7BqQ,EAAAA,KAAK,EAAE;AACHjQ,IAAAA,QAAQ,EAAE,EADP;AAEHgK,IAAAA,UAAU,EAAE,KAFT;AAGHJ,IAAAA,KAAK,EAAE9O,MAAM,CAACmR;AAHX,GALsB;AAU7BiB,EAAAA,UAAU,EAAE;AACRrD,IAAAA,WAAW,EAAE,EADL;AAERiC,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAFhB;AAGRmE,IAAAA,YAAY,EAAE,CAHN;AAIR9S,IAAAA,KAAK,EAAC;AAJE,GAViB;AAgB7B+P,EAAAA,WAAW,EAAE;AACTlP,IAAAA,MAAM,EAAE,EADC;AAETiS,IAAAA,YAAY,EAAE,CAFL;AAGTZ,IAAAA,cAAc,EAAE,QAHP;AAITxD,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAJf;AAKTnC,IAAAA,KAAK,EAAE,MALE;AAMTuG,IAAAA,WAAW,EAAE,MANJ;AAOTC,IAAAA,YAAY,EAAE;AACVhT,MAAAA,KAAK,EAAE,CADG;AAEVa,MAAAA,MAAM,EAAE;AAFE;AAPL,GAhBgB;AA4B7B0N,EAAAA,IAAI,EAAE;AACF/B,IAAAA,KAAK,EAAE9O,MAAM,CAACmR,KADZ;AAEFjM,IAAAA,QAAQ,EAAE,EAFR;AAGFgK,IAAAA,UAAU,EAAE;AAHV,GA5BuB;AAiC7B4B,EAAAA,QAAQ,EAAE;AACN0D,IAAAA,cAAc,EAAE,QADV;AAENlC,IAAAA,QAAQ,EAAE,UAFJ;AAGN7C,IAAAA,KAAK,EAAE,EAHD;AAINF,IAAAA,MAAM,EAAE,EAJF;AAKNf,IAAAA,MAAM,EAAE;AALF,GAjCmB;AAwC7B+G,EAAAA,YAAY,EAAE;AACVf,IAAAA,cAAc,EAAE,QADN;AAEV9B,IAAAA,UAAU,EAAE,QAFF;AAGV3D,IAAAA,WAAW,EAAE,EAHH;AAIV2E,IAAAA,YAAY,EAAE;AAJJ,GAxCe;AA8C7B8B,EAAAA,gBAAgB,EAAE;AACdhB,IAAAA,cAAc,EAAE,UADF;AAEd9B,IAAAA,UAAU,EAAE,UAFE;AAGdgB,IAAAA,YAAY,EAAE;AAHA,GA9CW;AAmD7B+B,EAAAA,0BAA0B,EAAE;AACxBjB,IAAAA,cAAc,EAAE,UADQ;AAExB9B,IAAAA,UAAU,EAAE,YAFY;AAGxB3D,IAAAA,WAAW,EAAE,EAHW;AAIxB2E,IAAAA,YAAY,EAAE;AAJU,GAnDC;AAyD7BgC,EAAAA,SAAS,EAAE;AACP1E,IAAAA,eAAe,EAAEhR,MAAM,CAACmR,KADjB;AAEP7O,IAAAA,KAAK,EAAE,GAFA;AAGPa,IAAAA,MAAM,EAAE,GAHD;AAIPgE,IAAAA,OAAO,EAAE,EAJF;AAKPiO,IAAAA,YAAY,EAAE,CALP;AAMPnD,IAAAA,aAAa,EAAE,EANR;AAOPuC,IAAAA,cAAc,EAAE,YAPT;AAQPa,IAAAA,WAAW,EAAE,MARN;AASPC,IAAAA,YAAY,EAAE;AACVhT,MAAAA,KAAK,EAAE,CADG;AAEVa,MAAAA,MAAM,EAAE;AAFE,KATP;AAaPwS,IAAAA,aAAa,EAAE,IAbR;AAcPC,IAAAA,YAAY,EAAE,CAdP;AAePC,IAAAA,SAAS,EAAE;AAfJ,GAzDkB;AA0E7BC,EAAAA,aAAa,EAAE;AACX9E,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SADb;AAEX3O,IAAAA,KAAK,EAAE,GAFI;AAGXa,IAAAA,MAAM,EAAE,GAHG;AAIX0L,IAAAA,UAAU,EAAE,EAJD;AAKXuG,IAAAA,YAAY,EAAE,CALH;AAMXnD,IAAAA,aAAa,EAAE,EANJ;AAOXoD,IAAAA,WAAW,EAAE,MAPF;AAQXC,IAAAA,YAAY,EAAE;AACVhT,MAAAA,KAAK,EAAE,CADG;AAEVa,MAAAA,MAAM,EAAE;AAFE,KARH;AAYXwS,IAAAA,aAAa,EAAE,IAZJ;AAaXC,IAAAA,YAAY,EAAE,CAbH;AAcXC,IAAAA,SAAS,EAAE;AAdA,GA1Ec;AA0F7BtD,EAAAA,uBAAuB,EAAE;AACrBvB,IAAAA,eAAe,EAAEhR,MAAM,CAACmR,KADH;AAErBtC,IAAAA,UAAU,EAAE,EAFS;AAGrBE,IAAAA,WAAW,EAAE,EAHQ;AAIrB2E,IAAAA,YAAY,EAAE,EAJO;AAKrBvQ,IAAAA,MAAM,EAAE,GALa;AAMrBb,IAAAA,KAAK,EAAE,GANc;AAOrB8S,IAAAA,YAAY,EAAE,CAPO;AAQrBZ,IAAAA,cAAc,EAAE,YARK;AASrBa,IAAAA,WAAW,EAAE,MATQ;AAUrBC,IAAAA,YAAY,EAAE;AACVhT,MAAAA,KAAK,EAAE,CADG;AAEVa,MAAAA,MAAM,EAAE;AAFE,KAVO;AAcrBwS,IAAAA,aAAa,EAAE,IAdM;AAerBC,IAAAA,YAAY,EAAE,CAfO;AAgBrBC,IAAAA,SAAS,EAAE;AAhBU,GA1FI;AA4G7BxH,EAAAA,IAAI,EAAE;AACFlL,IAAAA,MAAM,EAAE,EADN;AAEF6N,IAAAA,eAAe,EAAEhR,MAAM,CAAC+V;AAFtB,GA5GuB;AAgH7BzH,EAAAA,eAAe,EAAE;AACb0C,IAAAA,eAAe,EAAEhR,MAAM,CAAC8E,aADX;AAEbqC,IAAAA,OAAO,EAAE;AAFI,GAhHY;AAoH7BoH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAGPC,IAAAA,aAAa,EAAE;AAHR,GApHkB;AAyH7BH,EAAAA,WAAW,EAAE;AACTE,IAAAA,IAAI,EAAE,CADG;AAETyG,IAAAA,YAAY,EAAE,CAFL;AAGT1C,IAAAA,UAAU,EAAE,QAHH;AAITvP,IAAAA,MAAM,EAAE,EAJC;AAKT6N,IAAAA,eAAe,EAAEhR,MAAM,CAACiR;AALf,GAzHgB;AAgI7BvC,EAAAA,gBAAgB,EAAE;AACdI,IAAAA,KAAK,EAAE9O,MAAM,CAACmR,KADA;AAEdjM,IAAAA,QAAQ,EAAE,EAFI;AAGdgK,IAAAA,UAAU,EAAE,KAHE;AAIdL,IAAAA,UAAU,EAAE;AAJE,GAhIW;AAsI7B3I,EAAAA,IAAI,EAAE;AACFyI,IAAAA,IAAI,EAAE,CADJ;AAEFyG,IAAAA,YAAY,EAAE,CAFZ;AAGF1C,IAAAA,UAAU,EAAE,QAHV;AAIFvP,IAAAA,MAAM,EAAE,EAJN;AAKF6S,IAAAA,UAAU,EAAE,EALV;AAMFhF,IAAAA,eAAe,EAAEhR,MAAM,CAACiR;AANtB,GAtIuB;AA8I7B7B,EAAAA,QAAQ,EAAE;AACNT,IAAAA,IAAI,EAAE,CADA;AAENzJ,IAAAA,QAAQ,EAAE;AAFJ,GA9ImB;AAkJ7BkL,EAAAA,QAAQ,EAAE;AACNzB,IAAAA,IAAI,EAAE,CADA;AAENzJ,IAAAA,QAAQ,EAAE,EAFJ;AAGN8L,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAHlB;AAINmE,IAAAA,YAAY,EAAE;AAJR,GAlJmB;AAwJ7BnF,EAAAA,SAAS,EAAE;AACPtB,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE;AAFR,GAxJkB;AA4J7BsB,EAAAA,WAAW,EAAE;AACTvB,IAAAA,IAAI,EAAE,CADG;AAETxL,IAAAA,MAAM,EAAE,EAFC;AAGT6N,IAAAA,eAAe,EAAEhR,MAAM,CAAC8E,aAHf;AAIT4O,IAAAA,YAAY,EAAE;AAJL,GA5JgB;AAkK7BvD,EAAAA,YAAY,EAAE;AACVP,IAAAA,SAAS,EAAE,QADD;AAEVV,IAAAA,UAAU,EAAE,KAFF;AAGVhK,IAAAA,QAAQ,EAAE,EAHA;AAIV+Q,IAAAA,UAAU,EAAE,EAJF;AAKVnH,IAAAA,KAAK,EAAE;AALG,GAlKe;AAyK7BuB,EAAAA,OAAO,EAAE;AACL1B,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,aAAa,EAAE,KAFV;AAGL8D,IAAAA,UAAU,EAAE;AAHP,GAzKoB;AA8K7BpC,EAAAA,UAAU,EAAE;AACR3B,IAAAA,IAAI,EAAE,CADE;AAERxL,IAAAA,MAAM,EAAE,EAFA;AAGR6N,IAAAA,eAAe,EAAEhR,MAAM,CAAC8E,aAHhB;AAIRiK,IAAAA,WAAW,EAAE;AAJL,GA9KiB;AAoL7BvC,EAAAA,OAAO,EAAE;AACLoD,IAAAA,SAAS,EAAE,QADN;AAELV,IAAAA,UAAU,EAAE,KAFP;AAGLhK,IAAAA,QAAQ,EAAE,EAHL;AAIL+Q,IAAAA,UAAU,EAAE,EAJP;AAKLnH,IAAAA,KAAK,EAAE;AALF,GApLoB;AA2L7BoH,EAAAA,QAAQ,EAAE;AACNvH,IAAAA,IAAI,EAAE,CADA;AAENI,IAAAA,WAAW,EAAE;AAFP,GA3LmB;AA+L7BoH,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL,GA/LmB;AAkM7BC,EAAAA,YAAY,EAAE;AACV1H,IAAAA,IAAI,EAAE,CADI;AAEVG,IAAAA,KAAK,EAAE9O,MAAM,CAACsW,KAFJ;AAGVpH,IAAAA,UAAU,EAAE,KAHF;AAIVhK,IAAAA,QAAQ,EAAE,EAJA;AAKV2J,IAAAA,UAAU,EAAE;AALF,GAlMe;AAyM7B0H,EAAAA,aAAa,EAAE;AACX/H,IAAAA,MAAM,EAAE,CADG;AAEXwC,IAAAA,eAAe,EAAE;AAFN,GAzMc;AA6M7BO,EAAAA,aAAa,EAAE;AACX5C,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,aAAa,EAAE,KAFJ;AAGXzL,IAAAA,MAAM,EAAE,EAHG;AAIXqR,IAAAA,cAAc,EAAE;AAJL,GA7Mc;AAmN7B9C,EAAAA,YAAY,EAAE;AACV5C,IAAAA,KAAK,EAAE,SADG;AAEVK,IAAAA,SAAS,EAAE,QAFD;AAGVS,IAAAA,SAAS,EAAE,QAHD;AAIVV,IAAAA,UAAU,EAAE,KAJF;AAKVhK,IAAAA,QAAQ,EAAE,EALA;AAMV+Q,IAAAA,UAAU,EAAE;AANF,GAnNe;AA2N7BrE,EAAAA,iBAAiB,EAAE;AACf9C,IAAAA,KAAK,EAAE,SADQ;AAEfc,IAAAA,SAAS,EAAE,QAFI;AAGfV,IAAAA,UAAU,EAAE,KAHG;AAIfhK,IAAAA,QAAQ,EAAE,EAJK;AAKf+Q,IAAAA,UAAU,EAAE;AALG,GA3NU;AAkO7B/D,EAAAA,QAAQ,EAAE;AACN/O,IAAAA,MAAM,EAAE,CADF;AAEN6N,IAAAA,eAAe,EAAEhR,MAAM,CAAC2E;AAFlB,GAlOmB;AAsO7BmN,EAAAA,kBAAkB,EAAE;AAChBhD,IAAAA,KAAK,EAAE,SADS;AAEhBK,IAAAA,SAAS,EAAE,QAFK;AAGhBS,IAAAA,SAAS,EAAE,QAHK;AAIhBV,IAAAA,UAAU,EAAE,KAJI;AAKhBhK,IAAAA,QAAQ,EAAE,EALM;AAMhB+Q,IAAAA,UAAU,EAAE;AANI,GAtOS;AA8O7BjE,EAAAA,eAAe,EAAE;AACblD,IAAAA,KAAK,EAAE,SADM;AAEbc,IAAAA,SAAS,EAAE,QAFE;AAGbV,IAAAA,UAAU,EAAE,KAHC;AAIbhK,IAAAA,QAAQ,EAAE,EAJG;AAKb+Q,IAAAA,UAAU,EAAE;AALC,GA9OY;AAqP7BtC,EAAAA,aAAa,EAAE;AACXhF,IAAAA,IAAI,EAAE,CADK;AAEXrM,IAAAA,KAAK,EAAE,MAFI;AAGXgQ,IAAAA,QAAQ,EAAE,UAHC;AAIXtB,IAAAA,eAAe,EAAE;AAJN,GArPc;AA2P7B4C,EAAAA,iBAAiB,EAAE;AACftR,IAAAA,KAAK,EAAE,KADQ;AAEf8T,IAAAA,SAAS,EAAE,QAFI;AAGfpF,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAHT;AAIfmE,IAAAA,YAAY,EAAE;AAJC,GA3PU;AAiQ7BvB,EAAAA,cAAc,EAAE;AACZvR,IAAAA,KAAK,EAAE,MADK;AACGkS,IAAAA,cAAc,EAAE,QADnB;AAC6BC,IAAAA,SAAS,EAAE;AADxC,GAjQa;AAoQ7BX,EAAAA,kBAAkB,EAAE;AAChBhF,IAAAA,KAAK,EAAE,MADS;AACDK,IAAAA,SAAS,EAAE,QADV;AACoBjK,IAAAA,QAAQ,EAAE;AAD9B,GApQS;AAuQ7B2P,EAAAA,aAAa,EAAE;AACXjG,IAAAA,aAAa,EAAE,KADJ;AACWzH,IAAAA,OAAO,EAAE,EADpB;AACwBhE,IAAAA,MAAM,EAAE;AADhC,GAvQc;AA0Q7B2R,EAAAA,YAAY,EAAE;AACVnG,IAAAA,IAAI,EAAE,CADI;AAEVqC,IAAAA,eAAe,EAAE,SAFP;AAGVoE,IAAAA,YAAY,EAAE,EAHJ;AAIV1C,IAAAA,UAAU,EAAE,QAJF;AAKV8B,IAAAA,cAAc,EAAE;AALN,GA1Qe;AAiR7BO,EAAAA,SAAS,EAAE;AACPzS,IAAAA,KAAK,EAAE,EADA;AAEPa,IAAAA,MAAM,EAAE,EAFD;AAGPuP,IAAAA,UAAU,EAAE,QAHL;AAIP8B,IAAAA,cAAc,EAAE;AAJT,GAjRkB;AAuR7BQ,EAAAA,QAAQ,EAAE;AACNlG,IAAAA,KAAK,EAAE,MADD;AAEN5J,IAAAA,QAAQ,EAAE;AAFJ,GAvRmB;AA2R7BsR,EAAAA,UAAU,EAAE;AACR7H,IAAAA,IAAI,EAAE,CADE;AAER+D,IAAAA,UAAU,EAAE,QAFJ;AAGR8B,IAAAA,cAAc,EAAE;AAHR,GA3RiB;AAgS7BiC,EAAAA,UAAU,EAAE;AACR9H,IAAAA,IAAI,EAAE,CADE;AAERqC,IAAAA,eAAe,EAAE,SAFT;AAGRoE,IAAAA,YAAY,EAAE,EAHN;AAIR1C,IAAAA,UAAU,EAAE,QAJJ;AAKR8B,IAAAA,cAAc,EAAE;AALR,GAhSiB;AAuS7BkC,EAAAA,gBAAgB,EAAE;AACdpU,IAAAA,KAAK,EAAE,KADO;AAEda,IAAAA,MAAM,EAAE,CAFM;AAGd6N,IAAAA,eAAe,EAAE;AAHH,GAvSW;AA4S7B0D,EAAAA,cAAc,EAAE;AACZpS,IAAAA,KAAK,EAAE,KADK;AAEZa,IAAAA,MAAM,EAAE,EAFI;AAGZqR,IAAAA,cAAc,EAAE,QAHJ;AAIZ4B,IAAAA,SAAS,EAAE,QAJC;AAKZhB,IAAAA,YAAY,EAAE;AALF,GA5Sa;AAmT7BT,EAAAA,YAAY,EAAE;AACV7F,IAAAA,KAAK,EAAE,MADG;AAEVK,IAAAA,SAAS,EAAE,QAFD;AAGVjK,IAAAA,QAAQ,EAAE;AAHA,GAnTe;AAwT7BqL,EAAAA,WAAW,EAAE;AACT5B,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE;AAHH,GAxTgB;AA6T7B8B,EAAAA,WAAW,EAAE;AACThC,IAAAA,IAAI,EAAE,CADG;AAETqC,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAFf;AAGTmE,IAAAA,YAAY,EAAE;AAHL,GA7TgB;AAkU7BxE,EAAAA,iBAAiB,EAAE;AACfzN,IAAAA,MAAM,EAAE,EADO;AAEfiS,IAAAA,YAAY,EAAE,CAFC;AAGfZ,IAAAA,cAAc,EAAE,QAHD;AAIfxD,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAJT;AAKfnC,IAAAA,KAAK,EAAE,MALQ;AAMfuG,IAAAA,WAAW,EAAE,MANE;AAOfC,IAAAA,YAAY,EAAE;AACVhT,MAAAA,KAAK,EAAE,CADG;AAEVa,MAAAA,MAAM,EAAE;AAFE,KAPC;AAWf4L,IAAAA,WAAW,EAAE;AAXE,GAlUU;AA+U7ByD,EAAAA,KAAK,EAAE;AACH7D,IAAAA,IAAI,EAAE,CADH;AAEHC,IAAAA,aAAa,EAAE;AAFZ,GA/UsB;AAmV7B6D,EAAAA,QAAQ,EAAE;AACN9D,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,aAAa,EAAE,KAFT;AAGNzL,IAAAA,MAAM,EAAE;AAHF,GAnVmB;AAwV7BuE,EAAAA,QAAQ,EAAE;AACNmH,IAAAA,UAAU,EAAE,EADN;AAENC,IAAAA,KAAK,EAAE9O,MAAM,CAACmR,KAFR;AAGNjM,IAAAA,QAAQ,EAAE,EAHJ;AAINgK,IAAAA,UAAU,EAAE;AAJN,GAxVmB;AA8V7ByD,EAAAA,WAAW,EAAE;AACThE,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTzL,IAAAA,MAAM,EAAE;AAHC,GA9VgB;AAmW7ByP,EAAAA,gBAAgB,EAAE;AACdjE,IAAAA,IAAI,EAAE,IADQ;AAEdC,IAAAA,aAAa,EAAE;AAFD,GAnWW;AAuW7BkE,EAAAA,iBAAiB,EAAE;AACfhE,IAAAA,KAAK,EAAE9O,MAAM,CAACmR,KADC;AAEfjM,IAAAA,QAAQ,EAAE,EAFK;AAGfgK,IAAAA,UAAU,EAAE,KAHG;AAIfC,IAAAA,SAAS,EAAE,QAJI;AAKfhI,IAAAA,OAAO,EAAE;AALM,GAvWU;AA8W7B6L,EAAAA,cAAc,EAAE;AACZlE,IAAAA,KAAK,EAAE9O,MAAM,CAACmR,KADF;AAEZjM,IAAAA,QAAQ,EAAE,EAFE;AAGZgK,IAAAA,UAAU,EAAE,KAHA;AAIZC,IAAAA,SAAS,EAAE,QAJC;AAKZqF,IAAAA,cAAc,EAAC,QALH;AAMZhD,IAAAA,WAAW,EAAE,CAND;AAOZmF,IAAAA,QAAQ,EAAC;AAPG,GA9Wa;AAuX7B5D,EAAAA,WAAW,EAAC;AACRnE,IAAAA,aAAa,EAAC,KADN;AACa8D,IAAAA,UAAU,EAAC,QADxB;AACkC0D,IAAAA,SAAS,EAAC;AAD5C,GAvXiB;AA0X7BhD,EAAAA,cAAc,EAAE;AACZtE,IAAAA,KAAK,EAAE9O,MAAM,CAAC2E,SADF;AAEZO,IAAAA,QAAQ,EAAE,EAFE;AAGZgK,IAAAA,UAAU,EAAE,KAHA;AAIZC,IAAAA,SAAS,EAAE,QAJC;AAKZN,IAAAA,UAAU,EAAE;AALA,GA1Xa;AAiY7BgE,EAAAA,cAAc,EAAE;AACZlE,IAAAA,IAAI,EAAE,IADM;AAEZqC,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAFZ;AAGZmE,IAAAA,YAAY,EAAE;AAHF,GAjYa;AAsY7BwB,EAAAA,eAAe,EAAE,EAtYY;AA0Y7B7F,EAAAA,UAAU,EAAE;AACRvC,IAAAA,MAAM,EAAE,CADA;AAER8D,IAAAA,QAAQ,EAAE,UAFF;AAGRtB,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAHhB;AAIRmE,IAAAA,YAAY,EAAE,CAJN;AAKRyB,IAAAA,WAAW,EAAE7W,MAAM,CAAC8E,aALZ;AAMRgS,IAAAA,iBAAiB,EAAE,CANX;AAORC,IAAAA,eAAe,EAAE,CAPT;AAQR5T,IAAAA,MAAM,EAAE,GARA;AASRmM,IAAAA,GAAG,EAAE;AATG,GA1YiB;AAqZ7BN,EAAAA,cAAc,EAAE;AACZR,IAAAA,MAAM,EAAE,CADI;AAEZ8D,IAAAA,QAAQ,EAAE,UAFE;AAGZtB,IAAAA,eAAe,EAAEhR,MAAM,CAACiR,SAHZ;AAIZmE,IAAAA,YAAY,EAAE,CAJF;AAKZyB,IAAAA,WAAW,EAAE7W,MAAM,CAAC8E,aALR;AAMZgS,IAAAA,iBAAiB,EAAE,CANP;AAOZC,IAAAA,eAAe,EAAE,CAPL;AAQZ5T,IAAAA,MAAM,EAAE,GARI;AASZmM,IAAAA,GAAG,EAAE;AATO,GArZa;AAga7B0H,EAAAA,UAAU,EAAE;AACR7T,IAAAA,MAAM,EAAE,EADA;AAERqR,IAAAA,cAAc,EAAE;AAFR,GAhaiB;AAoa7ByC,EAAAA,cAAc,EAAE;AACZnI,IAAAA,KAAK,EAAE9O,MAAM,CAACiP;AADF;AApaa,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    Modal,\r\n    // TouchableHighlight,\r\n    Dimensions,\r\n    // ScrollView,\r\n    TouchableWithoutFeedback, Platform\r\n} from 'react-native'\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { colors } from '../../utils/Colors';\r\nimport { useState } from \"react\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport moment from \"moment\";\r\nimport { Icons } from \"../../assets\";\r\nimport {\r\n    VictoryChart,\r\n    VictoryAxis,\r\n    VictoryLine,\r\n    VictoryScatter,\r\n    VictoryLabel,\r\n    VictoryBar,\r\n    VictoryTooltip,\r\n    VictoryVoronoiContainer,\r\n    VictoryGroup\r\n} from \"victory-native\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Calendar } from \"react-native-calendars\";\r\nimport RadioForm from 'react-native-simple-radio-button';\r\nimport PickerModel from '../../components/picker/PickerModel';\r\nimport SelectMultiple from 'react-native-select-multiple'\r\nimport { Imodel } from '../../models/Imodel';\r\nimport { OwnerHighLevelService } from '../../netWorking/ownerHighLevel';\r\nimport { Money } from '../../components/generalConvert/conVertmunberToMoney';\r\nimport { RevenueMonthlyModel } from '../../models/RevenueMonthly';\r\nimport DialogAwait from '../../components/dialogs/dialogAwait';\r\nimport Loading from '../../components/dialogs/Loading';\r\nimport { ScrollView, TouchableHighlight } from 'react-native-gesture-handler';\r\n\r\nexport default function TabOwnerHighLVScreen() {\r\n    const loadListYear = async () => {\r\n        let currentYear = new Date().getFullYear();\r\n        let data = []\r\n        for (let i = 0; i <= 10; i++) {\r\n            data.push({ label: (currentYear - i).toString(), value: i })\r\n        }\r\n        setDataModelYear(data);\r\n    }\r\n    const [dataModelYear, setDataModelYear] = useState<Imodel[]>([]);\r\n\r\n    const dataModelBox = [\r\n        { label: 'Daily Revenue', value: 0 },\r\n        { label: 'Monthly Revenue', value: 1 },\r\n    ]\r\n\r\n    const width = Dimensions.get(\"window\").width;\r\n    const [pickerValueCheckBox, setPickerValueCheckBox] = useState(\"Select Daily Or Monthly\");\r\n    const [modalVisibleYear, setModalVisibleYear] = useState(false);\r\n    const [modalVisibleSelect, setModalVisibleSelect] = useState(false);\r\n    const [pickerValueYear, setPickerValueYear] = useState(new Date().getFullYear().toString());\r\n    const dimensions = Dimensions.get('window');\r\n    const windowHeight = dimensions.height;\r\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n    const toDate = new Date();\r\n    const [modalCheckBox, setModalCheckBox] = useState(false);\r\n    const [dataRevenuePoint, setDataRevenuePoint] = useState<any[]>([]);\r\n    const [dataRevenueDaily, setDataRevenueDaily] = useState<RevenueMonthlyModel>(null);\r\n    const [isSubmit, setIssubmit] = useState(false);\r\n    const [fromDateTime, setFromDateTime] = useState(null);\r\n\r\n    const [endDateTime, setEndDateTime] = useState(null);\r\n\r\n    const [DateTimeDaily, setFromDateTimeDaily] = useState(\r\n        moment(new Date().setDate(toDate.getDate())).format(\"YYYY-MM-DD\")\r\n    );\r\n    const whiteStyle = {\r\n        grid: { stroke: colors.colorLine, strokeWidth: 0.5 },\r\n        axis: { stroke: colors.backgroundApp },\r\n        tickLabels: { fill: colors.colorChartLine, fontSize: 10 },\r\n    };\r\n\r\n    const [date, setDate] = useState(moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD\"));\r\n    const [typeDateTime, setTypeDateTime] = useState('');\r\n\r\n    const [dataMarkedDatesState, setDataMarkedDatesState] = useState({});\r\n    const showDatePicker = (type: string) => {\r\n        let dateTime = ''\r\n        if (type === 'from') {\r\n            fromDateTime!==null? dateTime = fromDateTime : dateTime= moment(new Date()).format(\"YYYY-MM-DD\")\r\n        } else if (type === 'end') {\r\n            endDateTime!==null? dateTime = endDateTime : dateTime= moment(new Date()).format(\"YYYY-MM-DD\")\r\n        } else if (type === 'daily') {\r\n            dateTime = DateTimeDaily\r\n        }\r\n        let dataMarked: any = {};\r\n        let datePresent = dateTime.slice(0, 10)\r\n\r\n        dataMarked[datePresent] = {\r\n            selected: true,\r\n        };\r\n        setDate(datePresent);\r\n        setTypeDateTime(type);\r\n        setDataMarkedDatesState(dataMarked);\r\n        setDatePickerVisibility(true);\r\n    };\r\n\r\n    const onDayPress = (day: any) => {\r\n        // Tạo date từ ngày nhấn vào\r\n        const date = new Date(\r\n            new Date().setFullYear(day.year, Number(day.month - 1), day.day)\r\n        );\r\n        setDate(moment(date).format(\"YYYY-MM-DD\"));\r\n        let dataMarked: any = {};\r\n        dataMarked[day.dateString] = {\r\n            selected: true,\r\n        };\r\n        setDataMarkedDatesState(dataMarked);\r\n    };\r\n\r\n\r\n    const hideDatePicker = () => {\r\n        return setDatePickerVisibility(false);\r\n    };\r\n\r\n    const handleConfirm = async () => {\r\n        const pickDate = new Date(date)\r\n        pickDate.setSeconds(0)\r\n        const dateNow = new Date();\r\n        const ParamDateTime = moment(pickDate).format(\"YYYY-MM-DD\");\r\n        if (typeDateTime === 'end') {\r\n            setEndDateTime(ParamDateTime);\r\n            if(fromDateTime!==null){\r\n                loadCharDateTime(fromDateTime, ParamDateTime);\r\n            }\r\n        } else if (typeDateTime === 'from') {\r\n            setFromDateTime(ParamDateTime);\r\n            if(endDateTime!==null){\r\n                loadCharDateTime(ParamDateTime, endDateTime);\r\n            }\r\n        } else if (typeDateTime === 'daily' && pickDate < dateNow) {\r\n            setFromDateTimeDaily(ParamDateTime);\r\n            loadRevenueOfDaily(ParamDateTime);\r\n        }\r\n        hideDatePicker();\r\n    };\r\n    const whiteStyleBottom = {\r\n        axis: { stroke: colors.colorLine },\r\n        ticks: { stroke: colors.gray, size: 8, margin: 5 },\r\n        tickLabels: { fontSize: 10, padding: 5, fill: \"#A4A4A4\" },\r\n    };\r\n\r\n    const [modalCheckBoxMonth, setModalCheckBoxMonth] = useState(false);\r\n\r\n\r\n    const [checkDailyDay, setCheckDailyDay] = useState(false);\r\n    const [checkDailyMoth, setCheckDailyMoth] = useState(false);\r\n    const [textDate, setTextDate] = useState('');\r\n    const [radioValue, setradioValue] = useState('');\r\n\r\n    const onchangeRadio = (event: any) => {\r\n        setModalCheckBox(false);\r\n        if (event == 0) {\r\n            showDatePicker('daily');\r\n            setDatePickerVisibility(true);\r\n            setCheckDailyDay(true);\r\n            setCheckDailyMoth(false);\r\n            setPickerValueCheckBox(\"Daily Revenue\");\r\n            setTextDate('Date');\r\n        } else {\r\n            setCheckDailyMoth(true);\r\n            setCheckDailyDay(false);\r\n            setModalCheckBoxMonth(true);\r\n            setDatePickerVisibility(false);\r\n            setPickerValueCheckBox(\"Monthly Revenue\");\r\n            setTextDate('Month');\r\n        }\r\n        setradioValue(event);\r\n    };\r\n\r\n\r\n    //onchang chart\r\n    const [isAll, setAll] = useState(true);\r\n    const [isNetSales, setNetSales] = useState(true);\r\n    const [isGrossSales, setGrossSales] = useState(true);\r\n    const [isTransaction, setTransaction] = useState(true);\r\n    const [isCustomer, setCustomer] = useState(true);\r\n\r\n    const [pickerValueSelect, setPickerValueSelect] = useState(\"Select...\");\r\n\r\n    const [valueHeightChart, setValueHeightChart] = useState([50, 100, 150, 200, 250, 300])\r\n    const dataModelSelect = [\r\n        { label: 'All', value: 0 },\r\n        { label: 'Net Sales', value: 1 },\r\n        { label: 'Gross Sales', value: 2 },\r\n        { label: 'Transaction', value: 3 },\r\n        { label: 'Customer', value: 4 },\r\n    ]\r\n\r\n    const dataModel: Imodel[] = []\r\n    const [dataChart, setDataChart] = useState(dataModelSelect);\r\n    const [selectedChart, setselectedChartValue] = useState(dataModel);\r\n    const onSelectionsChange = (data: Imodel[], item: Imodel) => {\r\n        let selectedAll = data.find(x => x.value == 0);\r\n        if (selectedAll && item.value == 0) {\r\n            setselectedChartValue(dataChart);\r\n            setAll(true);\r\n            setNetSales(true);\r\n            setGrossSales(true);\r\n            setTransaction(true);\r\n            setCustomer(true);\r\n            setPickerValueSelect('All')\r\n        }\r\n        else {\r\n            setAll(true);\r\n            setNetSales(true);\r\n            setGrossSales(true);\r\n            setTransaction(true);\r\n            setCustomer(true);\r\n            setselectedChartValue(dataModel);\r\n            setPickerValueSelect('Select...')\r\n        }\r\n        if (item.value != 0) {\r\n            if (!selectedAll && data.length == dataChart.length - 1) {\r\n                setselectedChartValue(dataChart);\r\n                setPickerValueSelect('All')\r\n            }\r\n            else {\r\n\r\n                let indexAll = selectedChart.findIndex(x => x.value == 0);\r\n                if (indexAll >= 0) {\r\n                    data.splice(indexAll, 1);\r\n                }\r\n                setselectedChartValue(data);\r\n                const checkNetSales = data.find(x => x.value == 1);\r\n                const checkGrossSales = data.find(x => x.value == 2);\r\n                const checkTransaction = data.find(x => x.value == 3);\r\n                const checkCustomer = data.find(x => x.value == 4);\r\n                setNetSales(false);\r\n                setGrossSales(false);\r\n                setTransaction(false);\r\n                setCustomer(false);\r\n\r\n                let labelSeleted = \"\";\r\n                data.map((map, index) => {\r\n                    if (map.value != 0)\r\n                        labelSeleted += index != (data.length - 1) ? `${map.label},` : `${map.label}`;\r\n                })\r\n                setPickerValueSelect(labelSeleted);\r\n\r\n                //checkNetSales\r\n                if (checkNetSales) {\r\n                    setNetSales(true);\r\n                } else {\r\n                    setNetSales(false);\r\n                }\r\n                //checkGrossSales\r\n                if (checkGrossSales) {\r\n                    setGrossSales(true);\r\n                } else {\r\n                    setGrossSales(false);\r\n                }\r\n                //checkTransaction\r\n                if (checkTransaction) {\r\n                    setTransaction(true);\r\n                } else {\r\n                    setTransaction(false);\r\n                }\r\n                //checkCustomer\r\n                if (checkCustomer) {\r\n                    setCustomer(true);\r\n                } else {\r\n                    setCustomer(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //end onchange chart\r\n\r\n    //change picker month year\r\n    const [month, setMonth] = useState(+moment(new Date().setDate(toDate.getDate())).format(\"MM\"));\r\n\r\n    const [year, setYear] = useState(+moment(new Date().setDate(toDate.getDate())).format(\"YYYY\"));\r\n\r\n    let yearNow = +moment(new Date().setDate(toDate.getDate())).format(\"YYYY\");\r\n\r\n    const increaseMonth = () => {\r\n        if (month < 12) {\r\n            setMonth(month + 1);\r\n        } else setMonth(1);\r\n    };\r\n\r\n    const decreaseMonth = () => {\r\n        if (month > 1) {\r\n            setMonth(month - 1);\r\n        } else setMonth(12);\r\n    };\r\n\r\n    const increaseYear = () => {\r\n        if (year < yearNow) {\r\n            setYear(year + 1);\r\n        } else setYear(2018);\r\n    };\r\n\r\n    const decreaseYear = () => {\r\n        if (year > 2019) {\r\n            setYear(year - 1);\r\n        } else setYear(yearNow);\r\n    };\r\n\r\n    const nonthYearNow = month + '/' + year;\r\n    const [monthly, setmonthly] = useState(nonthYearNow);\r\n    //done picker month year\r\n    const handleConfirmYear = () => {\r\n        const monthYear = month + '/' + year;\r\n        setmonthly(monthYear);\r\n        loadRevenueOfMonthly(month, year);\r\n        hideMonthlyPicker();\r\n    };\r\n\r\n    //onchang hide Picker Monthly Year\r\n    const hideMonthlyPicker = () => {\r\n        return setModalCheckBoxMonth(false);\r\n    };\r\n\r\n    let getYear = toDate.getFullYear();\r\n    const [yearNowChar, setYearNowChart] = useState(getYear.toString());\r\n\r\n    const dateMonthArray: string[] = [];\r\n    const [pointNet, setPointNet] = useState([]);\r\n    const [pointGross, setPointGross] = useState([]);\r\n    const [pointTransaction, setPointTransaction] = useState([]);\r\n    const [pointCustomer, setPointCustomer] = useState([]);\r\n    const [dateMonth, setDateMonth] = useState(dateMonthArray);\r\n    const [checkLoadDatetimeDefault, setLoadDatetimeDefault] = useState(true);\r\n    const [widthChart, setWidthChart] = useState(400);\r\n\r\n    const getDaysArray = (fromDateTime: any, endDateTime: any) => {\r\n        for (var arr = [], dt = new Date(fromDateTime); dt <= endDateTime; dt.setDate(dt.getDate() + 1)) {\r\n            arr.push(moment(new Date(dt)).format(\"DD-MM\"));\r\n        }\r\n        return arr;\r\n    };\r\n    const loadCharDateTime = (startDate: any, endDate: any) => {\r\n        var daylist = getDaysArray(new Date(startDate), new Date(endDate));\r\n        daylist.map((v) => v.slice(0, 10)).join(\"\");\r\n\r\n        setDateMonth(daylist);\r\n        if (daylist.length > 0) {\r\n            setWidthChart((daylist.length * 60 + 170))\r\n        }\r\n        loadRevenueOfDate(startDate, endDate);\r\n    };\r\n\r\n    const loadRevenueOfYear = async () => {\r\n        let model = {\r\n            \"year\": Number(pickerValueYear)\r\n        }\r\n        setIssubmit(true);\r\n        let data = await OwnerHighLevelService.ReportRevenueYear(model);\r\n        setIssubmit(false);\r\n        setDataRevenuePoint(data);\r\n    }\r\n\r\n    const ratio = 200000\r\n    const loadRevenueOfDate = async (startDate: any, endDate: any) => {\r\n        // ------Ratio tỉ lệ cột Customer, Transaction trên biểu đồ---------\r\n        let model = {\r\n            \"DateFrom\": startDate,\r\n            \"DateTo\": endDate,\r\n            \"Ratio\": ratio\r\n        }\r\n        setIssubmit(true);\r\n        let data = await OwnerHighLevelService.ReportRevenueDate(model);\r\n        let maxNet =Math.max(...data.lineNet.map(e => e.revenue)).toFixed()\r\n        let maxGross =Math.max(...data.lineGross.map(e => e.revenue)).toFixed()\r\n        let maxCustomer =Math.max(...data.customerBar.map(e => e.revenue)).toFixed()\r\n        let maxTransaction =Math.max(...data.transactionBar.map(e => e.revenue)).toFixed()\r\n        let max = Math.max(...[+maxNet/200000,+maxGross/200000,+maxCustomer,+maxTransaction].map(e => e))\r\n        if(max > 300){\r\n            let _max =Number(max.toFixed())\r\n            let heights = [+(_max/6).toFixed(),+(_max/3).toFixed(),+(_max/2).toFixed(), +(_max/1.5).toFixed(),+(_max/1.2).toFixed(), _max ]\r\n            setValueHeightChart(heights);\r\n        }        \r\n        setPointNet(data.lineNet);\r\n        setPointGross(data.lineGross);\r\n        setPointCustomer(data.customerBar);\r\n        setPointTransaction(data.transactionBar);\r\n        setIssubmit(false);\r\n    }\r\n\r\n    const loadRevenueOfDaily = async (date: any) => {\r\n        setDataRevenueDaily(null);\r\n        let model = {\r\n            \"DateFrom\": date,\r\n            \"DateTo\": date\r\n        }\r\n        setIssubmit(true);\r\n        let data = await OwnerHighLevelService.ReportRevenueDaily(model);\r\n        setIssubmit(false);\r\n        setDataRevenueDaily(data);\r\n    }\r\n\r\n    const loadRevenueOfMonthly = async (month: any, year: any) => {\r\n        setDataRevenueDaily(null);\r\n        let model = {\r\n            \"Month\": month,\r\n            \"Year\": year\r\n        }\r\n        setIssubmit(true);\r\n        let data = await OwnerHighLevelService.ReportRevenueMonthly(model);\r\n        setIssubmit(false);\r\n        setDataRevenueDaily(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadListYear();\r\n        loadRevenueOfYear();\r\n        if (checkLoadDatetimeDefault) {\r\n            if (fromDateTime!==null &&endDateTime!==null){\r\n                loadCharDateTime(fromDateTime, endDateTime);\r\n            }\r\n        }\r\n    }, [pickerValueYear])\r\n    return (\r\n        <View style={styles.container}>\r\n            <PickerModel\r\n                defaultValue=\"Outlet\"\r\n                onSelectedValue={value => {\r\n\r\n                }}\r\n            ></PickerModel>\r\n            <View style={styles.line}></View>\r\n            <ScrollView>\r\n                <View style={styles.containerCenter}>\r\n                    <View style={[styles.salseYear, { zIndex: 10 }]}>\r\n                        <View style={styles.saleForYear}>\r\n                            <Text style={styles.tesxtAaleForYear}>Sales for year</Text>\r\n                        </View>\r\n\r\n                        <View style={styles.year}>\r\n                            <TouchableOpacity\r\n                                style={{ flex: 1, flexDirection: 'row', paddingTop: 10 }}\r\n                                onPress={() => {\r\n                                    setModalVisibleYear(!modalVisibleYear);\r\n                                }}\r\n                            >\r\n                                <View style={{ flex: 8 }}>\r\n                                    <Text style={{ color: \"#fff\", fontSize: 14, paddingLeft: 5 }}>\r\n                                        {pickerValueYear}\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={{ flex: 2 }}>\r\n                                    <SvgUri source={Icons.dateTime} />\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            {modalVisibleYear && (\r\n                            <View style={[styles.listPickerYear, { width: '100%', }]}>\r\n                                <ScrollView nestedScrollEnabled>\r\n                                    {dataModelYear.map((data, index) => (\r\n                                        <View key={index}>\r\n                                            <TouchableHighlight\r\n                                                style={{ padding: 10, }}\r\n                                                underlayColor={'rgba(0, 0, 0, 0.2)'}\r\n                                                onPress={() => {\r\n                                                    setModalVisibleYear(false)\r\n                                                    setPickerValueYear(data.label);\r\n                                                    setYearNowChart(data.label);\r\n                                                }}\r\n                                            >\r\n                                                <Text style={{ color: colors.colorText, fontWeight: '500', fontSize: 16, textAlign: 'center' }}>{data.label}</Text>\r\n                                            </TouchableHighlight>\r\n                                        </View>\r\n                                    ))}\r\n                                </ScrollView>\r\n                            </View>\r\n                        )}\r\n                        </View>\r\n                        \r\n                        <View style={{ flex: 3 }}>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.charYear}>\r\n                        <ScrollView horizontal={true} endFillColor={'#fff'}>\r\n                            <View>\r\n                                <VictoryChart\r\n                                    width={900}\r\n                                    domainPadding={{ x: 55, y: 45 }}\r\n                                    padding={{ top: 5, bottom: 50, left: 67, right: 25 }}\r\n                                    containerComponent={\r\n                                        <VictoryVoronoiContainer />\r\n                                    }\r\n                                    style={{ parent: { cursor: \"pointer\" } }}\r\n                                >\r\n                                    <VictoryLabel\r\n                                        y={250}\r\n                                        x={50}\r\n                                        style={{\r\n                                            fontSize: 10,\r\n                                            fontStyle: \"normal\",\r\n                                            fill: colors.colorText,\r\n                                        }}\r\n                                        text={\"0\"}\r\n                                    />\r\n                                    <VictoryAxis\r\n                                        tickValues={[125000000, 250000000, 375000000, 500000000, 625000000, 750000000]}\r\n                                        tickFormat={(t) => `${Money(t)}`}\r\n                                        dependentAxis\r\n                                        orientation=\"left\"\r\n                                        style={whiteStyle}\r\n                                    />\r\n                                    <VictoryAxis\r\n                                        tickValues={[`${yearNowChar}-01`, `${yearNowChar}-02`, `${yearNowChar}-03`, `${yearNowChar}-04`,\r\n                                        `${yearNowChar}-05`, `${yearNowChar}-06`, `${yearNowChar}-07`, `${yearNowChar}-08`,\r\n                                        `${yearNowChar}-09`, `${yearNowChar}-10`, `${yearNowChar}-11`, `${yearNowChar}-12`]}\r\n                                        style={whiteStyleBottom}\r\n                                        orientation=\"bottom\"\r\n                                    />\r\n                                    <VictoryGroup\r\n                                        data={dataRevenuePoint}\r\n                                        color=\"#5F8BFC\"\r\n                                    >\r\n                                        <VictoryLine\r\n                                            interpolation=\"natural\"\r\n                                            labels={({ datum }) => [\r\n                                                pickerValueYear + '-' + datum.month,\r\n                                                \"This year: \" + Money(datum.revenue ? Math.round(datum.revenue).toString() : Math.round(datum.y).toString()) ?? '0',\r\n                                                \"Last year: \" + Money(datum.lastYearRevenue ? Math.round(datum.lastYearRevenue).toString() : '0')\r\n                                            ]}\r\n                                            labelComponent={\r\n                                                <VictoryTooltip\r\n                                                    activateData={true}\r\n                                                    renderInPortal={false}\r\n                                                    centerOffset={{ y: -20 }}\r\n                                                    style={\r\n                                                        {\r\n                                                            fontSize: 13,\r\n                                                            margin: 5,\r\n                                                            fill: \"#5F8BFC\",\r\n                                                        }\r\n                                                    }\r\n                                                    flyoutStyle={{\r\n                                                        stroke: \"#C4C4C4\",\r\n                                                        fill: \"#414141\"\r\n                                                    }}\r\n                                                    cornerRadius={2}\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                        <VictoryScatter\r\n                                            size={3}\r\n                                            style={{\r\n                                                data: {\r\n                                                    fill: \"#DAB451\",\r\n                                                },\r\n                                            }}\r\n                                        />\r\n                                    </VictoryGroup>\r\n                                </VictoryChart>\r\n                            </View>\r\n                        </ScrollView>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.line}></View>\r\n                <View style={styles.containerCenter}>\r\n                    <View style={styles.rowHeader}>\r\n                        <View style={styles.rowFromDate}>\r\n                            <Text style={styles.textFromDate}>From Date</Text>\r\n                            <View style={styles.fromDate}>\r\n                                <TouchableOpacity\r\n                                    style={styles.cssText}\r\n                                    onPress={() => showDatePicker('from')}\r\n                                >\r\n                                    <View style={{ flex: 8, paddingLeft: 5 }}>\r\n                                        <Text style={{ color: \"#fff\", fontSize: 14 }}>\r\n                                            {fromDateTime===null?'Select date..':moment(fromDateTime).format(\"DD/MM/YYYY\")}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={{ flex: 2 }}>\r\n                                        <SvgUri source={Icons.dateTime} />\r\n                                    </View>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.rowEndDate}>\r\n                            <Text style={styles.endDate}>End Date</Text>\r\n                            <View style={styles.fromDate}>\r\n                                <TouchableOpacity\r\n                                    style={styles.cssText}\r\n                                    onPress={() => showDatePicker('end')}\r\n                                >\r\n                                    <View style={{ flex: 8, paddingLeft: 5 }}>\r\n                                        <Text style={{ color: \"#fff\", fontSize: 14 }}>\r\n                                            {endDateTime===null?'Select date..':moment(endDateTime).format(\"DD/MM/YYYY\")}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={{ flex: 2 }}>\r\n                                        <SvgUri source={Icons.dateTime} />\r\n                                    </View>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n\r\n                    <View style={[styles.salectChart, { zIndex: Platform.OS === 'ios' ? 10 : undefined }]}>\r\n                        <View style={styles.chartPicker}>\r\n                            <TouchableOpacity\r\n                                onPress={\r\n                                    () => {\r\n                                        setModalVisibleSelect(!modalVisibleSelect);\r\n                                    }\r\n                                }\r\n                            >\r\n                                <View style={styles.selectpickerModal}>\r\n                                    <Text style={styles.text}>{pickerValueSelect}</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <Ionicons style={styles.iconDown} name=\"caret-down\" size={20} color=\"#fff\"\r\n                                onPress={() => {\r\n                                    setModalVisibleSelect(!modalVisibleSelect);\r\n                                }} />\r\n                        </View>\r\n                        {modalVisibleSelect && (\r\n                            <View style={[styles.listPicker, { width: width - 30 }]}>\r\n                                <View style={{ height: 275 }}>\r\n                                    <SelectMultiple\r\n                                        rowStyle={{ backgroundColor: colors.grayLight, borderBottomWidth: 0 }}\r\n                                        labelStyle={{ color: colors.white }}\r\n                                        checkboxStyle={{ tintColor: colors.white }}\r\n                                        selectedCheckboxSource={Icons.iconChecked}\r\n                                        items={dataModelSelect}\r\n                                        style={{ zIndex: 100 }}\r\n                                        selectedItems={selectedChart}\r\n                                        onSelectionsChange={onSelectionsChange}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n\r\n                    <ScrollView horizontal={true} endFillColor={'#fff'}>\r\n                        <View style={{ flex: 1, paddingTop: 30, minWidth: 500 }}>\r\n                            <View>\r\n                                {isAll && (\r\n                                    <VictoryChart\r\n                                        domainPadding={{ x: 40, y: 45 }}\r\n                                        width={widthChart}\r\n                                        padding={{ top: 5, bottom: 50, left: 90, right: 80 }}\r\n                                        containerComponent={\r\n                                            <VictoryVoronoiContainer />\r\n                                        }\r\n                                        style={{ parent: { cursor: \"pointer\" } }}\r\n                                    >\r\n                                        <VictoryChart\r\n                                        >\r\n                                            <VictoryLabel\r\n                                                y={200}\r\n                                                x={5}\r\n                                                angle={-90}\r\n                                                style={{\r\n                                                    fontSize: 10,\r\n                                                    fontStyle: \"normal\",\r\n                                                    fill: colors.colorText,\r\n                                                }}\r\n                                                text={\"Net Sales - Gross Sales\"} />\r\n                                            <VictoryLabel\r\n                                                y={200}\r\n                                                x={widthChart - 25}\r\n                                                angle={-90}\r\n                                                style={{\r\n                                                    fontSize: 10,\r\n                                                    fontStyle: \"normal\",\r\n                                                    fill: colors.colorText,\r\n                                                }}\r\n                                                text={\"Transaction - Customer\"} />\r\n                                            <VictoryLabel\r\n                                                y={250}\r\n                                                x={70}\r\n                                                style={{\r\n                                                    fontSize: 10,\r\n                                                    fontStyle: \"normal\",\r\n                                                    fill: colors.colorText,\r\n                                                }}\r\n                                                text={\"0\"}\r\n                                            />\r\n                                            <VictoryAxis\r\n                                                tickValues={valueHeightChart}\r\n                                                tickFormat={(t) => `${Money(Math.round(t * ratio))}`}\r\n                                                dependentAxis\r\n                                                orientation=\"left\"\r\n                                                style={whiteStyle}\r\n                                            />\r\n                                            <VictoryAxis\r\n                                                tickValues={dateMonth}\r\n                                                style={whiteStyleBottom}\r\n                                                orientation=\"bottom\"\r\n                                            />\r\n\r\n                                            <VictoryAxis\r\n                                                tickValues={valueHeightChart}\r\n                                                tickFormat={(t) => `${Money(t)}`}\r\n                                                dependentAxis\r\n                                                orientation=\"right\"\r\n                                                style={whiteStyle}\r\n                                            />\r\n                                        </VictoryChart>\r\n\r\n                                        {isNetSales && (\r\n                                            <VictoryGroup\r\n                                                data={pointNet}\r\n                                                color=\"#F6606F\"\r\n                                            >\r\n                                                <VictoryLine\r\n                                                    interpolation=\"natural\"\r\n                                                    labels={({ datum }) => [\"N: \" + datum.date, `${Money(datum.revenue) ?? 0}` + \" VND\"]}\r\n                                                    labelComponent={\r\n                                                        <VictoryTooltip\r\n                                                            renderInPortal={false}\r\n                                                            centerOffset={{ x: 0, y: -80 }}\r\n                                                            style={\r\n                                                                {\r\n                                                                    fontSize: 10,\r\n                                                                    fill: \"#F6606F\",\r\n                                                                }\r\n                                                            }\r\n                                                            // flyoutWidth={120}\r\n                                                            // flyoutHeight={50}\r\n                                                            flyoutStyle={{\r\n                                                                stroke: \"#C4C4C4\",\r\n                                                                fill: \"#414141\"\r\n                                                            }}\r\n                                                            cornerRadius={2}\r\n                                                        />\r\n                                                    }\r\n                                                />\r\n                                                <VictoryScatter\r\n                                                    size={3}\r\n                                                    style={{\r\n                                                        data: {\r\n                                                            fill: \"#DAB451\"\r\n                                                        },\r\n                                                    }}\r\n                                                />\r\n                                            </VictoryGroup>\r\n                                        )}\r\n                                        <VictoryGroup\r\n                                            offset={15}\r\n                                            style={{ data: { width: 15 } }}\r\n                                            colorScale={[\"#5F8BFC\", \"#FDB441\"]}\r\n                                        >\r\n                                            {isTransaction &&\r\n                                                <VictoryBar\r\n                                                    labels={({ datum }) => [\"T: \" + datum.date, Money(datum.y.toString())]}\r\n                                                    labelComponent={\r\n                                                        <VictoryTooltip\r\n                                                            renderInPortal={false}\r\n                                                            centerOffset={{ x: isCustomer ? 70 : 0, y: -43 }}\r\n                                                            style={\r\n                                                                {\r\n                                                                    fontSize: 10,\r\n                                                                    fill: \"#5F8BFC\",\r\n                                                                }\r\n                                                            }\r\n                                                            // flyoutWidth={120}\r\n                                                            // flyoutHeight={50}\r\n                                                            flyoutStyle={{\r\n                                                                stroke: \"#C4C4C4\",\r\n                                                                fill: \"#414141\"\r\n                                                            }}\r\n                                                            cornerRadius={2}\r\n                                                        />\r\n                                                    }\r\n                                                    data={pointTransaction}\r\n                                                />\r\n                                            }\r\n                                            {isCustomer &&\r\n                                                <VictoryBar\r\n                                                    labels={({ datum }) => [\"C: \" + datum.date, Money(datum.y.toString())]}\r\n                                                    labelComponent={\r\n                                                        <VictoryTooltip\r\n                                                            renderInPortal={false}\r\n                                                            centerOffset={{ x: isTransaction ? - 60 : 0, y: -43 }}\r\n                                                            style={\r\n                                                                {\r\n                                                                    fontSize: 10,\r\n                                                                    fill: \"#FDB441\",\r\n                                                                }\r\n                                                            }\r\n                                                            // flyoutWidth={120}\r\n                                                            // flyoutHeight={50}\r\n                                                            flyoutStyle={{\r\n                                                                stroke: \"#C4C4C4\",\r\n                                                                fill: \"#414141\"\r\n                                                            }}\r\n                                                            cornerRadius={2}\r\n                                                        />\r\n                                                    }\r\n                                                    data={pointCustomer}\r\n                                                />}\r\n                                        </VictoryGroup>\r\n                                        {isGrossSales && (\r\n                                            <VictoryGroup\r\n                                                data={pointGross}\r\n                                                color=\"#76D146\"\r\n                                            >\r\n                                                <VictoryLine\r\n                                                    interpolation=\"natural\"\r\n                                                    labels={({ datum }) => [\"G: \" + datum.date, `${Money(datum.revenue) ?? 0}` + \" VND\"]}\r\n                                                    labelComponent={\r\n                                                        <VictoryTooltip\r\n                                                            renderInPortal={false}\r\n                                                            centerOffset={{ x: 0, y: -5 }}\r\n                                                            style={\r\n                                                                {\r\n                                                                    fontSize: 10,\r\n                                                                    fill: \"#76D146\",\r\n                                                                }\r\n                                                            }\r\n                                                            // flyoutWidth={120}\r\n                                                            // flyoutHeight={50}\r\n                                                            flyoutStyle={{\r\n                                                                stroke: \"#C4C4C4\",\r\n                                                                fill: \"#414141\"\r\n                                                            }}\r\n                                                            cornerRadius={2}\r\n                                                        />\r\n                                                    }\r\n                                                />\r\n                                                <VictoryScatter\r\n                                                    size={3}\r\n                                                    style={{\r\n                                                        data: {\r\n                                                            fill: \"#DAB451\"\r\n                                                        },\r\n                                                    }}\r\n                                                />\r\n                                            </VictoryGroup>\r\n                                        )}\r\n                                    </VictoryChart>\r\n                                )}\r\n                            </View>\r\n                            <View style={styles.rowTableChart}>\r\n                                <View style={{ marginRight: 15 }}>\r\n                                    <Text style={{ textAlign: \"center\" }}>\r\n                                        <SvgUri source={Icons.Ellipse_foc} />\r\n                                        <Text> </Text>\r\n                                        <Text style={styles.commentChart}>Net Sales</Text>\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={{ marginRight: 15 }}>\r\n                                    <Text style={{ textAlign: 'center' }}>\r\n                                        <SvgUri source={Icons.Ellipse_discount} />\r\n                                        <Text> </Text>\r\n                                        <Text style={styles.commentChartTable}>Gross Sales</Text>\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={{ marginRight: 15 }}>\r\n                                    <Text style={{ textAlign: 'center' }}>\r\n                                        <SvgUri source={Icons.iconTransaction} />\r\n                                        <Text> </Text>\r\n                                        <Text style={styles.commentTransaction}> Transaction</Text>\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={{ marginRight: 15 }}>\r\n                                    <Text style={{ textAlign: 'center' }}>\r\n                                        <SvgUri source={Icons.iconCustomer} />\r\n                                        <Text> </Text>\r\n                                        <Text style={styles.commentCustomer}>Customer</Text>\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    </ScrollView>\r\n                    <View style={{ paddingBottom: 15, paddingTop: 15 }}>\r\n                        <View style={styles.lineItem}></View>\r\n                    </View>\r\n                    <View style={[modalCheckBox&&{minHeight: 200 }]}>\r\n                        <View style={styles.viewPicker}>\r\n                            <TouchableWithoutFeedback\r\n                                style={{ zIndex: 3 }}\r\n                                onPress={\r\n                                    () => {\r\n                                        setModalCheckBox(!modalCheckBox);\r\n                                    }\r\n                                }\r\n                            >\r\n                                <View style={styles.pickerModal}>\r\n                                    <Text style={styles.text}>{pickerValueCheckBox}</Text>\r\n                                </View>\r\n                            </TouchableWithoutFeedback>\r\n                            <Ionicons style={styles.iconDown} name=\"caret-down\" size={20} color=\"#fff\"\r\n                                onPress={() => {\r\n                                }} />\r\n                        </View>\r\n                        {\r\n                            modalCheckBox &&\r\n                            <View style={{ position: 'absolute', left: 0, top:0, zIndex: 5 }}>\r\n                                <View style={[styles.modalViewSelectMultiple, { backgroundColor: \"#414141\" }]}>\r\n                                    <RadioForm\r\n                                        initial={radioValue}\r\n                                        style={{ zIndex: 10 }}\r\n                                        radio_props={dataModelBox}\r\n                                        buttonColor={colors.white}\r\n                                        labelStyle={{ fontSize: 16, color: colors.white, paddingBottom: 20, paddingTop: 3 }}\r\n                                        buttonOuterColor={colors.white}\r\n                                        selectedButtonColor={colors.white}\r\n                                        buttonSize={16}\r\n                                        onPress={onchangeRadio}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        }\r\n                        {\r\n                            checkDailyDay && (\r\n\r\n                                <View style={styles.daily}>\r\n                                    <View style={styles.ViewDate}>\r\n                                        <View style={{ flex: 7 }}>\r\n                                            <Text style={styles.textDate}>{textDate}:</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 3, alignItems: 'flex-end' }}>\r\n                                            <TouchableOpacity\r\n                                                style={styles.cssText}\r\n                                                onPress={() => showDatePicker('daily')}\r\n                                            >\r\n                                                <View style={{ flex: 3, flexDirection: 'row', paddingTop: 5 }}>\r\n                                                    <Text style={{ flex: 8.6, color: \"#fff\", fontSize: 14, }}>\r\n                                                        {moment(DateTimeDaily).format(\"DD/MM/YYYY\")}\r\n                                                    </Text>\r\n                                                    <Text style={{ flex: 1.4 }}>\r\n                                                        <SvgUri source={Icons.dateTime} />\r\n                                                    </Text>\r\n                                                </View>\r\n                                            </TouchableOpacity>\r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={styles.information}>\r\n                                        <View style={styles.shareInformation}>\r\n                                            <View style={styles.rowInformation}>\r\n                                                <Text style={styles.headerInformation}>Net value</Text>\r\n                                                <View style={{ padding: 12 }}>\r\n                                                    <View style={styles.lineItem}></View>\r\n                                                </View>\r\n                                                <View style={styles.itemRevenue}>\r\n                                                    <Text numberOfLines={1} style={styles.numInformation}>\r\n                                                        {Money(dataRevenueDaily?.now.totalNetSales)}\r\n                                                    </Text>\r\n                                                    <SvgUri source={Icons.icondaily}/>\r\n                                                </View>\r\n                                                <Text style={styles.dayInformation}>Last {dataRevenueDaily?.last.weekdays}</Text>\r\n                                                <Text style={styles.dayInformation}>{Money(dataRevenueDaily?.last.totalNetSales)}</Text>\r\n                                            </View>\r\n                                            <View style={{ flex: 0.5 }}></View>\r\n                                            <View style={styles.rowInformation}>\r\n                                                <Text style={styles.headerInformation}>Transaction</Text>\r\n                                                <View style={{ padding: 12 }}>\r\n                                                    <View style={styles.lineItem}></View>\r\n                                                </View>\r\n                                                <View style={styles.itemRevenue}>\r\n                                                    <Text style={styles.numInformation}>\r\n                                                    {dataRevenueDaily?.now.totalTransaction}    \r\n                                                    </Text>\r\n                                                    <SvgUri source={Icons.icondaily}/>\r\n                                                </View>\r\n                                                <Text style={styles.dayInformation}>Last {dataRevenueDaily?.last.weekdays}</Text>\r\n                                                <Text style={styles.dayInformation}>{dataRevenueDaily?.last.totalTransaction}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        <View style={{ flex: 0.5 }}></View>\r\n                                        <View style={{ flex: 4.75, backgroundColor: colors.backgroundApp, flexDirection: \"row\" }}>\r\n                                            <View style={styles.rowInformation}>\r\n                                                <Text style={styles.headerInformation}>Customer</Text>\r\n                                                <View style={{ padding: 12 }}>\r\n                                                    <View style={styles.lineItem}></View>\r\n                                                </View>\r\n                                                <View style={styles.itemRevenue}>\r\n                                                    <Text style={styles.numInformation}>\r\n                                                        {dataRevenueDaily?.now.totalCustomer}\r\n                                                    </Text>\r\n                                                    <SvgUri source={Icons.icondaily}/>\r\n                                                </View>\r\n                                                <Text style={styles.dayInformation}>Last {dataRevenueDaily?.last.weekdays}</Text>\r\n                                                <Text style={styles.dayInformation}>{dataRevenueDaily?.last.totalCustomer}</Text>\r\n                                            </View>\r\n                                            <View style={{ flex: 0.5 }}></View>\r\n                                            <View style={styles.rowInformation}>\r\n                                                <Text style={styles.headerInformation}>Week to date</Text>\r\n                                                <View style={{ padding: 12 }}>\r\n                                                    <View style={styles.lineItem}></View>\r\n                                                </View>\r\n                                                <View style={styles.itemRevenue}>\r\n                                                    <Text numberOfLines={1} style={styles.numInformation}>\r\n                                                        {Money(dataRevenueDaily?.now.totalNetSalesWeeks)}\r\n                                                    </Text>\r\n                                                    <SvgUri source={Icons.icondaily}/>\r\n                                                </View>\r\n                                                <Text style={styles.dayInformation}>Week to Last {dataRevenueDaily?.last.weekdays}</Text>\r\n                                                <Text style={styles.dayInformation}>{Money(dataRevenueDaily?.last.totalNetSalesWeeks)}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                            )}\r\n                        {\r\n                            checkDailyMoth && (\r\n                                <View style={styles.daily}>\r\n                                    <View style={styles.ViewDate}>\r\n                                        <View style={{ flex: 8 }}>\r\n                                            <Text style={styles.textDate}>{textDate}:</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 2, alignItems: 'flex-end' }}>\r\n                                            <TouchableOpacity\r\n                                                style={styles.cssText}\r\n                                                onPress={() => setModalCheckBoxMonth(true)}\r\n                                            >\r\n                                                <View style={{ flex: 3, flexDirection: 'row', paddingTop: 5 }}>\r\n                                                    <Text style={{ flex: 7.7, color: \"#fff\", fontSize: 14, }}>\r\n                                                        {monthly}\r\n                                                    </Text>\r\n                                                    <Text style={{ flex: 2.3 }}>\r\n                                                        <SvgUri source={Icons.dateTime} />\r\n                                                    </Text>\r\n                                                </View>\r\n                                            </TouchableOpacity>\r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={styles.information}>\r\n                                        <View style={styles.shareInformation}>\r\n                                            <View style={styles.rowInformation}>\r\n                                                <Text style={styles.headerInformation}>Net value</Text>\r\n                                                <View style={{ padding: 12 }}>\r\n                                                    <View style={styles.lineItem}></View>\r\n                                                </View>\r\n                                                <View style={styles.itemRevenue}>\r\n                                                    <Text style={styles.numInformation}>\r\n                                                    {Money(dataRevenueDaily?.now.totalNetSales)}    \r\n                                                    </Text>\r\n                                                    <SvgUri source={Icons.icondaily}/>\r\n                                                </View>\r\n                                                <Text style={styles.dayInformation}>Last Month</Text>\r\n                                                <Text style={styles.dayInformation}>{Money(dataRevenueDaily?.last.totalNetSales)}</Text>\r\n                                            </View>\r\n                                            <View style={{ flex: 0.5 }}></View>\r\n                                            <View style={styles.rowInformation}>\r\n                                                <Text style={styles.headerInformation}>Transaction</Text>\r\n                                                <View style={{ padding: 12 }}>\r\n                                                    <View style={styles.lineItem}></View>\r\n                                                </View>\r\n                                                <View style={styles.itemRevenue}>\r\n                                                    <Text style={styles.numInformation}>\r\n                                                        {dataRevenueDaily?.now.totalTransaction}  \r\n                                                    </Text>\r\n                                                    <SvgUri source={Icons.icondaily}/>\r\n                                                </View>\r\n                                                <Text style={styles.dayInformation}>Last Month</Text>\r\n                                                <Text style={styles.dayInformation}>{dataRevenueDaily?.last.totalTransaction}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        <View style={{ flex: 0.5 }}></View>\r\n                                        <View style={{ flex: 4.75, backgroundColor: colors.backgroundApp, flexDirection: \"row\" }}>\r\n                                            <View style={styles.rowInformation}>\r\n                                                <Text style={styles.headerInformation}>Customer</Text>\r\n                                                <View style={{ padding: 12 }}>\r\n                                                    <View style={styles.lineItem}></View>\r\n                                                </View>\r\n                                                <View style={styles.itemRevenue}>\r\n                                                    <Text style={styles.numInformation}>\r\n                                                    {dataRevenueDaily?.now.totalCustomer}   \r\n                                                    </Text>\r\n                                                    <SvgUri source={Icons.icondaily}/>\r\n                                                </View>\r\n                                                <Text style={styles.dayInformation}>Last Month</Text>\r\n                                                <Text style={styles.dayInformation}>{dataRevenueDaily?.last.totalCustomer}</Text>\r\n                                            </View>\r\n                                            <View style={{ flex: 0.5 }}></View>\r\n                                            <View style={styles.rowInformation}>\r\n                                                <Text style={styles.headerInformation}>Accumulated till this month</Text>\r\n                                                <View style={{ paddingLeft: 12, paddingRight: 12, paddingBottom: 10 }}>\r\n                                                    <View style={styles.lineItem}></View>\r\n                                                </View>\r\n                                                <View style={styles.itemRevenue}>\r\n                                                    <Text style={styles.numInformation}>\r\n                                                    {Money(dataRevenueDaily?.now.totalNetSalesWeeks)}  \r\n                                                    </Text>\r\n                                                    <SvgUri source={Icons.icondaily}/>\r\n                                                </View>\r\n                                                <Text style={styles.dayInformation}>Same Period last year</Text>\r\n                                                <Text style={styles.dayInformation}>{Money(dataRevenueDaily?.last.totalNetSalesWeeks)}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                            )}\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n            {\r\n                isDatePickerVisible && (\r\n                    <ScrollView style={[styles.dateTimeModal, { height: windowHeight - 130 }]} showsVerticalScrollIndicator={false}>\r\n                        <Modal\r\n                            animationType=\"fade\"\r\n                            transparent={true}\r\n                            visible={isDatePickerVisible}\r\n                        >\r\n                            <View style={{ top: 50 }}>\r\n                                <View style={styles.dateTimeContainer} >\r\n                                    <View style={styles.dateTimeHeader}>\r\n                                        <Text style={styles.dateTimeHeaderText}>DATE</Text>\r\n                                    </View>\r\n                                    <Calendar\r\n                                        style={{ backgroundColor: \"transparent\", }}\r\n                                        monthFormat={\"MMM yyyy\"}\r\n                                        renderHeader={(date: string) => {\r\n                                            return (\r\n                                                <View>\r\n                                                    <Text style={{ color: \"#fff\" }}>{moment(date.toString()).format(\"MMM yyyy\")}</Text>\r\n                                                </View>\r\n                                            );\r\n                                        }}\r\n                                        firstDay={1}\r\n                                        onDayPress={onDayPress}\r\n                                        onDayLongPress={onDayPress}\r\n                                        markedDates={dataMarkedDatesState}\r\n                                        theme={{\r\n                                            arrowColor: \"white\",\r\n                                            textSectionTitleColor: \"#fff\",\r\n                                            calendarBackground: \"transparent\",\r\n                                            dayTextColor: \"#fff\",\r\n                                            selectedDayBackgroundColor: \"#DAB451\",\r\n                                            selectedDayTextColor: \"#ff0\",\r\n                                            textDisabledColor: \"transparent\",\r\n                                            todayTextColor: \"#fff\",\r\n                                            'stylesheet.calendar.header': {\r\n                                                header: {\r\n                                                    backgroundColor: '#595959',\r\n                                                    flexDirection: 'row',\r\n                                                    justifyContent: 'space-between',\r\n                                                    paddingLeft: 10,\r\n                                                    paddingRight: 10,\r\n                                                    marginTop: 6,\r\n                                                    alignItems: 'center'\r\n                                                }\r\n                                            },\r\n                                            'stylesheet.calendar.main': {\r\n                                                container: {\r\n                                                    padding: 0,\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <LinearGradient style={styles.dateTimeButton}\r\n                                        colors={['#DAB451', '#988050']}>\r\n                                        <TouchableOpacity\r\n                                            onPress={handleConfirm}\r\n                                        >\r\n                                            <Text\r\n                                                style={styles.dateTimeText}\r\n                                            >\r\n                                                Done\r\n                                            </Text>\r\n                                        </TouchableOpacity>\r\n                                    </LinearGradient>\r\n                                    <TouchableOpacity\r\n                                        style={[styles.dateTimeButton, { marginBottom: 10, }]}\r\n                                        onPress={hideDatePicker}\r\n                                    >\r\n                                        <Text\r\n                                            style={styles.dateTimeText}\r\n                                        >\r\n                                            Close\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                        </Modal>\r\n                    </ScrollView>\r\n                )\r\n            }\r\n\r\n            {\r\n                modalCheckBoxMonth && (\r\n                    <ScrollView style={[styles.dateTimeModal, { height: windowHeight - 130 }]} showsVerticalScrollIndicator={false}>\r\n                        <Modal\r\n                            animationType=\"fade\"\r\n                            transparent={true}\r\n                            visible={modalCheckBoxMonth}\r\n                        >\r\n                            <View style={{ top: 200 }}>\r\n                                <View style={styles.dateTimeContainer} >\r\n                                    <View style={styles.dateTimeHeader}>\r\n                                        <Text style={styles.dateTimeHeaderText}>Monthly</Text>\r\n                                    </View>\r\n                                    <View style={{ paddingTop: 8, paddingLeft: 32, paddingRight: 32 }}>\r\n                                        <View style={styles.lineItem}></View>\r\n                                    </View>\r\n                                    <View style={styles.timeContainer}>\r\n                                        <View style={{ flex: 1.5 }}></View>\r\n                                        <View style={styles.timeHourView}>\r\n                                            <TouchableOpacity\r\n                                                style={styles.timeArrow}\r\n                                                onPress={increaseMonth}\r\n                                            >\r\n                                                <Ionicons name=\"caret-up\" size={20} color=\"#fff\" />\r\n                                            </TouchableOpacity>\r\n                                            <Text style={styles.timeText}>\r\n                                                {`${month}`}\r\n                                            </Text>\r\n                                            <TouchableOpacity\r\n                                                onPress={decreaseMonth}\r\n                                                style={styles.timeArrow}\r\n                                            >\r\n                                                <Ionicons name=\"caret-down\" size={20} color=\"#fff\" />\r\n                                            </TouchableOpacity>\r\n                                        </View>\r\n                                        <View\r\n                                            style={{\r\n                                                flex: 1,\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"space-around\",\r\n                                            }}\r\n                                        >\r\n                                        </View>\r\n                                        <View style={styles.timeHourView}>\r\n                                            <TouchableOpacity\r\n                                                style={styles.timeArrow}\r\n                                                onPress={increaseYear}\r\n                                            >\r\n                                                <Ionicons name=\"caret-up\" size={20} color=\"#fff\" />\r\n                                            </TouchableOpacity>\r\n                                            <Text style={styles.timeText}>\r\n                                                {`${year}`}\r\n                                            </Text>\r\n                                            <TouchableOpacity\r\n                                                style={styles.timeArrow}\r\n                                                onPress={decreaseYear}\r\n                                            >\r\n                                                <Ionicons name=\"caret-down\" size={20} color=\"#fff\" />\r\n                                            </TouchableOpacity>\r\n                                        </View>\r\n                                        <View style={{ flex: 1.5 }}></View>\r\n                                    </View>\r\n                                    <LinearGradient style={styles.dateTimeButton}\r\n                                        colors={['#DAB451', '#988050']}>\r\n                                        <TouchableOpacity\r\n                                            onPress={handleConfirmYear}\r\n                                        >\r\n                                            <Text\r\n                                                style={styles.dateTimeText}\r\n                                            >\r\n                                                Done\r\n                                            </Text>\r\n                                        </TouchableOpacity>\r\n                                    </LinearGradient>\r\n                                    <TouchableOpacity\r\n                                        style={[styles.dateTimeButton, { marginBottom: 10, }]}\r\n                                        onPress={hideMonthlyPicker}\r\n                                    >\r\n                                        <Text\r\n                                            style={styles.dateTimeText}\r\n                                        >\r\n                                            Close\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                        </Modal>\r\n                    </ScrollView>\r\n                )\r\n            }\r\n            {/* <DialogAwait\r\n                isShow={isSubmit}\r\n            ></DialogAwait> */}\r\n            {isSubmit && <Loading />}\r\n        </View >\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: colors.backgroundApp,\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n        color: colors.white\r\n    },\r\n    viewPicker: {\r\n        paddingLeft: 15,\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4,\r\n        width:220\r\n    },\r\n    pickerModal: {\r\n        height: 46,\r\n        borderRadius: 4,\r\n        justifyContent: 'center',\r\n        backgroundColor: colors.grayLight,\r\n        color: '#fff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3,\r\n        },\r\n    },\r\n    text: {\r\n        color: colors.white,\r\n        fontSize: 14,\r\n        fontWeight: '600'\r\n    },\r\n    iconDown: {\r\n        justifyContent: 'center',\r\n        position: 'absolute',\r\n        right: 10,\r\n        bottom: 12,\r\n        zIndex: 4\r\n    },\r\n    centeredView: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n    },\r\n    centeredViewYear: {\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"flex-end\",\r\n        paddingRight: 22,\r\n    },\r\n    centeredViewSelectMultiple: {\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"flex-start\",\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n    },\r\n    modalView: {\r\n        backgroundColor: colors.white,\r\n        width: 354,\r\n        height: 200,\r\n        padding: 15,\r\n        borderRadius: 4,\r\n        paddingBottom: 20,\r\n        justifyContent: \"flex-start\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n    },\r\n    modalViewYear: {\r\n        backgroundColor: colors.grayLight,\r\n        width: 150,\r\n        height: 200,\r\n        paddingTop: 15,\r\n        borderRadius: 4,\r\n        paddingBottom: 20,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    },\r\n    modalViewSelectMultiple: {\r\n        backgroundColor: colors.white,\r\n        paddingTop: 25,\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        height: 120,\r\n        width: 220,\r\n        borderRadius: 4,\r\n        justifyContent: 'flex-start',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    },\r\n    line: {\r\n        height: 10,\r\n        backgroundColor: colors.backgroundTab,\r\n    },\r\n    containerCenter: {\r\n        backgroundColor: colors.backgroundApp,\r\n        padding: 15\r\n    },\r\n    salseYear: {\r\n        flex: 1,\r\n        // zIndex: 10,\r\n        flexDirection: 'row',\r\n    },\r\n    saleForYear: {\r\n        flex: 3,\r\n        borderRadius: 4,\r\n        alignItems: 'center',\r\n        height: 40,\r\n        backgroundColor: colors.grayLight,\r\n    },\r\n    tesxtAaleForYear: {\r\n        color: colors.white,\r\n        fontSize: 14,\r\n        fontWeight: '600',\r\n        paddingTop: 10\r\n    },\r\n    year: {\r\n        flex: 3,\r\n        borderRadius: 4,\r\n        alignItems: 'center',\r\n        height: 40,\r\n        marginLeft: 10,\r\n        backgroundColor: colors.grayLight,\r\n    },\r\n    charYear: {\r\n        flex: 1,\r\n        fontSize: 12\r\n    },\r\n    fromDate: {\r\n        flex: 1,\r\n        fontSize: 14,\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4\r\n    },\r\n    rowHeader: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n    },\r\n    rowFromDate: {\r\n        flex: 1,\r\n        height: 60,\r\n        backgroundColor: colors.backgroundApp,\r\n        paddingRight: 5,\r\n    },\r\n    textFromDate: {\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"600\",\r\n        fontSize: 12,\r\n        lineHeight: 21,\r\n        color: \"#A4A4A4\",\r\n    },\r\n    cssText: {\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: 'center'\r\n    },\r\n    rowEndDate: {\r\n        flex: 1,\r\n        height: 60,\r\n        backgroundColor: colors.backgroundApp,\r\n        paddingLeft: 5,\r\n    },\r\n    endDate: {\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"600\",\r\n        fontSize: 12,\r\n        lineHeight: 21,\r\n        color: \"#A4A4A4\",\r\n    },\r\n    BoxModal: {\r\n        flex: 1,\r\n        paddingLeft: 10,\r\n    },\r\n    checkBox: {\r\n        alignSelf: \"center\",\r\n    },\r\n    textModalBox: {\r\n        flex: 9,\r\n        color: colors.black,\r\n        fontWeight: '500',\r\n        fontSize: 16,\r\n        paddingTop: 5\r\n    },\r\n    modelCategory: {\r\n        zIndex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\r\n    },\r\n    rowTableChart: {\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        height: 30,\r\n        justifyContent: 'center',\r\n    },\r\n    commentChart: {\r\n        color: \"#F6606F\",\r\n        textAlign: \"center\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"500\",\r\n        fontSize: 12,\r\n        lineHeight: 20,\r\n    },\r\n    commentChartTable: {\r\n        color: \"#76D146\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"500\",\r\n        fontSize: 12,\r\n        lineHeight: 20,\r\n    },\r\n    lineItem: {\r\n        height: 1,\r\n        backgroundColor: colors.colorLine,\r\n    },\r\n    commentTransaction: {\r\n        color: \"#5F8BFC\",\r\n        textAlign: \"center\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"500\",\r\n        fontSize: 12,\r\n        lineHeight: 20,\r\n    },\r\n    commentCustomer: {\r\n        color: \"#FDB441\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"500\",\r\n        fontSize: 12,\r\n        lineHeight: 20,\r\n    },\r\n    dateTimeModal: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    },\r\n    dateTimeContainer: {\r\n        width: \"90%\",\r\n        alignSelf: 'center',\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 5,\r\n    },\r\n    dateTimeHeader: {\r\n        width: \"100%\", justifyContent: \"center\", marginTop: 14\r\n    },\r\n    dateTimeHeaderText: {\r\n        color: \"#fff\", textAlign: \"center\", fontSize: 17\r\n    },\r\n    timeContainer: {\r\n        flexDirection: \"row\", padding: 30, height: 150\r\n    },\r\n    timeHourView: {\r\n        flex: 3,\r\n        backgroundColor: \"#595959\",\r\n        borderRadius: 10,\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    timeArrow: {\r\n        width: 30,\r\n        height: 30,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    timeText: {\r\n        color: \"#fff\",\r\n        fontSize: 18,\r\n    },\r\n    timeDevide: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    timePeriod: {\r\n        flex: 2,\r\n        backgroundColor: \"#595959\",\r\n        borderRadius: 10,\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    timePeriodDivide: {\r\n        width: \"33%\",\r\n        height: 1,\r\n        backgroundColor: \"#A4A4A4\",\r\n    },\r\n    dateTimeButton: {\r\n        width: \"90%\",\r\n        height: 40,\r\n        justifyContent: \"center\",\r\n        alignSelf: \"center\",\r\n        borderRadius: 4,\r\n    },\r\n    dateTimeText: {\r\n        color: \"#fff\",\r\n        textAlign: \"center\",\r\n        fontSize: 17\r\n    },\r\n    salectChart: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        paddingTop: 15\r\n    },\r\n    chartPicker: {\r\n        flex: 5,\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4\r\n    },\r\n    selectpickerModal: {\r\n        height: 40,\r\n        borderRadius: 4,\r\n        justifyContent: 'center',\r\n        backgroundColor: colors.grayLight,\r\n        color: '#fff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3,\r\n        },\r\n        paddingLeft: 8\r\n    },\r\n    daily: {\r\n        flex: 1,\r\n        flexDirection: \"column\"\r\n    },\r\n    ViewDate: {\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        height: 40\r\n    },\r\n    textDate: {\r\n        paddingTop: 10,\r\n        color: colors.white,\r\n        fontSize: 14,\r\n        fontWeight: '500'\r\n    },\r\n    information: {\r\n        flex: 9,\r\n        flexDirection: \"column\",\r\n        height: 290,\r\n    },\r\n    shareInformation: {\r\n        flex: 4.75,\r\n        flexDirection: \"row\",\r\n    },\r\n    headerInformation: {\r\n        color: colors.white,\r\n        fontSize: 14,\r\n        fontWeight: '500',\r\n        textAlign: \"center\",\r\n        padding: 12\r\n    },\r\n    numInformation: {\r\n        color: colors.white,\r\n        fontSize: 16,\r\n        fontWeight: '500',\r\n        textAlign: \"center\",\r\n        justifyContent:'center',\r\n        marginRight: 8,\r\n        maxWidth:'80%'\r\n    },\r\n    itemRevenue:{\r\n        flexDirection:'row', alignItems:'center', alignSelf:'center'\r\n    },\r\n    dayInformation: {\r\n        color: colors.colorLine,\r\n        fontSize: 12,\r\n        fontWeight: '500',\r\n        textAlign: \"center\",\r\n        paddingTop: 4\r\n    },\r\n    rowInformation: {\r\n        flex: 4.75,\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4\r\n    },\r\n    iconInformation: {\r\n        // marginLeft: 8,\r\n        // paddingTop: 6\r\n    },\r\n    listPicker: {\r\n        zIndex: 5,\r\n        position: 'absolute',\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4,\r\n        borderColor: colors.backgroundApp,\r\n        paddingHorizontal: 7,\r\n        paddingVertical: 5,\r\n        height: 275,\r\n        top: 60,\r\n    },\r\n    listPickerYear: {\r\n        zIndex: 5,\r\n        position: 'absolute',\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4,\r\n        borderColor: colors.backgroundApp,\r\n        paddingHorizontal: 7,\r\n        paddingVertical: 5,\r\n        height: 180,\r\n        top: 45,\r\n    },\r\n    itemPicker: {\r\n        height: 30,\r\n        justifyContent: \"center\",\r\n    },\r\n    textItemPicker: {\r\n        color: colors.colorText,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}