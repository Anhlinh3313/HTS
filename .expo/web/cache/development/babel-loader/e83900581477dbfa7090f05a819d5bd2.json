{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Environment } from \"../environment\";\nimport { _getToken } from \"./authService\";\nvar url = Environment.apiPost;\nexport var getListBooking = function getListBooking(stringDateFrom, stringDateTo, memCode, resNum) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getListBooking$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + \"/api/Speedpos/Reservations\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? \"Bearer \" + token : \"\"\n            },\n            body: JSON.stringify({\n              StringDateFrom: stringDateFrom,\n              StringDateTo: stringDateTo,\n              MemCode: memCode,\n              ResNum: resNum\n            })\n          }));\n\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](3);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/bookingService.ts"],"names":["Environment","_getToken","url","apiPost","getListBooking","stringDateFrom","stringDateTo","memCode","resNum","token","fetch","method","headers","Accept","Authorization","body","JSON","stringify","StringDateFrom","StringDateTo","MemCode","ResNum","response","json","console","error"],"mappings":";AAAA,SAASA,WAAT;AACA,SAASC,SAAT;AAEA,IAAIC,GAAG,GAAGF,WAAW,CAACG,OAAtB;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAC5BC,cAD4B,EAE5BC,YAF4B,EAG5BC,OAH4B,EAI5BC,MAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAMRP,SAAS,EAND;;AAAA;AAMtBQ,UAAAA,KANsB;AAAA;AAAA;AAAA,2CAQLC,KAAK,CAACR,GAAG,GAAG,4BAAP,EAAqC;AAC7DS,YAAAA,MAAM,EAAE,MADqD;AAE7DC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,kBADD;AAEP,8BAAgB,kBAFT;AAGPC,cAAAA,aAAa,EAAEL,KAAK,eAAaA,KAAb,GAAuB;AAHpC,aAFoD;AAO7DM,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,cAAAA,cAAc,EAAEb,cADG;AAEnBc,cAAAA,YAAY,EAAEb,YAFK;AAGnBc,cAAAA,OAAO,EAAEb,OAHU;AAInBc,cAAAA,MAAM,EAAEb;AAJW,aAAf;AAPuD,WAArC,CARA;;AAAA;AAQtBc,UAAAA,QARsB;AAAA;AAAA,2CAsBTA,QAAQ,CAACC,IAAT,EAtBS;;AAAA;AAsBtBA,UAAAA,IAtBsB;AAAA,2CAuBnBA,IAvBmB;;AAAA;AAAA;AAAA;AAyB1BC,UAAAA,OAAO,CAACC,KAAR;AAzB0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { Environment } from \"../environment\";\r\nimport { _getToken } from \"./authService\";\r\n\r\nlet url = Environment.apiPost;\r\nexport const getListBooking = async (\r\n  stringDateFrom: any,\r\n  stringDateTo: any,\r\n  memCode?: any,\r\n  resNum?: any\r\n) => {\r\n  const token = await _getToken();\r\n  try {\r\n    let response = await fetch(url + \"/api/Speedpos/Reservations\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n      body: JSON.stringify({\r\n        StringDateFrom: stringDateFrom,\r\n        StringDateTo: stringDateTo,\r\n        MemCode: memCode,\r\n        ResNum: resNum,\r\n      }),\r\n    });\r\n    let json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}