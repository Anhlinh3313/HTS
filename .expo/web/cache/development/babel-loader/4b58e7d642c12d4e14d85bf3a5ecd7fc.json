{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\StaffManagement\\\\ListOfStaff\\\\items\\\\itemStaff.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { colors } from \"../../../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Icons } from \"../../../../../../assets\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport SvgUri from \"react-native-svg-uri\";\nimport ItemFullTimev2 from \"./itemFullTimev2\";\nimport ItemPartTime from \"./itemPartTime\";\nimport { ValidateEmail, isPhoneNumber } from \"../../../../../../components/management/utils\";\nimport { StaffService } from \"../../../../../../netWorking/staffService\";\nimport Loading from \"../../../../../../components/dialogs/Loading\";\nimport SendSuccess from \"../../../../../../components/modalNotification/SendSuccess\";\nimport SendFail from \"../../../../../../components/modalNotification/SendFail\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkRole } from \"../../../../../../components/generalConvert/roles\";\nimport moment from \"moment\";\n\nvar itemTimeAndLegendStaff = function itemTimeAndLegendStaff(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.staff;\n  }),\n      workingPartTimes = _useSelector.workingPartTimes;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.staff;\n  }),\n      staffs = _useSelector2.staffs;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.accesses;\n  }),\n      access = _useSelector3.access;\n\n  var dispatch = useDispatch();\n  var data = props.data;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sent = _useState4[0],\n      setSent = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      statusSent = _useState6[0],\n      setStatusSent = _useState6[1];\n\n  var inputChangeInfo = {\n    email: data.email,\n    phone: data.phone\n  };\n  var modalNull = {\n    isShow: false,\n    type: \"\"\n  };\n  var dimensions = Dimensions.get(\"window\");\n  var windowHeight = dimensions.height;\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isShowTimeAndLegend = _useState8[0],\n      setIsShowTimeAndLegend = _useState8[1];\n\n  var _useState9 = useState(modalNull),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalItem = _useState10[0],\n      setModalItem = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      schedules = _useState12[0],\n      setSchedules = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      schedulesFulltime = _useState14[0],\n      setSchedulesFulltime = _useState14[1];\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      schedulesFulltimeTemp = _useState16[0],\n      setSchedulesFulltimeTemp = _useState16[1];\n\n  var _useState17 = useState(inputChangeInfo),\n      _useState18 = _slicedToArray(_useState17, 2),\n      inputChangeEmailPhone = _useState18[0],\n      setInputChangeEmailPhone = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isChange = _useState20[0],\n      setIsChange = _useState20[1];\n\n  var handleChangePartTime = function handleChangePartTime(data, id) {\n    if (data) {\n      setSchedules(_objectSpread(_objectSpread({}, schedules), _defineProperty({}, id, data)));\n    }\n  };\n\n  var handleChangeFullTime = function handleChangeFullTime(id, data, isChangeOT, isSaved) {\n    if (data) {\n      if (data.legend == 0 && data.time.length == 0 && !isChangeOT) {\n        return;\n      }\n\n      setSchedulesFulltime(_objectSpread(_objectSpread({}, schedulesFulltime), _defineProperty({}, id, data)));\n      setIsChange(true);\n\n      if (isSaved) {\n        if (isChange) {\n          setSchedulesFulltimeTemp(_objectSpread(_objectSpread({}, schedulesFulltimeTemp), _defineProperty({}, id, data)));\n        }\n      } else {\n        setSchedulesFulltimeTemp(_objectSpread(_objectSpread({}, schedulesFulltimeTemp), _defineProperty({}, id, data)));\n      }\n    }\n  };\n\n  var handleChangeEmailPhone = function handleChangeEmailPhone(key, value) {\n    setInputChangeEmailPhone(_objectSpread(_objectSpread({}, inputChangeEmailPhone), _defineProperty({}, key, value)));\n  };\n\n  var handleCloseModalChangeInfo = function handleCloseModalChangeInfo() {\n    setInputChangeEmailPhone(inputChangeInfo);\n    setModalItem({\n      isShow: false\n    });\n  };\n\n  var handleConfirmModalChangeInfo = function handleConfirmModalChangeInfo(type) {\n    var req, res;\n    return _regeneratorRuntime.async(function handleConfirmModalChangeInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(type === \"email\")) {\n              _context.next = 7;\n              break;\n            }\n\n            if (!(inputChangeEmailPhone.email === \"\")) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"Email cannot be blank!\");\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (ValidateEmail(inputChangeEmailPhone.email)) {\n              _context.next = 7;\n              break;\n            }\n\n            alert(\"Email invalid!\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            if (!(type === \"phone\")) {\n              _context.next = 14;\n              break;\n            }\n\n            if (!(inputChangeEmailPhone.phone === \"\")) {\n              _context.next = 11;\n              break;\n            }\n\n            alert(\"Phone cannot be blank!\");\n            return _context.abrupt(\"return\");\n\n          case 11:\n            if (isPhoneNumber(inputChangeEmailPhone.phone)) {\n              _context.next = 14;\n              break;\n            }\n\n            alert('Phone must start with \"0\" and have 10 to 11 characters!');\n            return _context.abrupt(\"return\");\n\n          case 14:\n            req = {\n              id: data.id,\n              isEnabled: true,\n              firstName: data.firstName,\n              lastName: data.lastName,\n              phone: inputChangeEmailPhone.phone,\n              email: inputChangeEmailPhone.email,\n              positionId: data.positionId,\n              recordAreaId: data.recordAreaId,\n              dutyId: data.dutyId,\n              titleId: data.dutyId\n            };\n            setIsLoading(true);\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(StaffService.updateStaff(req));\n\n          case 18:\n            res = _context.sent;\n            setIsLoading(false);\n\n            if (res.isSuccess === 1) {\n              dispatch({\n                type: \"UPDATE_STAFF\",\n                payload: req\n              });\n            } else {\n              setSent(\"fail\");\n              setStatusSent(\"Edit info staff fail!\");\n            }\n\n            setModalItem({\n              isShow: false\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onConfirmWorkingTime = function onConfirmWorkingTime() {\n    var req, isWarn;\n    return _regeneratorRuntime.async(function onConfirmWorkingTime$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            req = {\n              StaffId: data.id,\n              isConfirm: true,\n              WorkingScheduleData: []\n            };\n            isWarn = '';\n            Object.keys(schedulesFulltimeTemp).map(function (item) {\n              if (schedulesFulltimeTemp[item].time.length > 0) {\n                var arr2 = staffs.find(function (staff) {\n                  return staff.id === data.id;\n                }).workingScheduleData.find(function (data) {\n                  return +new Date(data.WorkingDate) == +new Date(item);\n                });\n\n                if (arr2) {\n                  var intersection = schedulesFulltimeTemp[item].time.filter(function (x) {\n                    return arr2.WorkingWeekTime[0].WorkingWeekTimeId.includes(x);\n                  });\n\n                  if (intersection && intersection.length > 0) {\n                    isWarn = item;\n                  }\n                }\n\n                var _WorkingWeekTimev2 = [];\n\n                _toConsumableArray(new Set([].concat(_toConsumableArray(schedulesFulltimeTemp[item].time), _toConsumableArray(schedulesFulltimeTemp[item].timeSplit)))).map(function (_item) {\n                  _WorkingWeekTimev2.push({\n                    isOT: schedulesFulltimeTemp[item].isOT,\n                    workingTimeId: _item\n                  });\n                });\n\n                req.WorkingScheduleData.push({\n                  IsSplit: schedulesFulltimeTemp[item].timeSplit.length > 0 ? 1 : 0,\n                  LegendId: null,\n                  IsCheckIn: 0,\n                  Remark: null,\n                  WorkingDate: item,\n                  TotalWorkingTime: _toConsumableArray(new Set([].concat(_toConsumableArray(schedulesFulltimeTemp[item].time), _toConsumableArray(schedulesFulltimeTemp[item].timeSplit)))).length,\n                  WorkingWeekTime: [{\n                    WorkingWeekTimeId: _toConsumableArray(new Set([].concat(_toConsumableArray(schedulesFulltimeTemp[item].time), _toConsumableArray(schedulesFulltimeTemp[item].timeSplit)))),\n                    timeId: schedulesFulltimeTemp[item].time,\n                    timeSplitId: schedulesFulltimeTemp[item].timeSplit,\n                    OT: +schedulesFulltimeTemp[item].isOT\n                  }],\n                  staffWorkingDayTimeData: _WorkingWeekTimev2\n                });\n              }\n\n              if (schedulesFulltimeTemp[item].time.length == 0 && schedulesFulltimeTemp[item].legend !== 0) {\n                req.WorkingScheduleData.push({\n                  IsSplit: 0,\n                  LegendId: schedulesFulltimeTemp[item].legend,\n                  IsCheckIn: 0,\n                  Remark: schedulesFulltimeTemp[item].remark,\n                  WorkingDate: item,\n                  TotalWorkingTime: 0,\n                  WorkingWeekTime: null,\n                  staffWorkingDayTimeData: null\n                });\n              }\n            });\n\n            if (!(isWarn.length > 0)) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert(\"The time of the schedule for \" + isWarn.split('T')[0] + \" has been created!\");\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            if (!(req.WorkingScheduleData.length === 0)) {\n              _context2.next = 9;\n              break;\n            }\n\n            alert('You have not scheduled!');\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            dispatch({\n              type: \"CREATE_WORKING_TIME_BY_STAFF\",\n              payload: req\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onConfirmWorkingTimePartTime = function onConfirmWorkingTimePartTime() {\n    var req, res;\n    return _regeneratorRuntime.async(function onConfirmWorkingTimePartTime$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            req = {\n              StaffId: data.id,\n              StaffFreeTimes: []\n            };\n            Object.keys(schedules).map(function (item) {\n              req.StaffFreeTimes.push({\n                Rank: moment(item).format(\"dddd\"),\n                FreeDate: item,\n                WorkingTimeId: schedules[item]\n              });\n            });\n            setIsLoading(true);\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(StaffService.createStaffFreeTime([req]));\n\n          case 5:\n            res = _context3.sent;\n            setIsLoading(false);\n\n            if (res.isSuccess === 1) {\n              dispatch({\n                type: \"RESET_STAFFS\"\n              });\n            } else {\n              setSent(\"fail\");\n              setStatusSent(\"Create schedule fail!\");\n            }\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.staff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.headerStaff, {\n      justifyContent: \"space-between\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.headerStaff, {\n      marginBottom: 0\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: Icons.avatar,\n    style: styles.avatarStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textNameStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, data.firstName + \" \" + data.lastName)), checkRole(access, \"Staff Management Detail (Schedule/ Legend/OT/Attendance)\") || checkRole(access, \"Part Time Roster/Schedule (Part TIme Users Log In)\") ? React.createElement(TouchableOpacity, {\n    style: {},\n    onPress: function onPress() {\n      return setIsShowTimeAndLegend(!isShowTimeAndLegend);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, isShowTimeAndLegend ? React.createElement(Ionicons, {\n    name: \"remove-circle-outline\",\n    size: 20,\n    color: colors.colorLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }) : React.createElement(Ionicons, {\n    name: \"add-circle-outline\",\n    size: 20,\n    color: colors.colorLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  })) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.bodyStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.itemInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, \"Title: \", data.title)), React.createElement(View, {\n    style: styles.itemInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Position: \", data.positionName)), React.createElement(View, {\n    style: [styles.itemInfo, styles.infoEdit],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, \"Email: \", data.email), checkRole(access, \"Edit Staff\") && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalItem({\n        isShow: true,\n        type: \"email\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.iconEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: [styles.itemInfo, styles.infoEdit],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, \"Phone: \", data.phone), checkRole(access, \"Edit Staff\") && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalItem({\n        isShow: true,\n        type: \"phone\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.iconEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }))))), isShowTimeAndLegend && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, data.workingScheduleData.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, data.positionName === \"Full-Time\" ? React.createElement(ItemFullTimev2, {\n      isSaved: data.saved,\n      data: item,\n      index: index,\n      onChangeTime: function onChangeTime(data, id, isSaved) {\n        handleChangeFullTime(data, id, false, isSaved);\n      },\n      onChangeOT: function onChangeOT(data, id) {\n        handleChangeFullTime(data, id, true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }) : React.createElement(ItemPartTime, {\n      data: item,\n      onChangeTime: function onChangeTime(data, id) {\n        handleChangePartTime(data, id);\n      },\n      onChangeIsNo: function onChangeIsNo(data, id) {\n        handleChangePartTime(data, id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 19\n      }\n    }));\n  }), React.createElement(View, {\n    style: {\n      height: 70,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, React.createElement(LinearGradient, {\n    style: [styles.buttonConfirmSchedule],\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      data.positionName === \"Full-Time\" ? onConfirmWorkingTime() : onConfirmWorkingTimePartTime();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textButtonForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, \"Confirm\"))))), React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalItem.isShow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.centeredView, styles.modelCategory, {\n      height: windowHeight\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableNativeFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: [styles.modalView, {\n      backgroundColor: \"#414141\",\n      paddingLeft: 15,\n      paddingRight: 15\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.titleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: colors.mainColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, modalItem.type === \"email\" ? \"Change Email\" : \"Change Phone Number\")), React.createElement(View, {\n    style: {\n      paddingTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: colors.gray,\n      fontWeight: \"600\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, modalItem.type === \"email\" ? \"Email\" : \"Phone Number\"), React.createElement(TextInput, {\n    placeholder: modalItem.type === \"email\" ? \"Type Email\" : \"Type Phone Number\",\n    keyboardType: modalItem.type === \"email\" ? \"email-address\" : \"number-pad\",\n    placeholderTextColor: colors.gray,\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return handleChangeEmailPhone(modalItem.type === \"email\" ? \"email\" : \"phone\", text);\n    },\n    value: modalItem.type === \"email\" ? inputChangeEmailPhone.email : inputChangeEmailPhone.phone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      marginTop: 20,\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.rowButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4\n    },\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      handleCloseModalChangeInfo();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.buttonClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 23\n    }\n  }, \"Close\"))), React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4\n    },\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      handleConfirmModalChangeInfo(modalItem.type === \"email\" ? \"email\" : \"phone\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.buttonConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 23\n    }\n  }, \"Confirm\"))))))))), React.createElement(SendSuccess, {\n    title: statusSent,\n    visible: sent === \"success\",\n    onRequestClose: function onRequestClose() {\n      setSent(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }\n  }), React.createElement(SendFail, {\n    title: statusSent,\n    visible: sent === \"fail\",\n    onRequestClose: function onRequestClose() {\n      setSent(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }\n  }), isLoading && React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default itemTimeAndLegendStaff;\nvar styles = StyleSheet.create({\n  text: {\n    color: colors.colorText,\n    fontSize: 14,\n    fontWeight: \"600\"\n  },\n  textInfoStaff: {\n    color: colors.colorText,\n    fontSize: 14,\n    fontWeight: \"400\"\n  },\n  buttonForm: {\n    flex: 1,\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  textButtonForm: {\n    color: colors.colorText,\n    fontSize: 16,\n    fontWeight: \"400\"\n  },\n  buttonConfirmSchedule: {\n    width: 150,\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  staff: {\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    padding: 10,\n    marginBottom: 12\n  },\n  headerStaff: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  avatarStaff: {\n    width: 44,\n    height: 44,\n    borderRadius: 30,\n    backgroundColor: \"#c4c4c4\",\n    marginRight: 15\n  },\n  textNameStaff: {\n    color: colors.colorText,\n    fontSize: 16,\n    fontWeight: \"500\"\n  },\n  bodyStaff: {},\n  itemInfo: {\n    marginVertical: 1\n  },\n  itemInfoDone: {\n    marginVertical: 8,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  infoEdit: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  centeredView: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  modelCategory: {\n    zIndex: 1,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    justifyContent: \"flex-start\",\n    paddingTop: 190\n  },\n  titleModal: {\n    borderBottomWidth: 1,\n    borderBottomColor: colors.gray,\n    alignItems: \"center\",\n    paddingBottom: 15\n  },\n  textInput: {\n    marginTop: 5,\n    fontSize: 14,\n    paddingLeft: 11,\n    height: 40,\n    borderRadius: 4,\n    backgroundColor: \"#303030\",\n    color: colors.white\n  },\n  rowButton: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  buttonClose: {\n    height: 36,\n    width: 150,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#636363\",\n    borderRadius: 4\n  },\n  buttonConfirm: {\n    height: 36,\n    width: 150,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#DAB451\",\n    borderRadius: 4\n  },\n  modalView: {\n    backgroundColor: colors.white,\n    width: 354,\n    padding: 15,\n    borderRadius: 4,\n    paddingBottom: 20,\n    justifyContent: \"flex-start\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: colors.white\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/StaffManagement/ListOfStaff/items/itemStaff.tsx"],"names":["React","useState","colors","Ionicons","Icons","LinearGradient","SvgUri","ItemFullTimev2","ItemPartTime","ValidateEmail","isPhoneNumber","StaffService","Loading","SendSuccess","SendFail","useDispatch","useSelector","checkRole","moment","itemTimeAndLegendStaff","props","state","staff","workingPartTimes","staffs","accesses","access","dispatch","data","isLoading","setIsLoading","sent","setSent","statusSent","setStatusSent","inputChangeInfo","email","phone","modalNull","isShow","type","dimensions","Dimensions","get","windowHeight","height","isShowTimeAndLegend","setIsShowTimeAndLegend","modalItem","setModalItem","schedules","setSchedules","schedulesFulltime","setSchedulesFulltime","schedulesFulltimeTemp","setSchedulesFulltimeTemp","inputChangeEmailPhone","setInputChangeEmailPhone","isChange","setIsChange","handleChangePartTime","id","handleChangeFullTime","isChangeOT","isSaved","legend","time","length","handleChangeEmailPhone","key","value","handleCloseModalChangeInfo","handleConfirmModalChangeInfo","alert","req","isEnabled","firstName","lastName","positionId","recordAreaId","dutyId","titleId","updateStaff","res","isSuccess","payload","onConfirmWorkingTime","StaffId","isConfirm","WorkingScheduleData","isWarn","Object","keys","map","item","arr2","find","workingScheduleData","Date","WorkingDate","intersection","filter","x","WorkingWeekTime","WorkingWeekTimeId","includes","_WorkingWeekTimev2","Set","timeSplit","_item","push","isOT","workingTimeId","IsSplit","LegendId","IsCheckIn","Remark","TotalWorkingTime","timeId","timeSplitId","OT","staffWorkingDayTimeData","remark","split","onConfirmWorkingTimePartTime","StaffFreeTimes","Rank","format","FreeDate","WorkingTimeId","createStaffFreeTime","styles","headerStaff","justifyContent","marginBottom","avatar","avatarStaff","textNameStaff","colorLine","bodyStaff","itemInfo","textInfoStaff","title","positionName","infoEdit","iconEdit","index","saved","alignItems","buttonConfirmSchedule","textButtonForm","centeredView","modelCategory","Keyboard","dismiss","modalView","backgroundColor","paddingLeft","paddingRight","titleModal","color","mainColor","paddingTop","fontSize","gray","fontWeight","textInput","text","marginTop","flexDirection","rowButton","borderRadius","yellowishbrown","buttonClose","buttonConfirm","StyleSheet","create","colorText","buttonForm","flex","width","grayLight","padding","marginRight","marginVertical","itemInfoDone","zIndex","borderBottomWidth","borderBottomColor","paddingBottom","white","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableHighlight,\r\n  Dimensions,\r\n  Modal,\r\n  TouchableOpacity,\r\n  Image,\r\n  TextInput,\r\n  TouchableNativeFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport { colors } from \"../../../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { Icons } from \"../../../../../../assets\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport ItemFullTimev2 from \"./itemFullTimev2\";\r\nimport ItemFullTime from \"./itemFullTime\";\r\nimport ItemPartTime from \"./itemPartTime\";\r\n\r\nimport { ValidateEmail, isPhoneNumber } from \"../../../../../../components/management/utils\";\r\nimport { IStaff, IPicker } from \"../../../../../../models/staffModel\";\r\nimport { StaffService } from \"../../../../../../netWorking/staffService\";\r\nimport Loading from \"../../../../../../components/dialogs/Loading\";\r\nimport SendSuccess from \"../../../../../../components/modalNotification/SendSuccess\";\r\nimport SendFail from \"../../../../../../components/modalNotification/SendFail\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../../../redux/reducers\";\r\n\r\nimport { checkRole } from \"../../../../../../components/generalConvert/roles\";\r\nimport moment from \"moment\";\r\nexport interface IModal {\r\n  isShow?: boolean;\r\n  type?: string;\r\n}\r\ninterface Props {\r\n  data: IStaff;\r\n}\r\nconst itemTimeAndLegendStaff = (props: Props) => {\r\n  const { workingPartTimes } = useSelector((state: RootState) => state.staff);\r\n  const { staffs } = useSelector((state: RootState) => state.staff);\r\n  const { access } = useSelector((state: RootState) => state.accesses);\r\n  const dispatch = useDispatch();\r\n  const { data } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [sent, setSent] = useState(\"\");\r\n  const [statusSent, setStatusSent] = useState(\"\");\r\n  const inputChangeInfo = {\r\n    email: data.email,\r\n    phone: data.phone,\r\n  };\r\n  const modalNull: IModal = { isShow: false, type: \"\" };\r\n  const dimensions = Dimensions.get(\"window\");\r\n  const windowHeight = dimensions.height;\r\n  const [isShowTimeAndLegend, setIsShowTimeAndLegend] = useState(false);\r\n  const [modalItem, setModalItem] = useState(modalNull);\r\n  const [schedules, setSchedules] = useState({});\r\n  const [schedulesFulltime, setSchedulesFulltime] = useState({});\r\n  const [schedulesFulltimeTemp, setSchedulesFulltimeTemp] = useState({});\r\n  const [inputChangeEmailPhone, setInputChangeEmailPhone] = useState(inputChangeInfo);\r\n  const [isChange, setIsChange] = useState(false);\r\n  const handleChangePartTime = (data: number[], id: string) => {\r\n    if (data) {\r\n      setSchedules({ ...schedules, ...{ [id]: data } });\r\n    }\r\n  };\r\n  const handleChangeFullTime = (id: string, data: any, isChangeOT?: boolean, isSaved?: boolean) => {\r\n    if (data) {\r\n      if (data.legend == 0 && data.time.length == 0 && !isChangeOT) {\r\n        return\r\n      }\r\n      setSchedulesFulltime({ ...schedulesFulltime, ...{ [id]: data } });\r\n      setIsChange(true)\r\n      if (isSaved) {\r\n        if (isChange) {\r\n          setSchedulesFulltimeTemp({ ...schedulesFulltimeTemp, ...{ [id]: data } })\r\n        }\r\n      } else {\r\n        setSchedulesFulltimeTemp({ ...schedulesFulltimeTemp, ...{ [id]: data } })\r\n      }\r\n\r\n    }\r\n  };\r\n  \r\n  const handleChangeEmailPhone = (key: string, value: string) => {\r\n    setInputChangeEmailPhone({ ...inputChangeEmailPhone, ...{ [key]: value } });\r\n  };\r\n  const handleCloseModalChangeInfo = () => {\r\n    setInputChangeEmailPhone(inputChangeInfo);\r\n    setModalItem({ isShow: false });\r\n  };\r\n  const handleConfirmModalChangeInfo = async (type: string) => {\r\n    if (type === \"email\") {\r\n      if (inputChangeEmailPhone.email === \"\") {\r\n        alert(\"Email cannot be blank!\");\r\n        return;\r\n      }\r\n      if (!ValidateEmail(inputChangeEmailPhone.email)) {\r\n        alert(\"Email invalid!\");\r\n        return;\r\n      }\r\n    }\r\n    if (type === \"phone\") {\r\n      if (inputChangeEmailPhone.phone === \"\") {\r\n        alert(\"Phone cannot be blank!\");\r\n        return;\r\n      }\r\n      if (!isPhoneNumber(inputChangeEmailPhone.phone)) {\r\n        alert('Phone must start with \"0\" and have 10 to 11 characters!');\r\n        return;\r\n      }\r\n    }\r\n    const req = {\r\n      id: data.id,\r\n      isEnabled: true,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      phone: inputChangeEmailPhone.phone,\r\n      email: inputChangeEmailPhone.email,\r\n      positionId: data.positionId,\r\n      recordAreaId: data.recordAreaId,\r\n      dutyId: data.dutyId,\r\n      titleId: data.dutyId,\r\n    };\r\n    setIsLoading(true);\r\n    const res = await StaffService.updateStaff(req);\r\n    setIsLoading(false);\r\n    if (res.isSuccess === 1) {\r\n      dispatch({ type: \"UPDATE_STAFF\", payload: req });\r\n    } else {\r\n      setSent(\"fail\");\r\n      setStatusSent(\"Edit info staff fail!\");\r\n    }\r\n\r\n    setModalItem({ isShow: false });\r\n  };\r\n\r\n  const onConfirmWorkingTime = async () => {\r\n    let req = {\r\n      StaffId: data.id,\r\n      isConfirm: true,\r\n      WorkingScheduleData: [],\r\n    };\r\n    let isWarn = '';\r\n    Object.keys(schedulesFulltimeTemp).map(item => {\r\n      if (schedulesFulltimeTemp[item].time.length > 0) {\r\n        let arr2 = staffs.find(staff => staff.id === data.id).workingScheduleData.find(data => +new Date(data.WorkingDate) == +new Date(item));\r\n        if (arr2) {\r\n          let intersection = schedulesFulltimeTemp[item].time.filter(x => arr2.WorkingWeekTime[0].WorkingWeekTimeId.includes(x));\r\n          if (intersection && intersection.length > 0) {\r\n            isWarn = item\r\n          }\r\n        }\r\n\r\n        let _WorkingWeekTimev2 = [];\r\n        [...new Set([...schedulesFulltimeTemp[item].time, ...schedulesFulltimeTemp[item].timeSplit])].map(_item => {\r\n          _WorkingWeekTimev2.push({\r\n            isOT: schedulesFulltimeTemp[item].isOT,\r\n            workingTimeId: _item,\r\n          })\r\n        })\r\n        req.WorkingScheduleData.push({\r\n          IsSplit: schedulesFulltimeTemp[item].timeSplit.length > 0 ? 1 : 0,\r\n          LegendId: null,\r\n          IsCheckIn: 0,\r\n          Remark: null,\r\n          WorkingDate: item,\r\n          TotalWorkingTime: [...new Set([...schedulesFulltimeTemp[item].time, ...schedulesFulltimeTemp[item].timeSplit])].length,\r\n          WorkingWeekTime: [\r\n            {\r\n              WorkingWeekTimeId: [...new Set([...schedulesFulltimeTemp[item].time, ...schedulesFulltimeTemp[item].timeSplit])],\r\n              timeId: schedulesFulltimeTemp[item].time,\r\n              timeSplitId: schedulesFulltimeTemp[item].timeSplit,\r\n              OT: +schedulesFulltimeTemp[item].isOT,\r\n            },\r\n          ],\r\n          staffWorkingDayTimeData: _WorkingWeekTimev2,\r\n        });\r\n      }\r\n      if (schedulesFulltimeTemp[item].time.length == 0 && schedulesFulltimeTemp[item].legend !== 0) {\r\n        req.WorkingScheduleData.push({\r\n          IsSplit: 0,\r\n          LegendId: schedulesFulltimeTemp[item].legend,\r\n          IsCheckIn: 0,\r\n          Remark: schedulesFulltimeTemp[item].remark,\r\n          WorkingDate: item,\r\n          TotalWorkingTime: 0,\r\n          WorkingWeekTime: null,\r\n          staffWorkingDayTimeData: null,\r\n        });\r\n      }\r\n\r\n    });\r\n    if (isWarn.length > 0) {\r\n      alert(`The time of the schedule for ${isWarn.split('T')[0]} has been created!`)\r\n      return\r\n    }\r\n    if (req.WorkingScheduleData.length === 0) {\r\n      alert('You have not scheduled!')\r\n      return\r\n    }\r\n    dispatch({ type: \"CREATE_WORKING_TIME_BY_STAFF\", payload: req });\r\n\r\n  };\r\n  const onConfirmWorkingTimePartTime = async () => {\r\n    let req = {\r\n      StaffId: data.id,\r\n      StaffFreeTimes: [],\r\n    };\r\n    Object.keys(schedules).map(item => {\r\n      req.StaffFreeTimes.push({\r\n        Rank: moment(item).format(\"dddd\"),\r\n        FreeDate: item,\r\n        WorkingTimeId: schedules[item],\r\n      });\r\n    });\r\n    setIsLoading(true);\r\n\r\n    const res = await StaffService.createStaffFreeTime([req]);\r\n    setIsLoading(false);\r\n    if (res.isSuccess === 1) {\r\n      dispatch({ type: \"RESET_STAFFS\" });\r\n    } else {\r\n      setSent(\"fail\");\r\n      setStatusSent(\"Create schedule fail!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.staff}>\r\n        <View style={[styles.headerStaff, { justifyContent: \"space-between\" }]}>\r\n          <View style={[styles.headerStaff, { marginBottom: 0 }]}>\r\n            <Image source={Icons.avatar} style={styles.avatarStaff}></Image>\r\n            <Text style={styles.textNameStaff}>{`${data.firstName} ${data.lastName}`}</Text>\r\n          </View>\r\n          {checkRole(access, \"Staff Management Detail (Schedule/ Legend/OT/Attendance)\") ||\r\n            checkRole(access, \"Part Time Roster/Schedule (Part TIme Users Log In)\") ? (\r\n            <TouchableOpacity style={{}} onPress={() => setIsShowTimeAndLegend(!isShowTimeAndLegend)}>\r\n              {isShowTimeAndLegend ? (\r\n                <Ionicons name=\"remove-circle-outline\" size={20} color={colors.colorLine} />\r\n              ) : (\r\n                <Ionicons name=\"add-circle-outline\" size={20} color={colors.colorLine} />\r\n              )}\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <View></View>\r\n          )}\r\n        </View>\r\n        <View style={styles.bodyStaff}>\r\n          <View style={styles.itemInfo}>\r\n            <Text style={styles.textInfoStaff}>Title: {data.title}</Text>\r\n          </View>\r\n          <View style={styles.itemInfo}>\r\n            <Text style={styles.textInfoStaff}>Position: {data.positionName}</Text>\r\n          </View>\r\n          <View style={[styles.itemInfo, styles.infoEdit]}>\r\n            <Text style={styles.textInfoStaff}>Email: {data.email}</Text>\r\n            {checkRole(access, \"Edit Staff\") && (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setModalItem({\r\n                    isShow: true,\r\n                    type: \"email\",\r\n                  });\r\n                }}\r\n              >\r\n                <SvgUri source={Icons.iconEdit} />\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n          <View style={[styles.itemInfo, styles.infoEdit]}>\r\n            <Text style={styles.textInfoStaff}>Phone: {data.phone}</Text>\r\n            {checkRole(access, \"Edit Staff\") && (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setModalItem({\r\n                    isShow: true,\r\n                    type: \"phone\",\r\n                  });\r\n                }}\r\n              >\r\n                <SvgUri source={Icons.iconEdit} />\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n        </View>\r\n      </View>\r\n      {isShowTimeAndLegend && (\r\n        <View>\r\n          {data.workingScheduleData.map((item, index) => {\r\n            return (\r\n              <View key={index}>\r\n                {data.positionName === \"Full-Time\" ? (\r\n                  <ItemFullTimev2\r\n                    isSaved={data.saved}\r\n                    data={item}\r\n                    index={index}\r\n                    onChangeTime={(data, id, isSaved) => {\r\n                      handleChangeFullTime(data, id, false, isSaved);\r\n                    }}\r\n                    onChangeOT={\r\n                      (data, id) => {\r\n                        handleChangeFullTime(data, id, true);\r\n                      }\r\n                    }\r\n                  ></ItemFullTimev2>\r\n                ) : (\r\n                  <ItemPartTime\r\n                    data={item}\r\n                    onChangeTime={(data, id) => {\r\n                      handleChangePartTime(data, id);\r\n                    }}\r\n                    onChangeIsNo={(data, id) => {\r\n                      handleChangePartTime(data, id);\r\n                    }}\r\n                  ></ItemPartTime>\r\n                )}\r\n              </View>\r\n            );\r\n          })}\r\n          <View\r\n            style={{\r\n              height: 70,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginBottom: 30,\r\n            }}\r\n          >\r\n            <LinearGradient style={[styles.buttonConfirmSchedule]} colors={[\"#DAB451\", \"#988050\"]}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  data.positionName === \"Full-Time\" ? onConfirmWorkingTime() : onConfirmWorkingTimePartTime();\r\n                }}\r\n              >\r\n                <Text style={styles.textButtonForm}>Confirm</Text>\r\n              </TouchableOpacity>\r\n            </LinearGradient>\r\n          </View>\r\n        </View>\r\n      )}\r\n      {/* Modal Edit */}\r\n      <Modal animationType=\"fade\" transparent={true} visible={modalItem.isShow}>\r\n        <View\r\n          style={[\r\n            styles.centeredView,\r\n            styles.modelCategory,\r\n            {\r\n              height: windowHeight,\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableNativeFeedback onPress={Keyboard.dismiss}>\r\n            <View\r\n              style={[\r\n                styles.modalView,\r\n                {\r\n                  backgroundColor: \"#414141\",\r\n                  paddingLeft: 15,\r\n                  paddingRight: 15,\r\n                },\r\n              ]}\r\n            >\r\n              <View style={styles.titleModal}>\r\n                <Text style={[styles.title, { color: colors.mainColor }]}>\r\n                  {modalItem.type === \"email\" ? \"Change Email\" : \"Change Phone Number\"}\r\n                </Text>\r\n              </View>\r\n\r\n              <View style={{ paddingTop: 15 }}>\r\n                <Text\r\n                  style={{\r\n                    fontSize: 12,\r\n                    color: colors.gray,\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  {modalItem.type === \"email\" ? \"Email\" : \"Phone Number\"}\r\n                </Text>\r\n                <TextInput\r\n                  placeholder={modalItem.type === \"email\" ? \"Type Email\" : \"Type Phone Number\"}\r\n                  keyboardType={modalItem.type === \"email\" ? \"email-address\" : \"number-pad\"}\r\n                  placeholderTextColor={colors.gray}\r\n                  style={styles.textInput}\r\n                  onChangeText={text => handleChangeEmailPhone(modalItem.type === \"email\" ? \"email\" : \"phone\", text)}\r\n                  value={modalItem.type === \"email\" ? inputChangeEmailPhone.email : inputChangeEmailPhone.phone}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{\r\n                  marginTop: 20,\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <View style={styles.rowButton}>\r\n                  <TouchableHighlight\r\n                    style={{ borderRadius: 4 }}\r\n                    underlayColor={colors.yellowishbrown}\r\n                    onPress={() => {\r\n                      handleCloseModalChangeInfo();\r\n                    }}\r\n                  >\r\n                    <View style={styles.buttonClose}>\r\n                      <Text style={styles.text}>Close</Text>\r\n                    </View>\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight\r\n                    style={{ borderRadius: 4 }}\r\n                    underlayColor={colors.yellowishbrown}\r\n                    onPress={() => {\r\n                      handleConfirmModalChangeInfo(modalItem.type === \"email\" ? \"email\" : \"phone\");\r\n                    }}\r\n                  >\r\n                    <View style={styles.buttonConfirm}>\r\n                      <Text style={styles.text}>Confirm</Text>\r\n                    </View>\r\n                  </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </TouchableNativeFeedback>\r\n        </View>\r\n      </Modal>\r\n      <SendSuccess\r\n        title={statusSent}\r\n        visible={sent === \"success\"}\r\n        onRequestClose={() => {\r\n          setSent(\"\");\r\n        }}\r\n      ></SendSuccess>\r\n      <SendFail\r\n        title={statusSent}\r\n        visible={sent === \"fail\"}\r\n        onRequestClose={() => {\r\n          setSent(\"\");\r\n        }}\r\n      ></SendFail>\r\n      {isLoading && <Loading />}\r\n    </View>\r\n  );\r\n};\r\nexport default itemTimeAndLegendStaff;\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    color: colors.colorText,\r\n    fontSize: 14,\r\n    fontWeight: \"600\",\r\n  },\r\n  textInfoStaff: {\r\n    color: colors.colorText,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n  buttonForm: {\r\n    flex: 1,\r\n    height: 36,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n\r\n  textButtonForm: {\r\n    color: colors.colorText,\r\n    fontSize: 16,\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  buttonConfirmSchedule: {\r\n    width: 150,\r\n    height: 36,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n  staff: {\r\n    backgroundColor: colors.grayLight,\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    marginBottom: 12,\r\n  },\r\n  headerStaff: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  avatarStaff: {\r\n    width: 44,\r\n    height: 44,\r\n    borderRadius: 30,\r\n    backgroundColor: \"#c4c4c4\",\r\n    marginRight: 15,\r\n  },\r\n  textNameStaff: {\r\n    color: colors.colorText,\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n  },\r\n  bodyStaff: {},\r\n  itemInfo: {\r\n    marginVertical: 1,\r\n  },\r\n  itemInfoDone: {\r\n    marginVertical: 8,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  infoEdit: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  //modal\r\n  centeredView: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n\r\n  //modal Edit\r\n\r\n  modelCategory: {\r\n    zIndex: 1,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    justifyContent: \"flex-start\",\r\n    paddingTop: 190,\r\n  },\r\n  titleModal: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.gray,\r\n    alignItems: \"center\",\r\n    paddingBottom: 15,\r\n  },\r\n  textInput: {\r\n    marginTop: 5,\r\n    fontSize: 14,\r\n    paddingLeft: 11,\r\n    height: 40,\r\n    borderRadius: 4,\r\n    backgroundColor: \"#303030\",\r\n    color: colors.white,\r\n  },\r\n  rowButton: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  buttonClose: {\r\n    height: 36,\r\n    width: 150,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#636363\",\r\n    borderRadius: 4,\r\n  },\r\n\r\n  buttonConfirm: {\r\n    height: 36,\r\n    width: 150,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#DAB451\",\r\n    borderRadius: 4,\r\n  },\r\n  modalView: {\r\n    backgroundColor: colors.white,\r\n    width: 354,\r\n    padding: 15,\r\n    borderRadius: 4,\r\n    paddingBottom: 20,\r\n    justifyContent: \"flex-start\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n    color: colors.white,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}