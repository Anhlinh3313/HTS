{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Environment } from \"../environment\";\nimport { fetchAPIGet } from \"./baseService\";\nvar url = Environment.apiPost;\nexport var SystemService = function () {\n  function SystemService() {\n    _classCallCheck(this, SystemService);\n  }\n\n  _createClass(SystemService, null, [{\n    key: \"getSysInfoSpeedPos\",\n    value: function getSysInfoSpeedPos() {\n      var data;\n      return _regeneratorRuntime.async(function getSysInfoSpeedPos$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIGet({\n                url: \"/api/Speedpos/GetSysInfoSpeedpos\"\n              }));\n\n            case 2:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getWorkplaceByUserId\",\n    value: function getWorkplaceByUserId(id) {\n      var data;\n      return _regeneratorRuntime.async(function getWorkplaceByUserId$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIGet({\n                url: \"/api/Workplace/GetWorkplaceByUserId?userId=\" + id\n              }));\n\n            case 2:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return SystemService;\n}();","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/systemInfo.ts"],"names":["Environment","fetchAPIGet","url","apiPost","SystemService","data","id"],"mappings":";;;AAAA,SAASA,WAAT;AAGA,SAASC,WAAT;AACA,IAAIC,GAAG,GAAGF,WAAW,CAACG,OAAtB;AACA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACoBH,WAAW,CAAC;AAAEC,gBAAAA,GAAG;AAAL,eAAD,CAD/B;;AAAA;AACMG,cAAAA,IADN;AAAA,+CAESA,IAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA,WAKE,8BAAyCC,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACoBL,WAAW,CAAC;AAAEC,gBAAAA,GAAG,kDAAgDI;AAArD,eAAD,CAD/B;;AAAA;AACMD,cAAAA,IADN;AAAA,gDAESA,IAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;;AAAA;AAAA","sourcesContent":["import { Environment } from \"../environment\";\r\nimport { _getToken } from \"./authService\";\r\nimport { IResponseModel } from \"../models/IResponseModel\";\r\nimport { fetchAPIGet } from \"./baseService\";\r\nlet url = Environment.apiPost;\r\nexport class SystemService {\r\n  public static async getSysInfoSpeedPos(): Promise<IResponseModel> {\r\n    let data = (await fetchAPIGet({ url: `/api/Speedpos/GetSysInfoSpeedpos` })) as IResponseModel;\r\n    return data;\r\n  }\r\n  public static async getWorkplaceByUserId(id:number): Promise<IResponseModel> {\r\n    let data = (await fetchAPIGet({ url: `/api/Workplace/GetWorkplaceByUserId?userId=${id}` })) as IResponseModel;\r\n    return data;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}