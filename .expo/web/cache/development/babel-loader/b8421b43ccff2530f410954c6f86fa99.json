{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\StaffManagement\\\\ListOfStaff\\\\items\\\\itemFullTimev2.tsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { CheckBox } from \"react-native-elements\";\nimport { colors } from \"../../../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Select from \"../../../../../../components/select\";\nimport Loading from \"../../../../../../components/dialogs/Loading\";\nimport TimePickerStaff from \"../../../../../../components/TimePickerStaff\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { get12HourTime } from \"../../../../../../components/generalConvert/conVertMonDay\";\nvar emptyPicker = {\n  id: 0,\n  code: \"\",\n  name: \"\"\n};\n\nvar itemStaffFullTime = function itemStaffFullTime(props) {\n  var workingTimes = useSelector(function (state) {\n    return state.staff.workingTimes;\n  });\n  var legends = useSelector(function (state) {\n    return state.staff.legends;\n  });\n  var isSaved = props.isSaved,\n      data = props.data,\n      index = props.index,\n      onChangeTime = props.onChangeTime,\n      onChangeOT = props.onChangeOT;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOT = _useState4[0],\n      setIsOT = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visibleBookingTime = _useState6[0],\n      setVisibleBookingTime = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedTime = _useState8[0],\n      setSelectedTime = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedTimeSplit = _useState10[0],\n      setSelectedTimeSplit = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      visibleBookingLegend = _useState12[0],\n      setVisibleBookingLegend = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      visibleStraightSplit = _useState14[0],\n      setVisibleStraightSplit = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataLegend = _useState16[0],\n      setDataLegend = _useState16[1];\n\n  var _useState17 = useState(emptyPicker),\n      _useState18 = _slicedToArray(_useState17, 2),\n      valueCheckedLegend = _useState18[0],\n      setValueCheckedLegend = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      valueRemark = _useState20[0],\n      setValueRemark = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      timeModel = _useState22[0],\n      setTimeModel = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      valueTimeSelected = _useState24[0],\n      setValueTimeSelected = _useState24[1];\n\n  var onSelectionsChangeTime = function onSelectionsChangeTime(times) {\n    setVisibleBookingLegend(false);\n    setValueCheckedLegend(emptyPicker);\n    setValueRemark(\"\");\n    setSelectedTime(times);\n  };\n\n  var onSelectionsChangeTimeSplit = function onSelectionsChangeTimeSplit(times) {\n    setVisibleBookingLegend(false);\n    setValueCheckedLegend(emptyPicker);\n    setValueRemark(\"\");\n    setSelectedTimeSplit(times);\n  };\n\n  var onSelectionsChangeLegend = function onSelectionsChangeLegend(data) {\n    setSelectedTime([]);\n    setSelectedTimeSplit([]);\n\n    if (valueCheckedLegend.id === data.id) {\n      setValueCheckedLegend(emptyPicker);\n    } else setValueCheckedLegend(data);\n  };\n\n  var checkOT = function checkOT() {\n    setIsOT(!isOT);\n\n    if (!isOT) {\n      setVisibleBookingTime(true);\n    }\n\n    if (isSaved && isOT) {\n      setSelectedTime([]);\n      onChangeOT(data.WorkingDate, {\n        time: [],\n        timeSplit: [],\n        legend: valueCheckedLegend.id,\n        remark: valueRemark,\n        isOT: isOT\n      });\n    }\n  };\n\n  useEffect(function () {\n    if (data.WorkingWeekTime !== null) {\n      setSelectedTime(data.WorkingWeekTime[0].timeId);\n      setSelectedTimeSplit(data.WorkingWeekTime[0].timeSplitId);\n\n      if (data.WorkingWeekTime[0].timeSplitId.length > 0) {\n        setVisibleStraightSplit(true);\n      }\n\n      setIsOT(!!data.WorkingWeekTime[0].OT);\n    }\n\n    if (data.LegendId !== null) {\n      setValueCheckedLegend(legends.find(function (item) {\n        return item.id == data.LegendId;\n      }));\n\n      if (data.Remark !== null) {\n        setValueRemark(data.Remark);\n        handleVisibleLegend();\n      }\n    }\n  }, []);\n  useEffect(function () {\n    if (legends.length > 0) {\n      setDataLegend(legends);\n    }\n  }, [legends]);\n  useEffect(function () {\n    onChangeTime(data.WorkingDate, {\n      time: selectedTime,\n      timeSplit: selectedTimeSplit,\n      legend: valueCheckedLegend.id,\n      remark: valueRemark,\n      isOT: isOT\n    }, isSaved);\n  }, [valueCheckedLegend, selectedTime, selectedTimeSplit, valueRemark, isOT]);\n  useEffect(function () {\n    if (workingTimes.length > 0) {\n      var items = [];\n      workingTimes.map(function (item) {\n        if (isSaved && data.WorkingWeekTime !== null) {\n          if (!data.WorkingWeekTime[0].WorkingWeekTimeId.includes(item.id)) {\n            items.push({\n              label: item.timeRange,\n              value: item.id\n            });\n          }\n        } else {\n          items.push({\n            label: item.timeRange,\n            value: item.id\n          });\n        }\n      });\n      setTimeModel(items);\n    }\n  }, [workingTimes]);\n\n  var handleTime = function handleTime() {\n    var timesPick = [];\n\n    var selected = _toConsumableArray(selectedTime);\n\n    var selectedSplit = _toConsumableArray(selectedTimeSplit);\n\n    if (selectedSplit.length == 0) {\n      selected.sort(function (a, b) {\n        return a - b;\n      });\n      selected.map(function (item) {\n        timesPick.push(workingTimes.find(function (time) {\n          return time.id === item;\n        }));\n      });\n      var arr = [];\n      var temp = 0;\n\n      for (var i = 0; i < timesPick.length; i++) {\n        if (selected[i] + 1 !== selected[i + 1]) {\n          arr.push(timesPick.slice(temp, i + 1));\n          temp = i + 1;\n        }\n\n        if (selected[i] === selected[selected.length - 1]) {\n          arr.push(timesPick.slice(temp, i));\n        }\n      }\n\n      var result = [];\n      arr.map(function (item) {\n        if (item.length > 0) {\n          result.push({\n            from: item[0].timeRange.split(\" \")[0],\n            to: item[item.length - 1].timeRange.split(\" \")[2]\n          });\n        }\n      });\n      setValueTimeSelected(result);\n    } else {\n      var _result = [];\n\n      if (selectedTime.length > 0) {\n        var from = workingTimes.find(function (item) {\n          return item.id === selectedTime[0];\n        }).timeRange.slice(0, 5);\n        var to = workingTimes.find(function (item) {\n          return item.id === selectedTime[selectedTime.length - 1];\n        }).timeRange.slice(8, 13);\n\n        _result.push({\n          from: from,\n          to: to\n        });\n      }\n\n      if (selectedTimeSplit.length > 0) {\n        var from2 = workingTimes.find(function (item) {\n          return item.id === selectedTimeSplit[0];\n        }).timeRange.slice(0, 5);\n        var to2 = workingTimes.find(function (item) {\n          return item.id === selectedTimeSplit[selectedTimeSplit.length - 1];\n        }).timeRange.slice(8, 13);\n\n        _result.push({\n          from: from2,\n          to: to2\n        });\n      }\n\n      setValueTimeSelected(_result);\n    }\n  };\n\n  useEffect(function () {\n    handleTime();\n  }, [selectedTime]);\n\n  function notifyMessage(msg) {\n    if (Platform.OS === \"android\") {\n      ToastAndroid.show(msg, ToastAndroid.SHORT);\n    } else {\n      Alert.alert(msg);\n      return;\n    }\n  }\n\n  var handleVisibleLegend = function handleVisibleLegend() {\n    if (!visibleBookingLegend) {\n      setVisibleStraightSplit(false);\n      setVisibleBookingTime(false);\n    }\n\n    setVisibleBookingLegend(!visibleBookingLegend);\n  };\n\n  var handleVisibleBookingTime = function handleVisibleBookingTime() {\n    if (!visibleBookingTime) {\n      setVisibleBookingLegend(false);\n      setValueCheckedLegend(emptyPicker);\n      setValueRemark(\"\");\n    }\n\n    setVisibleBookingTime(!visibleBookingTime);\n  };\n\n  var handleVisibleStraightSplit = function handleVisibleStraightSplit() {\n    if (selectedTime.length > 0) {\n      setVisibleStraightSplit(!visibleStraightSplit);\n    }\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.colorText,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, moment(data.WorkingDate).format(\"dddd, DD MMMM yyyy\")), React.createElement(CheckBox, {\n    onPress: function onPress() {\n      return isSaved && data.LegendId !== null ? notifyMessage(\"Legend has been selected, time cannot be changed at this time!\") : checkOT();\n    },\n    title: \"OT\",\n    checked: isOT,\n    checkedColor: \"#988050\",\n    uncheckedColor: colors.colorText,\n    containerStyle: {\n      backgroundColor: \"transparent\",\n      borderWidth: 0\n    },\n    textStyle: {\n      color: colors.colorText,\n      fontWeight: \"500\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.containerSchedule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.itemSchedule, {\n      marginBottom: 0\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textItemReport,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, \"Time\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      isSaved && data.LegendId !== null ? notifyMessage(\"Legend has been selected, time cannot be changed at this time!\") : handleVisibleBookingTime();\n    },\n    style: {\n      position: \"absolute\",\n      right: 0,\n      top: 9\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, React.createElement(Ionicons, {\n    name: \"caret-down\",\n    size: 20,\n    color: colors.colorLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }))), visibleBookingTime ? React.createElement(View, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, React.createElement(TimePickerStaff, {\n    data: selectedTime,\n    onChangeTime: function onChangeTime(times) {\n      return onSelectionsChangeTime(times);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  })) : React.createElement(View, {\n    style: {\n      paddingBottom: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: [styles.itemSchedule],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  }, \"Straight shift and Split shift\")), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: [styles.textInfoStaff, {\n      marginRight: 15\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 33\n    }\n  }, valueTimeSelected.length > 0 ? get12HourTime(valueTimeSelected[0].from) : \"\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  }, valueTimeSelected.length > 0 ? get12HourTime(valueTimeSelected[0].to) : \"\")), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: [styles.textInfoStaff, {\n      marginRight: 15\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }, valueTimeSelected.length > 1 ? get12HourTime(valueTimeSelected[valueTimeSelected.length - 1].from) : \"\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, valueTimeSelected.length > 1 ? get12HourTime(valueTimeSelected[valueTimeSelected.length - 1].to) : \"\"))))), React.createElement(View, {\n    style: styles.containerSchedule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.titleSwitchButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.titleYellow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, \"STRAIGHT SHIFT AND SPLIT SHIFT\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#303030\",\n      true: \"#DAB451\"\n    },\n    thumbColor: \"#fff\",\n    onValueChange: function onValueChange() {\n      return handleVisibleStraightSplit();\n    },\n    value: visibleStraightSplit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  })), visibleStraightSplit ? React.createElement(View, {\n    style: [styles.containerPickContent],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, React.createElement(TimePickerStaff, {\n    data: selectedTimeSplit,\n    onChangeTime: function onChangeTime(times) {\n      return onSelectionsChangeTimeSplit(times);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  })) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.containerSchedule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.titleSwitchButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.titleYellow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 21\n    }\n  }, \"LEGEND\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#303030\",\n      true: \"#DAB451\"\n    },\n    thumbColor: \"#fff\",\n    onValueChange: function onValueChange() {\n      return handleVisibleLegend();\n    },\n    value: visibleBookingLegend,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  })), visibleBookingLegend ? React.createElement(View, {\n    style: styles.containerPickContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      height: 128\n    },\n    persistentScrollbar: true,\n    nestedScrollEnabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, dataLegend.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 37\n      }\n    }, React.createElement(Select, {\n      item: item,\n      isCheck: valueCheckedLegend.id === item.id,\n      onChecked: function onChecked(value) {\n        return onSelectionsChangeLegend(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 41\n      }\n    }));\n  }))) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  })), valueCheckedLegend.id !== 0 && visibleBookingLegend && React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: [styles.textItemReport, {\n      flex: 1\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 21\n    }\n  }, \"Remark\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setValueRemark(text);\n    },\n    value: valueRemark,\n    style: {\n      backgroundColor: colors.grayLight,\n      flex: 4,\n      height: 40,\n      borderRadius: 4,\n      paddingHorizontal: 10,\n      color: colors.colorText\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      backgroundColor: colors.backgroundTab,\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }), isLoading && React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 27\n    }\n  }));\n};\n\nexport default itemStaffFullTime;\nvar styles = StyleSheet.create({\n  titleSwitchButton: {\n    flexDirection: 'row',\n    paddingVertical: 6,\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  titleYellow: {\n    fontWeight: '500',\n    fontSize: 14,\n    color: colors.mainColor\n  },\n  containerPickContent: {\n    borderTopWidth: 0.5,\n    borderTopColor: colors.colorLine\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  itemReport: {\n    paddingVertical: 10,\n    borderBottomWidth: 0.5,\n    borderBottomColor: colors.colorLine\n  },\n  textItemReport: {\n    color: colors.colorText,\n    fontSize: 14,\n    fontWeight: \"500\"\n  },\n  textInfoStaff: {\n    color: colors.colorText,\n    fontSize: 14,\n    fontWeight: \"400\"\n  },\n  itemInput: {\n    height: 40,\n    borderRadius: 4,\n    backgroundColor: \"#303030\",\n    paddingHorizontal: 11,\n    color: colors.colorText\n  },\n  buttonForm: {\n    flex: 1,\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  containerSchedule: {\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    marginBottom: 10,\n    paddingHorizontal: 15\n  },\n  itemSchedule: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 41,\n    marginBottom: 15,\n    borderBottomWidth: 0.5,\n    borderBottomColor: colors.colorLine\n  },\n  dot: {\n    width: 4,\n    height: 4,\n    borderRadius: 4,\n    backgroundColor: colors.colorText,\n    marginHorizontal: 9\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/StaffManagement/ListOfStaff/items/itemFullTimev2.tsx"],"names":["React","useState","useEffect","CheckBox","colors","Ionicons","Select","Loading","TimePickerStaff","useSelector","moment","get12HourTime","emptyPicker","id","code","name","itemStaffFullTime","props","workingTimes","state","staff","legends","isSaved","data","index","onChangeTime","onChangeOT","isLoading","setIsLoading","isOT","setIsOT","visibleBookingTime","setVisibleBookingTime","selectedTime","setSelectedTime","selectedTimeSplit","setSelectedTimeSplit","visibleBookingLegend","setVisibleBookingLegend","visibleStraightSplit","setVisibleStraightSplit","dataLegend","setDataLegend","valueCheckedLegend","setValueCheckedLegend","valueRemark","setValueRemark","timeModel","setTimeModel","valueTimeSelected","setValueTimeSelected","onSelectionsChangeTime","times","onSelectionsChangeTimeSplit","onSelectionsChangeLegend","checkOT","WorkingDate","time","timeSplit","legend","remark","WorkingWeekTime","timeId","timeSplitId","length","OT","LegendId","find","item","Remark","handleVisibleLegend","items","map","WorkingWeekTimeId","includes","push","label","timeRange","value","handleTime","timesPick","selected","selectedSplit","sort","a","b","arr","temp","i","slice","result","from","split","to","from2","to2","notifyMessage","msg","Platform","OS","ToastAndroid","show","SHORT","Alert","alert","handleVisibleBookingTime","handleVisibleStraightSplit","flexDirection","alignItems","color","colorText","marginRight","format","backgroundColor","borderWidth","fontWeight","styles","containerSchedule","itemSchedule","marginBottom","textItemReport","position","right","top","colorLine","paddingBottom","textInfoStaff","justifyContent","flex","titleSwitchButton","titleYellow","false","true","containerPickContent","height","text","grayLight","borderRadius","paddingHorizontal","backgroundTab","StyleSheet","create","paddingVertical","fontSize","mainColor","borderTopWidth","borderTopColor","line","itemReport","borderBottomWidth","borderBottomColor","itemInput","buttonForm","dot","width","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, Text, ScrollView, TouchableOpacity, TextInput, ToastAndroid, Platform, Alert, Switch } from \"react-native\";\r\nimport { CheckBox } from \"react-native-elements\";\r\nimport { colors } from \"../../../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport MultiSelect from \"../../../../../../components/MultiSelect\";\r\nimport Select from \"../../../../../../components/select\";\r\nimport { IPicker, IWorkingScheduleRequest } from \"../../../../../../models/staffModel\";\r\nimport Loading from \"../../../../../../components/dialogs/Loading\";\r\nimport TimePickerStaff from \"../../../../../../components/TimePickerStaff\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../../../redux/reducers\";\r\nimport moment from \"moment\";\r\nimport { get12HourTime } from \"../../../../../../components/generalConvert/conVertMonDay\";\r\ninterface Props {\r\n    isSaved: boolean;\r\n    data: IWorkingScheduleRequest;\r\n    index: number;\r\n    onChangeTime: any;\r\n    onChangeOT: any\r\n}\r\n\r\nconst emptyPicker = {\r\n    id: 0,\r\n    code: \"\",\r\n    name: \"\",\r\n};\r\nconst itemStaffFullTime = (props: Props) => {\r\n    const workingTimes = useSelector((state: RootState) => state.staff.workingTimes);\r\n    const legends = useSelector((state: RootState) => state.staff.legends);\r\n\r\n    const { isSaved, data, index, onChangeTime, onChangeOT } = props;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [isOT, setIsOT] = useState(false);\r\n    const [visibleBookingTime, setVisibleBookingTime] = useState(false);\r\n    const [selectedTime, setSelectedTime] = useState<number[]>([]); // ca chính\r\n    const [selectedTimeSplit, setSelectedTimeSplit] = useState<number[]>([]); // ca gãy\r\n    const [visibleBookingLegend, setVisibleBookingLegend] = useState(false);\r\n    const [visibleStraightSplit, setVisibleStraightSplit] = useState(false);\r\n    const [dataLegend, setDataLegend] = useState<IPicker[]>([]);\r\n    const [valueCheckedLegend, setValueCheckedLegend] = useState<IPicker>(emptyPicker);\r\n    const [valueRemark, setValueRemark] = useState(\"\");\r\n    const [timeModel, setTimeModel] = useState([]);\r\n\r\n    const [valueTimeSelected, setValueTimeSelected] = useState([]);\r\n\r\n    const onSelectionsChangeTime = (times: number[]) => {\r\n        setVisibleBookingLegend(false)\r\n        setValueCheckedLegend(emptyPicker);\r\n        setValueRemark(\"\");\r\n        setSelectedTime(times);\r\n    };\r\n    const onSelectionsChangeTimeSplit = (times: number[]) => {\r\n        setVisibleBookingLegend(false)\r\n        setValueCheckedLegend(emptyPicker);\r\n        setValueRemark(\"\");\r\n        setSelectedTimeSplit(times);\r\n\r\n    };\r\n    const onSelectionsChangeLegend = (data: IPicker) => {\r\n        setSelectedTime([]);\r\n        setSelectedTimeSplit([]);\r\n        if (valueCheckedLegend.id === data.id) {\r\n            setValueCheckedLegend(emptyPicker);\r\n        } else setValueCheckedLegend(data);\r\n    };\r\n    const checkOT = () => {\r\n        setIsOT(!isOT);\r\n        if (!isOT) {\r\n            setVisibleBookingTime(true);\r\n        }\r\n        if (isSaved && isOT) {\r\n            setSelectedTime([]);\r\n            onChangeOT(data.WorkingDate, {\r\n                time: [],\r\n                timeSplit: [],\r\n                legend: valueCheckedLegend.id,\r\n                remark: valueRemark,\r\n                isOT,\r\n            })\r\n        }\r\n    };\r\n    useEffect(() => { // fill cái time đã có\r\n        if (data.WorkingWeekTime !== null) {\r\n            setSelectedTime(data.WorkingWeekTime[0].timeId);\r\n            setSelectedTimeSplit(data.WorkingWeekTime[0].timeSplitId);\r\n            if (data.WorkingWeekTime[0].timeSplitId.length > 0) {\r\n                setVisibleStraightSplit(true)\r\n            }\r\n            setIsOT(!!data.WorkingWeekTime[0].OT);\r\n        }\r\n        if (data.LegendId !== null) {\r\n            setValueCheckedLegend(legends.find(item => item.id == data.LegendId));\r\n            if (data.Remark !== null) {\r\n                setValueRemark(data.Remark);\r\n                handleVisibleLegend()\r\n            }\r\n        }\r\n    }, []);\r\n    useEffect(() => { // init các legend\r\n        if (legends.length > 0) {\r\n            setDataLegend(legends);\r\n        }\r\n    }, [legends]);\r\n    useEffect(() => {\r\n        // let uniq = [...new Set([...selectedTime,...selectedTimeSplit])];\r\n        onChangeTime(data.WorkingDate, {\r\n            time: selectedTime,\r\n            timeSplit: selectedTimeSplit,\r\n            legend: valueCheckedLegend.id,\r\n            remark: valueRemark,\r\n            isOT,\r\n        }, isSaved);\r\n    }, [valueCheckedLegend, selectedTime, selectedTimeSplit, valueRemark, isOT]);\r\n    useEffect(() => {\r\n        if (workingTimes.length > 0) {\r\n            let items = [];\r\n            workingTimes.map(item => {\r\n                if (isSaved && data.WorkingWeekTime !== null) {\r\n                    if (!data.WorkingWeekTime[0].WorkingWeekTimeId.includes(item.id)) {\r\n                        items.push({ label: item.timeRange, value: item.id });\r\n                    }\r\n                } else {\r\n                    items.push({ label: item.timeRange, value: item.id });\r\n                }\r\n            });\r\n            setTimeModel(items);\r\n        }\r\n    }, [workingTimes]);\r\n\r\n    const handleTime = () => {\r\n        let timesPick = [];\r\n        let selected = [...selectedTime];\r\n        let selectedSplit = [...selectedTimeSplit];\r\n        if (selectedSplit.length == 0) {\r\n            selected.sort(function (a, b) {\r\n                return a - b;\r\n            });\r\n            selected.map(item => {\r\n                timesPick.push(workingTimes.find(time => time.id === item));\r\n            });\r\n            let arr = [];\r\n            let temp = 0;\r\n            for (let i = 0; i < timesPick.length; i++) {\r\n                if (selected[i] + 1 !== selected[i + 1]) {\r\n                    arr.push(timesPick.slice(temp, i + 1));\r\n                    temp = i + 1;\r\n                }\r\n                if (selected[i] === selected[selected.length - 1]) {\r\n                    arr.push(timesPick.slice(temp, i));\r\n                }\r\n            }\r\n            let result = [];\r\n            arr.map(item => {\r\n                if (item.length > 0) {\r\n                    result.push({ from: item[0].timeRange.split(\" \")[0], to: item[item.length - 1].timeRange.split(\" \")[2] });\r\n                }\r\n            });\r\n            setValueTimeSelected(result);\r\n        } else {\r\n            let result = []\r\n            if (selectedTime.length > 0) {\r\n                let from = workingTimes.find(item => item.id === selectedTime[0]).timeRange.slice(0, 5)\r\n                let to = workingTimes.find(item => item.id === selectedTime[selectedTime.length - 1]).timeRange.slice(8, 13)\r\n                result.push({ from: from, to: to })\r\n            }\r\n            if (selectedTimeSplit.length > 0) {\r\n                let from2 = workingTimes.find(item => item.id === selectedTimeSplit[0]).timeRange.slice(0, 5)\r\n                let to2 = workingTimes.find(item => item.id === selectedTimeSplit[selectedTimeSplit.length - 1]).timeRange.slice(8, 13)\r\n                result.push({ from: from2, to: to2 })\r\n            }\r\n\r\n            setValueTimeSelected(result);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleTime();\r\n    }, [selectedTime]);\r\n\r\n    function notifyMessage(msg: string) {\r\n        if (Platform.OS === \"android\") {\r\n            ToastAndroid.show(msg, ToastAndroid.SHORT);\r\n        } else {\r\n            Alert.alert(msg)\r\n            return;\r\n        }\r\n    }\r\n    const handleVisibleLegend = () => {\r\n        if (!visibleBookingLegend) {\r\n            setVisibleStraightSplit(false)\r\n            setVisibleBookingTime(false)\r\n        }\r\n        setVisibleBookingLegend(!visibleBookingLegend)\r\n    }\r\n    const handleVisibleBookingTime = () => {\r\n        if (!visibleBookingTime) {\r\n            setVisibleBookingLegend(false)\r\n            setValueCheckedLegend(emptyPicker);\r\n            setValueRemark(\"\");\r\n        }\r\n        setVisibleBookingTime(!visibleBookingTime);\r\n    }\r\n    const handleVisibleStraightSplit = () => {\r\n        if (selectedTime.length > 0) {\r\n            setVisibleStraightSplit(!visibleStraightSplit)\r\n        }\r\n    }\r\n    return (\r\n        <View>\r\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                <Text style={{ color: colors.colorText, marginRight: 10 }}>{moment(data.WorkingDate).format(\"dddd, DD MMMM yyyy\")}</Text>\r\n                <CheckBox\r\n                    onPress={() =>\r\n                        isSaved && data.LegendId !== null\r\n                            ? notifyMessage(\"Legend has been selected, time cannot be changed at this time!\")\r\n                            : checkOT()\r\n                    }\r\n                    title=\"OT\"\r\n                    checked={isOT}\r\n                    checkedColor={\"#988050\"}\r\n                    uncheckedColor={colors.colorText}\r\n                    containerStyle={{\r\n                        backgroundColor: \"transparent\",\r\n                        borderWidth: 0,\r\n                    }}\r\n                    textStyle={{ color: colors.colorText, fontWeight: \"500\" }}\r\n                />\r\n            </View>\r\n            <View style={styles.containerSchedule}>\r\n                <View style={[styles.itemSchedule, { marginBottom: 0 }]}>\r\n                    <Text style={styles.textItemReport}>Time</Text>\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            isSaved && data.LegendId !== null\r\n                                ? notifyMessage(\"Legend has been selected, time cannot be changed at this time!\")\r\n                                : handleVisibleBookingTime();\r\n                        }}\r\n                        style={{ position: \"absolute\", right: 0, top: 9 }}\r\n                    >\r\n                        <Ionicons name=\"caret-down\" size={20} color={colors.colorLine} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {visibleBookingTime ? (\r\n                    <View style={{}}>\r\n                        <TimePickerStaff data={selectedTime} onChangeTime={(times) => onSelectionsChangeTime(times)}></TimePickerStaff>\r\n                        {/* <MultiSelect items={timeModel} onChecked={items => onSelectionsChange(items)} value={selectedTime}></MultiSelect> */}\r\n                    </View>\r\n                ) : (\r\n                    <View style={{ paddingBottom: 16 }}>\r\n                        <View style={[styles.itemSchedule]}>\r\n                            <Text style={styles.textInfoStaff}>Straight shift and Split shift</Text>\r\n                        </View>\r\n                        <View\r\n                            style={{\r\n                                flexDirection: \"row\",\r\n                                justifyContent: \"space-between\",\r\n                            }}\r\n                        >\r\n                            <View\r\n                                style={{\r\n                                    flexDirection: \"row\",\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text style={[styles.textInfoStaff, { marginRight: 15 }]}>\r\n                                    {valueTimeSelected.length > 0 ? get12HourTime(valueTimeSelected[0].from) : \"\"}\r\n                                </Text>\r\n                                <Text style={styles.textInfoStaff}>\r\n                                    {valueTimeSelected.length > 0 ? get12HourTime(valueTimeSelected[0].to) : \"\"}\r\n                                </Text>\r\n                            </View>\r\n                            <View\r\n                                style={{\r\n                                    flexDirection: \"row\",\r\n                                    flex: 1,\r\n                                    justifyContent: \"flex-end\",\r\n                                }}\r\n                            >\r\n                                <Text style={[styles.textInfoStaff, { marginRight: 15 }]}>\r\n                                    {valueTimeSelected.length > 1 ? get12HourTime(valueTimeSelected[valueTimeSelected.length - 1].from) : \"\"}\r\n                                </Text>\r\n                                <Text style={styles.textInfoStaff}>\r\n                                    {valueTimeSelected.length > 1 ? get12HourTime(valueTimeSelected[valueTimeSelected.length - 1].to) : \"\"}\r\n                                </Text>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                )}\r\n            </View>\r\n\r\n            <View style={styles.containerSchedule}>\r\n                <View style={styles.titleSwitchButton}>\r\n                    <Text style={styles.titleYellow}>STRAIGHT SHIFT AND SPLIT SHIFT</Text>\r\n                    <Switch\r\n                        trackColor={{ false: \"#303030\", true: \"#DAB451\" }}\r\n                        thumbColor={\"#fff\"}\r\n                        onValueChange={() => handleVisibleStraightSplit()}\r\n                        value={visibleStraightSplit}\r\n                    />\r\n                </View>\r\n\r\n                {visibleStraightSplit ? (\r\n                    <View style={[styles.containerPickContent,]}>\r\n                        <TimePickerStaff data={selectedTimeSplit} onChangeTime={(times) => onSelectionsChangeTimeSplit(times)}></TimePickerStaff>\r\n                    </View>\r\n                ) : (\r\n                    <View></View>\r\n                )}\r\n            </View>\r\n            <View style={styles.containerSchedule}>\r\n                {/* <View style={styles.itemSchedule}>\r\n                <Text style={styles.textItemReport}>Legend</Text>\r\n                <TouchableOpacity\r\n                    onPress={() => {\r\n                    isSaved ? notifyMessage(\"Legend cannot be changed at this time!\") : setVisibleBookingLegend(!visibleBookingLegend);\r\n                    }}\r\n                    style={{ position: \"absolute\", right: 0, top: 9 }}\r\n                >\r\n                    <Ionicons name=\"caret-down\" size={20} color={colors.colorLine} />\r\n                </TouchableOpacity>\r\n                </View> */}\r\n                <View style={styles.titleSwitchButton}>\r\n                    <Text style={styles.titleYellow}>LEGEND</Text>\r\n                    <Switch\r\n                        trackColor={{ false: \"#303030\", true: \"#DAB451\" }}\r\n                        thumbColor={\"#fff\"}\r\n                        onValueChange={() => handleVisibleLegend()}\r\n                        value={visibleBookingLegend}\r\n                    />\r\n                </View>\r\n\r\n                {visibleBookingLegend ? (\r\n                    <View style={styles.containerPickContent}>\r\n                        <ScrollView style={{ height: 128 }} persistentScrollbar={true} nestedScrollEnabled={true}>\r\n                            {dataLegend.map((item, index) => {\r\n                                return (\r\n                                    <View key={index}>\r\n                                        <Select\r\n                                            item={item}\r\n                                            isCheck={valueCheckedLegend.id === item.id}\r\n                                            onChecked={value => onSelectionsChangeLegend(value)}\r\n                                        ></Select>\r\n                                    </View>\r\n                                );\r\n                            })}\r\n                        </ScrollView>\r\n                    </View>\r\n                ) : (\r\n                    <View>\r\n                        {/* {valueCheckedLegend.id !== 0 && (\r\n                            <View\r\n                                style={{\r\n                                    flexDirection: \"row\",\r\n                                    alignItems: \"center\",\r\n                                    marginBottom: 7,\r\n                                }}\r\n                            >\r\n                                <View style={styles.dot}></View>\r\n                                <Text style={styles.textInfoStaff}>{`${valueCheckedLegend.code} - ${valueCheckedLegend.name}`}</Text>\r\n                            </View>\r\n                        )}\r\n\r\n                        {valueRemark !== \"\" && (\r\n                            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                                <View style={styles.dot}></View>\r\n                                <Text style={styles.textInfoStaff}>Remark: {valueRemark}</Text>\r\n                            </View>\r\n                        )} */}\r\n                    </View>\r\n                )}\r\n            </View>\r\n            {valueCheckedLegend.id !== 0 && visibleBookingLegend && (\r\n                <View\r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        marginBottom: 10,\r\n                    }}\r\n                >\r\n                    <Text style={[styles.textItemReport, { flex: 1 }]}>Remark</Text>\r\n                    <TextInput\r\n                        onChangeText={text => setValueRemark(text)}\r\n                        value={valueRemark}\r\n                        style={{\r\n                            backgroundColor: colors.grayLight,\r\n                            flex: 4,\r\n                            height: 40,\r\n                            borderRadius: 4,\r\n                            paddingHorizontal: 10,\r\n                            color: colors.colorText,\r\n                        }}\r\n                    ></TextInput>\r\n                </View>\r\n            )}\r\n\r\n            <View style={{ backgroundColor: colors.backgroundTab, height: 10 }}></View>\r\n            {isLoading && <Loading />}\r\n        </View>\r\n    );\r\n};\r\nexport default itemStaffFullTime;\r\n\r\nconst styles = StyleSheet.create({\r\n    titleSwitchButton: {\r\n        flexDirection: 'row',\r\n        paddingVertical: 6,\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    titleYellow: {\r\n        fontWeight: '500',\r\n        fontSize: 14,\r\n        color: colors.mainColor\r\n    },\r\n    containerPickContent: {\r\n\r\n        borderTopWidth: 0.5,\r\n        borderTopColor: colors.colorLine,\r\n    },\r\n    line: {\r\n        height: 10,\r\n        backgroundColor: colors.backgroundTab,\r\n    },\r\n    itemReport: {\r\n        paddingVertical: 10,\r\n        borderBottomWidth: 0.5,\r\n        borderBottomColor: colors.colorLine,\r\n    },\r\n    textItemReport: {\r\n        color: colors.colorText,\r\n        fontSize: 14,\r\n        fontWeight: \"500\",\r\n    },\r\n    textInfoStaff: {\r\n        color: colors.colorText,\r\n        fontSize: 14,\r\n        fontWeight: \"400\",\r\n    },\r\n    itemInput: {\r\n        height: 40,\r\n        borderRadius: 4,\r\n        backgroundColor: \"#303030\",\r\n        paddingHorizontal: 11,\r\n        color: colors.colorText,\r\n    },\r\n    buttonForm: {\r\n        flex: 1,\r\n        height: 36,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: 4,\r\n    },\r\n    containerSchedule: {\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4,\r\n        marginBottom: 10,\r\n        paddingHorizontal: 15,\r\n    },\r\n    itemSchedule: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: 41,\r\n        marginBottom: 15,\r\n        borderBottomWidth: 0.5,\r\n        borderBottomColor: colors.colorLine,\r\n    },\r\n    dot: {\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: 4,\r\n        backgroundColor: colors.colorText,\r\n        marginHorizontal: 9,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}