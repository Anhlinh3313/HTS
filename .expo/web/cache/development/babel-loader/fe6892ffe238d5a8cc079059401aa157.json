{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\StaffManagement\\\\Reports\\\\PartTimeAvailability.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { colors } from \"../../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ItemServiceTeam from \"./items/itemServiceTeam\";\nimport ItemPartTimeAvailability from \"./items/itemPartTimeAvailability\";\nimport ModalPicker from \"../../../../../components/management/ModalPicker\";\nimport { StaffService } from \"../../../../../netWorking/staffService\";\nimport Loading from \"../../../../../components/dialogs/Loading\";\nimport { initDataPicker, NO_AVAILABILITY } from \"../../../../../models/staffModel\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nvar PartTimeAvailability = function PartTimeAvailability(props) {\n  var dispatch = useDispatch();\n  var reports = useSelector(function (state) {\n    return state.reports;\n  });\n  var staffs = useSelector(function (state) {\n    return state.staff.part_time_staffs;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPickerTeam = _useState4[0],\n      setShowPickerTeam = _useState4[1];\n\n  var _useState5 = useState(initDataPicker),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valueTeam = _useState6[0],\n      setValueTeam = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      recordAreas = _useState8[0],\n      setRecordAreas = _useState8[1];\n\n  var loadAllRecordArea = function loadAllRecordArea() {\n    var res, listData;\n    return _regeneratorRuntime.async(function loadAllRecordArea$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(StaffService.getAllRecordArea());\n\n          case 2:\n            res = _context.sent;\n\n            if (res.isSuccess == 1 && res.data) {\n              listData = [];\n              res.data.map(function (item) {\n                if (item.isEnabled) {\n                  listData.push({\n                    id: item.id,\n                    code: item.code,\n                    name: item.name\n                  });\n                }\n              });\n              setRecordAreas(listData);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadStaffInfo = function loadStaffInfo() {\n    var res;\n    return _regeneratorRuntime.async(function loadStaffInfo$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsLoading(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(StaffService.getFreeStaff(reports.fromDate, reports.endDate, valueTeam.id));\n\n          case 3:\n            res = _context2.sent;\n\n            if (res.isSuccess == 1 && res.data) {\n              res.data.forEach(function (staff) {\n                staff.staffFreeTimeInfo.forEach(function (element) {\n                  element.staffFreeTimeList = element.staffFreeTimeList.filter(function (_item) {\n                    return _item.timeRange !== null;\n                  });\n                });\n              });\n              dispatch({\n                type: \"GET_STAFF_PART_TIME\",\n                payload: res.data\n              });\n            }\n\n            setIsLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadAllRecordArea();\n  }, []);\n  useEffect(function () {\n    loadStaffInfo();\n  }, [valueTeam, reports.fromDate, reports.endDate]);\n  useEffect(function () {\n    if (recordAreas.length > 0) {\n      setValueTeam(recordAreas[0]);\n    }\n  }, [recordAreas]);\n\n  var onConfirmStaff = function onConfirmStaff() {\n    var reqArr, rangeInfos, infos;\n    return _regeneratorRuntime.async(function onConfirmStaff$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setIsLoading(true);\n            reqArr = [];\n            staffs.forEach(function (staff) {\n              var days = [];\n              staff.staffFreeTimeInfo.forEach(function (item) {\n                var times = [];\n                item.staffFreeTimeList.forEach(function (time) {\n                  if (time.managementAgree) {\n                    times.push(time.workingTimeId);\n                  }\n\n                  if (time.workingTimeId === NO_AVAILABILITY) {\n                    times.push(time.workingTimeId);\n                  }\n                });\n\n                if (times.length > 0) {\n                  days.push({\n                    Rank: item.rank,\n                    FreeDate: item.freeDate.slice(0, 10),\n                    WorkingTimeId: times\n                  });\n                }\n              });\n\n              if (days.length > 0) {\n                reqArr.push({\n                  StaffId: staff.staffId,\n                  StaffFreeTimesList: days\n                });\n              }\n            });\n            rangeInfos = reqArr.map(function (t) {\n              return StaffService.updateStaffFreeTime(t.StaffId, t.StaffFreeTimesList);\n            });\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(Promise.all(rangeInfos));\n\n          case 6:\n            infos = _context3.sent;\n            setIsLoading(false);\n\n            if (infos.findIndex(function (item) {\n              return item.isSuccess === 1;\n            }) !== -1) {\n              props.props.navigation.navigate(\"Reports\", {\n                title: \"BACK OFFICE - STAFF MANAGEMENT\",\n                id: 6\n              });\n            }\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 15,\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.titleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.textTitleHeader, {\n      textAlign: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"PART-TIME AVAILABILITY\"))), React.createElement(View, {\n    style: {\n      borderRadius: 4,\n      marginTop: 6,\n      backgroundColor: colors.grayLight\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.radius_top, {\n      backgroundColor: \"#878787\",\n      padding: 15,\n      justifyContent: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.textTitleHeader, {\n      alignSelf: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, valueTeam.name.toUpperCase() + \" TEAM\"), React.createElement(TouchableOpacity, {\n    style: {\n      position: \"absolute\",\n      alignSelf: \"flex-end\",\n      right: 15\n    },\n    onPress: function onPress() {\n      setShowPickerTeam(!showPickerTeam);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }))), staffs.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, React.createElement(ItemServiceTeam, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, React.createElement(ItemPartTimeAvailability, {\n      data: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })));\n  })), React.createElement(View, {\n    style: {\n      padding: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onConfirmStaff();\n    },\n    style: {\n      width: 130,\n      alignSelf: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    style: styles.buttonSend,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Confirm\")))), React.createElement(ModalPicker, {\n    visible: showPickerTeam,\n    data: recordAreas,\n    onRequestClose: function onRequestClose() {\n      return setShowPickerTeam(false);\n    },\n    onChange: function onChange(item) {\n      setValueTeam(item);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), isLoading && React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default PartTimeAvailability;\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 15\n  },\n  row_between: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  center: {\n    paddingVertical: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleHeader: {\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.colorLine\n  },\n  textTitleHeader: {\n    color: colors.colorText,\n    fontWeight: \"500\",\n    fontSize: 14\n  },\n  textGray: {\n    color: colors.gray,\n    fontWeight: \"400\",\n    fontSize: 14\n  },\n  radius_top: {\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4\n  },\n  textTitleHeader400: {\n    color: colors.colorText,\n    fontWeight: \"400\",\n    fontSize: 14\n  },\n  textButton: {\n    fontSize: 16,\n    color: colors.colorText\n  },\n  buttonSend: {\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  viewTitleFromTo: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 5,\n    backgroundColor: \"#878787\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4\n  },\n  viewFromTo: {\n    flexDirection: \"row\",\n    paddingHorizontal: 16,\n    justifyContent: \"space-between\",\n    paddingVertical: 10,\n    backgroundColor: \"#3C3B3B\"\n  },\n  staff: {\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    padding: 10,\n    marginBottom: 12\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/StaffManagement/Reports/PartTimeAvailability.tsx"],"names":["React","useState","useEffect","LinearGradient","colors","Ionicons","ItemServiceTeam","ItemPartTimeAvailability","ModalPicker","StaffService","Loading","initDataPicker","NO_AVAILABILITY","useSelector","useDispatch","PartTimeAvailability","props","dispatch","reports","state","staffs","staff","part_time_staffs","isLoading","setIsLoading","showPickerTeam","setShowPickerTeam","valueTeam","setValueTeam","recordAreas","setRecordAreas","loadAllRecordArea","getAllRecordArea","res","isSuccess","data","listData","map","item","isEnabled","push","id","code","name","loadStaffInfo","getFreeStaff","fromDate","endDate","forEach","staffFreeTimeInfo","element","staffFreeTimeList","filter","_item","timeRange","type","payload","length","onConfirmStaff","reqArr","days","times","time","managementAgree","workingTimeId","Rank","rank","FreeDate","freeDate","slice","WorkingTimeId","StaffId","staffId","StaffFreeTimesList","rangeInfos","t","updateStaffFreeTime","Promise","all","infos","findIndex","navigation","navigate","title","styles","container","paddingHorizontal","marginBottom","titleHeader","textTitleHeader","textAlign","borderRadius","marginTop","backgroundColor","grayLight","radius_top","padding","justifyContent","alignSelf","toUpperCase","position","right","index","width","buttonSend","textButton","StyleSheet","create","row_between","flexDirection","alignItems","center","paddingVertical","borderBottomWidth","borderBottomColor","colorLine","color","colorText","fontWeight","fontSize","textGray","gray","borderTopLeftRadius","borderTopRightRadius","textTitleHeader400","height","viewTitleFromTo","viewFromTo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { TabManageParamList } from \"../../../../../types\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { colors } from \"../../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport ItemServiceTeam from \"./items/itemServiceTeam\";\r\nimport ItemPartTimeAvailability from \"./items/itemPartTimeAvailability\";\r\nimport ModalPicker from \"../../../../../components/management/ModalPicker\";\r\nimport { StaffService } from \"../../../../../netWorking/staffService\";\r\nimport Loading from \"../../../../../components/dialogs/Loading\";\r\nimport { IPicker, initDataPicker, NO_AVAILABILITY } from \"../../../../../models/staffModel\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../../../../redux/reducers\";\r\nexport interface Props {\r\n  route: RouteProp<TabManageParamList, \"Reports\">;\r\n  navigation: StackNavigationProp<TabManageParamList>;\r\n}\r\nconst PartTimeAvailability = (props: { props: Props }) => {\r\n  const dispatch = useDispatch();\r\n  const reports = useSelector((state: RootState) => state.reports);\r\n  const staffs = useSelector((state: RootState) => state.staff.part_time_staffs);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [showPickerTeam, setShowPickerTeam] = useState(false);\r\n  const [valueTeam, setValueTeam] = useState<IPicker>(initDataPicker);\r\n\r\n  const [recordAreas, setRecordAreas] = useState<IPicker[]>([]);\r\n\r\n  const loadAllRecordArea = async () => {\r\n    const res = await StaffService.getAllRecordArea();\r\n    if (res.isSuccess == 1 && res.data) {\r\n      let listData = [];\r\n      res.data.map(item => {\r\n        if (item.isEnabled) {\r\n          listData.push({ id: item.id, code: item.code, name: item.name });\r\n        }\r\n      });\r\n      setRecordAreas(listData);\r\n    }\r\n  };\r\n  const loadStaffInfo = async () => {\r\n    setIsLoading(true);\r\n    const res = await StaffService.getFreeStaff(reports.fromDate, reports.endDate, valueTeam.id);\r\n    if (res.isSuccess == 1 && res.data) {\r\n      res.data.forEach(staff => {\r\n        staff.staffFreeTimeInfo.forEach(element => {\r\n          element.staffFreeTimeList = element.staffFreeTimeList.filter(_item => _item.timeRange !== null);\r\n        });\r\n      });\r\n      dispatch({ type: \"GET_STAFF_PART_TIME\", payload: res.data });\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    loadAllRecordArea();\r\n  }, []);\r\n  useEffect(() => {\r\n    loadStaffInfo();\r\n  }, [valueTeam, reports.fromDate, reports.endDate]);\r\n  useEffect(() => {\r\n    if (recordAreas.length > 0) {\r\n      setValueTeam(recordAreas[0]);\r\n    }\r\n  }, [recordAreas]);\r\n\r\n  const onConfirmStaff = async () => {\r\n    setIsLoading(true);\r\n    let reqArr = [];\r\n    // handle request value\r\n    staffs.forEach(staff => {\r\n      let days = [];\r\n      staff.staffFreeTimeInfo.forEach(item => {\r\n        let times = [];\r\n        item.staffFreeTimeList.forEach(time => {\r\n          if (time.managementAgree) {\r\n            times.push(time.workingTimeId);\r\n          }\r\n          if (time.workingTimeId === NO_AVAILABILITY) {\r\n            times.push(time.workingTimeId);\r\n          }\r\n        });\r\n        if (times.length > 0) {\r\n          days.push({\r\n            Rank: item.rank,\r\n            FreeDate: item.freeDate.slice(0, 10),\r\n            WorkingTimeId: times,\r\n          });\r\n        }\r\n      });\r\n      if (days.length > 0) {\r\n        reqArr.push({\r\n          StaffId: staff.staffId,\r\n          StaffFreeTimesList: days,\r\n        });\r\n      }\r\n    });\r\n    const rangeInfos = reqArr.map(t => StaffService.updateStaffFreeTime(t.StaffId, t.StaffFreeTimesList));\r\n    const infos = await Promise.all(rangeInfos);\r\n\r\n    setIsLoading(false);\r\n    if (infos.findIndex(item => item.isSuccess === 1) !== -1) {\r\n      props.props.navigation.navigate(\"Reports\", {\r\n        title: \"BACK OFFICE - STAFF MANAGEMENT\",\r\n        id: 6,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ paddingHorizontal: 15, marginBottom: 10 }}>\r\n        <View style={styles.titleHeader}>\r\n          <Text style={[styles.textTitleHeader, { textAlign: \"center\" }]}>PART-TIME AVAILABILITY</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View\r\n        style={{\r\n          borderRadius: 4,\r\n          marginTop: 6,\r\n          backgroundColor: colors.grayLight,\r\n        }}\r\n      >\r\n        <View\r\n          style={[\r\n            styles.radius_top,\r\n            {\r\n              backgroundColor: \"#878787\",\r\n              padding: 15,\r\n              justifyContent: \"center\",\r\n            },\r\n          ]}\r\n        >\r\n          <Text style={[styles.textTitleHeader, { alignSelf: \"center\" }]}>{`${valueTeam.name.toUpperCase()} TEAM`}</Text>\r\n          <TouchableOpacity\r\n            style={{ position: \"absolute\", alignSelf: \"flex-end\", right: 15 }}\r\n            onPress={() => {\r\n              setShowPickerTeam(!showPickerTeam);\r\n            }}\r\n          >\r\n            <Ionicons name=\"caret-down\" size={20} color=\"#fff\"></Ionicons>\r\n          </TouchableOpacity>\r\n        </View>\r\n        {staffs.map((item, index) => {\r\n          return (\r\n            <View key={index}>\r\n              <ItemServiceTeam item={item}>\r\n                <ItemPartTimeAvailability data={item}></ItemPartTimeAvailability>\r\n              </ItemServiceTeam>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n\r\n      <View style={{ padding: 30 }}>\r\n        <TouchableOpacity onPress={() => onConfirmStaff()} style={{ width: 130, alignSelf: \"center\" }}>\r\n          <LinearGradient style={styles.buttonSend} colors={[\"#DAB451\", \"#988050\"]}>\r\n            <Text style={styles.textButton}>Confirm</Text>\r\n          </LinearGradient>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <ModalPicker\r\n        visible={showPickerTeam}\r\n        data={recordAreas}\r\n        onRequestClose={() => setShowPickerTeam(false)}\r\n        onChange={item => {\r\n          setValueTeam(item);\r\n        }}\r\n      ></ModalPicker>\r\n      {isLoading && <Loading />}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PartTimeAvailability;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 15,\r\n  },\r\n  row_between: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  center: {\r\n    paddingVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  titleHeader: {\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.colorLine,\r\n  },\r\n  textTitleHeader: {\r\n    color: colors.colorText,\r\n    fontWeight: \"500\",\r\n    fontSize: 14,\r\n  },\r\n  textGray: {\r\n    color: colors.gray,\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n  radius_top: {\r\n    borderTopLeftRadius: 4,\r\n    borderTopRightRadius: 4,\r\n  },\r\n  textTitleHeader400: {\r\n    color: colors.colorText,\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n  textButton: {\r\n    fontSize: 16,\r\n    color: colors.colorText,\r\n  },\r\n  buttonSend: {\r\n    height: 36,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n\r\n  viewTitleFromTo: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 5,\r\n    backgroundColor: \"#878787\",\r\n    borderTopLeftRadius: 4,\r\n    borderTopRightRadius: 4,\r\n  },\r\n  viewFromTo: {\r\n    flexDirection: \"row\",\r\n    paddingHorizontal: 16,\r\n    justifyContent: \"space-between\",\r\n    paddingVertical: 10,\r\n    backgroundColor: \"#3C3B3B\",\r\n  },\r\n  staff: {\r\n    backgroundColor: colors.grayLight,\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    marginBottom: 12,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}