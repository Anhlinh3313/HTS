{"ast":null,"code":"import moment from \"moment\";\nexport function getMonday(d) {\n  var date = new Date(d);\n  var day = date.getDay(),\n      diff = date.getDate() - day + (day == 0 ? -6 : 1);\n  return new Date(date.setDate(diff));\n}\nexport function getDaysArray(start, end) {\n  for (var arr = [], dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\n    arr.push(moment(new Date(dt)).format(\"YYYY-MM-DD 00:00:00\"));\n  }\n\n  return arr;\n}\nexport function getDayInWeekArray(start, end) {\n  var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"DD\";\n\n  for (var arr = [], dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\n    arr.push(moment(new Date(dt)).format(format));\n  }\n\n  return arr;\n}\nexport function ValidateEmail(email) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n    return true;\n  }\n\n  return false;\n}\nexport function isPhoneNumber(number) {\n  return /([0])+([0-9]{9,10})\\b/.test(number);\n}\nexport function formatTime(time) {\n  var arrayTime = time.split(\" \");\n\n  if (arrayTime.length === 5) {\n    var times1 = arrayTime[0].split(\":\");\n    var times2 = arrayTime[3].split(\":\");\n\n    if (times1[0].length === 1) {\n      times1[0] = \"0\" + times1[0];\n    }\n\n    if (times1[1].length === 1) {\n      times1[1] = \"0\" + times1[1];\n    }\n\n    if (times2[0].length === 1) {\n      times2[0] = \"0\" + times2[0];\n    }\n\n    if (times2[1].length === 1) {\n      times2[1] = \"0\" + times2[1];\n    }\n\n    arrayTime[0] = times1.join(\":\");\n    arrayTime[3] = times2.join(\":\");\n  }\n\n  return arrayTime.join(\" \");\n}","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/components/management/utils.ts"],"names":["moment","getMonday","d","date","Date","day","getDay","diff","getDate","setDate","getDaysArray","start","end","arr","dt","push","format","getDayInWeekArray","ValidateEmail","email","test","isPhoneNumber","number","formatTime","time","arrayTime","split","length","times1","times2","join"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nexport function getMonday(d: Date | number) {\r\n  let date = new Date(d);\r\n  var day = date.getDay(),\r\n    diff = date.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\r\n  return new Date(date.setDate(diff));\r\n}\r\nexport function getDaysArray(start: Date, end: Date) {\r\n  for (var arr = [], dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\r\n    arr.push(moment(new Date(dt)).format(\"YYYY-MM-DD 00:00:00\"));\r\n  }\r\n  return arr;\r\n}\r\nexport function getDayInWeekArray(start: Date, end: Date, format: string = \"DD\") {\r\n  for (var arr = [], dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\r\n    arr.push(moment(new Date(dt)).format(format));\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function ValidateEmail(email: string) {\r\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nexport function isPhoneNumber(number: string) {\r\n  return /([0])+([0-9]{9,10})\\b/.test(number);\r\n}\r\nexport function formatTime(time: string) {\r\n  let arrayTime = time.split(\" \");\r\n  if (arrayTime.length === 5) {\r\n    let times1 = arrayTime[0].split(\":\");\r\n    let times2 = arrayTime[3].split(\":\");\r\n    if (times1[0].length === 1) {\r\n      times1[0] = `0${times1[0]}`;\r\n    }\r\n    if (times1[1].length === 1) {\r\n      times1[1] = `0${times1[1]}`;\r\n    }\r\n    if (times2[0].length === 1) {\r\n      times2[0] = `0${times2[0]}`;\r\n    }\r\n    if (times2[1].length === 1) {\r\n      times2[1] = `0${times2[1]}`;\r\n    }\r\n    arrayTime[0] = times1.join(\":\");\r\n    arrayTime[3] = times2.join(\":\");\r\n  }\r\n  return arrayTime.join(\" \");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}