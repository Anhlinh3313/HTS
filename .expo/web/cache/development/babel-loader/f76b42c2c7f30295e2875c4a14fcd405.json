{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\OnlineSystem\\\\OnlinePaymentMethod.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { VictoryBar, VictoryChart, VictoryPie, VictoryLine, VictoryScatter, VictoryAxis, VictoryLabel, VictoryGroup, VictoryVoronoiContainer } from \"victory-native\";\nimport { colors } from \"../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport DateTimePicker from \"../../../../components/datetimepicker\";\nimport { Icons } from \"../../../../assets\";\nimport PickerModel from \"../../../../components/picker/PickerModel\";\nimport DropDownPickerLine from \"../../../../components/DropDownPickerLine\";\nimport SvgUri from \"react-native-svg-uri\";\nimport { getAllPaymentType } from \"../../../../netWorking/paymentService\";\nimport { getTransactionDetail, getTransactionPayment } from \"../../../../netWorking/transactionService\";\nimport { Money } from \"../../../../components/generalConvert/conVertmunberToMoney\";\nimport DialogAwait from \"../../../../components/dialogs/Loading\";\n\nvar OnlinePaymentMethod = function OnlinePaymentMethod() {\n  var dimensions = Dimensions.get(\"window\");\n  var windowHeight = dimensions.height;\n  var windowWidth = dimensions.width;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var outletModel = [{\n    label: \"Spa\",\n    value: 1\n  }, {\n    label: \"Ola Restaurant\",\n    value: 2\n  }];\n\n  var _useState3 = useState(2),\n      _useState4 = _slicedToArray(_useState3, 2),\n      outlet = _useState4[0],\n      setOutlet = _useState4[1];\n\n  var onchangeOutlet = function onchangeOutlet(data) {\n    return _regeneratorRuntime.async(function onchangeOutlet$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setOutlet(data);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState5 = useState(moment(new Date().setDate(new Date().getDate() - 1)).format(\"YYYY-MM-DD\")),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fromDateTime = _useState6[0],\n      setFromDateTime = _useState6[1];\n\n  var _useState7 = useState(moment(new Date().setDate(new Date().getDate())).format(\"YYYY-MM-DD\")),\n      _useState8 = _slicedToArray(_useState7, 2),\n      endDateTime = _useState8[0],\n      setEndDateTime = _useState8[1];\n\n  var _useState9 = useState([\"Cash\", \"Credit Card\", \"E-Wallet\"]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      titleColumnChart = _useState10[0],\n      setTitleColumnChart = _useState10[1];\n\n  var _useState11 = useState([{\n    label: \"Payment Method - All\",\n    value: 0\n  }]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataTopPicker = _useState12[0],\n      setdataTopPicker = _useState12[1];\n\n  var _useState13 = useState(dataTopPicker[0]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      pickerTopValue = _useState14[0],\n      setPickerTopValue = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      pickerTopValueChild = _useState16[0],\n      setPickerTopValueChild = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      paymentList = _useState18[0],\n      setPaymentList = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      dataPaymentList = _useState20[0],\n      setDataPaymentList = _useState20[1];\n\n  var _useState21 = useState([25, 50, 75, 100]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      tickValueMoney = _useState22[0],\n      setTickValueMoney = _useState22[1];\n\n  var dataInitFieldSells = {\n    totalAmount: {\n      title: \"Total Amount\",\n      value: 0\n    },\n    averageTC: {\n      title: \"Average TC\",\n      value: 0\n    },\n    transaction: {\n      title: \"Transaction\",\n      value: 0\n    },\n    promotion: {\n      title: \"Promotion\",\n      value: 0\n    }\n  };\n\n  var _useState23 = useState(dataInitFieldSells),\n      _useState24 = _slicedToArray(_useState23, 2),\n      fieldSells = _useState24[0],\n      setFieldSells = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      dataChartPie = _useState26[0],\n      setDataChartPie = _useState26[1];\n\n  var _useState27 = useState({\n    totalAmount: {},\n    averageTC: {},\n    transaction: {},\n    promotion: {}\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      dataChartCol = _useState28[0],\n      setDataChartCol = _useState28[1];\n\n  var loadPaymentTypeList = function loadPaymentTypeList() {\n    var res, dataList, dataPaymentType;\n    return _regeneratorRuntime.async(function loadPaymentTypeList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setPaymentList([]);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getAllPaymentType());\n\n          case 3:\n            res = _context2.sent;\n            dataList = [];\n\n            if (res.isSuccess == 1 && res.data) {\n              dataList = res.data;\n              dataPaymentType = [{\n                label: \"Payment Method - All\",\n                value: 0\n              }];\n              dataList.map(function (item) {\n                if (item.isActive) {\n                  dataPaymentType.push({\n                    label: item.descript,\n                    value: item.methodNum\n                  });\n                }\n              });\n              setdataTopPicker(dataPaymentType);\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadPaymentList = function loadPaymentList() {\n    var res, dataList, detailTransacts, transacts;\n    return _regeneratorRuntime.async(function loadPaymentList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setIsLoading(true);\n            setPaymentList([]);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(getTransactionPayment(fromDateTime, endDateTime, null, null));\n\n          case 4:\n            res = _context3.sent;\n            dataList = [];\n\n            if (!(res.isSuccess == 1 && res.data)) {\n              _context3.next = 15;\n              break;\n            }\n\n            dataList = res.data;\n            detailTransacts = dataList.map(function (t) {\n              return loadTransactionDetail(t.transact);\n            });\n            _context3.next = 11;\n            return _regeneratorRuntime.awrap(Promise.all(detailTransacts));\n\n          case 11:\n            transacts = _context3.sent;\n            transacts = transacts.filter(function (x) {\n              return x !== undefined;\n            });\n            dataList.forEach(function (t) {\n              var transact = transacts.find(function (i) {\n                return i.transact === t.transact;\n              });\n\n              if (transact) {\n                t.prodType = transact.prodType;\n              }\n            });\n            setPaymentList(dataList);\n\n          case 15:\n            setIsLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadTransactionDetail = function loadTransactionDetail(transact) {\n    var res, dataList;\n    return _regeneratorRuntime.async(function loadTransactionDetail$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(getTransactionDetail(null, null, null, transact));\n\n          case 2:\n            res = _context4.sent;\n            dataList = [];\n\n            if (!(res.isSuccess == 1 && res.data)) {\n              _context4.next = 7;\n              break;\n            }\n\n            dataList = res.data;\n            return _context4.abrupt(\"return\", dataList[0]);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePicker = function handlePicker(value) {\n    var _dataChartPie = [];\n    setPickerTopValue(value);\n    var dataCash = [];\n    var _dataChartCol = dataChartCol;\n    var count = 0;\n    var countPromo = 0;\n    var countTotalAmount = {\n      morning: 0,\n      noon: 0,\n      afternoon: 0,\n      night: 0\n    };\n    var countTransaction = {\n      morning: 0,\n      noon: 0,\n      afternoon: 0,\n      night: 0\n    };\n    var countAverageTC = {\n      morning: 0,\n      noon: 0,\n      afternoon: 0,\n      night: 0\n    };\n    var countPromotion = {\n      morning: 0,\n      noon: 0,\n      afternoon: 0,\n      night: 0\n    };\n    var morning = moment(\"10:00am\", \"h:mma\");\n    var noon = moment(\"02:00pm\", \"h:mma\");\n    var afternoon = moment(\"05:00pm\", \"h:mma\");\n    var night = moment(\"23:59pm\", \"h:mma\");\n\n    if (value.value === 0) {\n      Object.keys(_dataChartCol).map(function (i) {\n        _dataChartCol[i] = dataTopPicker.reduce(function (obj, item) {\n          if (item.value !== 0) {\n            return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, item.label, 0));\n          }\n        }, _dataChartCol[i]);\n      });\n      var _titleColChart = [];\n      dataTopPicker.map(function (i) {\n        if (i.value !== 0) {\n          _titleColChart.push(i.label);\n        }\n      });\n      paymentList.map(function (item) {\n        dataCash.push(item);\n        count += item.tender;\n        dataTopPicker.map(function (i) {\n          if (i.value === item.methodNum) {\n            _dataChartCol.totalAmount[i.label] = _dataChartCol.totalAmount[i.label] + item.tender;\n            _dataChartCol.averageTC[i.label] = _dataChartCol.averageTC[i.label] + item.tender / paymentList.length;\n            _dataChartCol.transaction[i.label] = _dataChartCol.transaction[i.label] + 1;\n\n            if (item.prodType === 100) {\n              _dataChartCol.promotion[i.label] = _dataChartCol.promotion[i.label] + 1;\n            }\n          }\n        });\n      });\n      setTitleColumnChart(_titleColChart);\n    } else {\n      Object.keys(_dataChartCol).map(function (i) {\n        _dataChartCol[i] = _objectSpread(_objectSpread({}, {}), {}, _defineProperty({}, value.label, 0));\n      });\n      paymentList.map(function (item) {\n        if (item.methodNum === value.value) {\n          dataCash.push(item);\n          count += item.tender;\n          _dataChartCol.totalAmount[value.label] = _dataChartCol.totalAmount[value.label] + item.tender;\n          _dataChartCol.averageTC[value.label] = _dataChartCol.averageTC[value.label] + item.tender / paymentList.length;\n          _dataChartCol.transaction[value.label] = _dataChartCol.transaction[value.label] + 1;\n\n          if (item.prodType === 100) {\n            _dataChartCol.promotion[value.label] = _dataChartCol.promotion[value.label] + 1;\n          }\n        }\n      });\n      setTitleColumnChart([value.label]);\n    }\n\n    dataCash.map(function (item) {\n      var time = moment(moment(item.transDate).format(\"h:mma\"), \"h:mma\");\n\n      if (item.prodType === 100) {\n        countPromo++;\n      }\n\n      if (time.isBefore(morning)) {\n        countTotalAmount.morning = countTotalAmount.morning + item.tender;\n        countTransaction.morning = countTransaction.morning + 1;\n        countAverageTC.morning = countAverageTC.morning + item.tender / dataCash.length;\n\n        if (item.prodType === 100) {\n          countPromotion.morning = countPromotion.morning + 1;\n        }\n      }\n\n      if (time.isBetween(morning, noon)) {\n        countTotalAmount.noon = countTotalAmount.noon + item.tender;\n        countTransaction.noon = countTransaction.noon + 1;\n        countAverageTC.noon = countAverageTC.noon + item.tender / dataCash.length;\n\n        if (item.prodType === 100) {\n          countPromotion.noon = countPromotion.noon + 1;\n        }\n      }\n\n      if (time.isBetween(noon, afternoon)) {\n        countTotalAmount.afternoon = countTotalAmount.afternoon + item.tender;\n        countTransaction.afternoon = countTransaction.afternoon + 1;\n        countAverageTC.afternoon = countAverageTC.afternoon + item.tender / dataCash.length;\n\n        if (item.prodType === 100) {\n          countPromotion.afternoon = countPromotion.afternoon + 1;\n        }\n      }\n\n      if (time.isBetween(afternoon, night)) {\n        countTotalAmount.night = countTotalAmount.night + item.tender;\n        countTransaction.night = countTransaction.night + 1;\n        countAverageTC.night = countAverageTC.night + item.tender / dataCash.length;\n\n        if (item.prodType === 100) {\n          countPromotion.night = countPromotion.night + 1;\n        }\n      }\n    });\n\n    _dataChartPie.push({\n      title: \"Total Amount\",\n      data: [{\n        y: countTotalAmount.noon\n      }, {\n        y: countTotalAmount.afternoon\n      }, {\n        y: countTotalAmount.night\n      }, {\n        y: countTotalAmount.morning\n      }]\n    });\n\n    _dataChartPie.push({\n      title: \"Average TC\",\n      data: [{\n        y: countAverageTC.noon\n      }, {\n        y: countAverageTC.afternoon\n      }, {\n        y: countAverageTC.night\n      }, {\n        y: countAverageTC.morning\n      }]\n    });\n\n    _dataChartPie.push({\n      title: \"Transaction\",\n      data: [{\n        y: countTransaction.noon\n      }, {\n        y: countTransaction.afternoon\n      }, {\n        y: countTransaction.night\n      }, {\n        y: countTransaction.morning\n      }]\n    });\n\n    _dataChartPie.push({\n      title: \"Promotion\",\n      data: [{\n        y: countPromotion.noon\n      }, {\n        y: countPromotion.afternoon\n      }, {\n        y: countPromotion.night\n      }, {\n        y: countPromotion.morning\n      }]\n    });\n\n    var __fieldSells = {\n      totalAmount: _objectSpread(_objectSpread({}, fieldSells.totalAmount), {}, {\n        value: Money(Math.round(count))\n      }),\n      averageTC: _objectSpread(_objectSpread({}, fieldSells.averageTC), {}, {\n        value: Money(Math.round(count / dataCash.length))\n      }),\n      transaction: _objectSpread(_objectSpread({}, fieldSells.transaction), {}, {\n        value: dataCash.length\n      }),\n      promotion: _objectSpread(_objectSpread({}, fieldSells.promotion), {}, {\n        value: countPromo\n      })\n    };\n    setDataChartCol(_dataChartCol);\n    setFieldSells(_objectSpread(_objectSpread({}, fieldSells), __fieldSells));\n    setDataPaymentList(dataCash);\n    setDataChartPie(_dataChartPie);\n  };\n\n  var handlePickerChild = function handlePickerChild(value) {\n    setPickerTopValueChild(value);\n    setModalRadioButton(false);\n  };\n\n  var handleClosePickerChild = function handleClosePickerChild() {\n    setModalRadioButton(false);\n  };\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      modalRadioButton = _useState30[0],\n      setModalRadioButton = _useState30[1];\n\n  var dataTimeSales = [{\n    time: \"06:00 AM - 10:00 AM\",\n    color: \"#70E6A3\"\n  }, {\n    time: \"10:00 AM - 02:00 PM\",\n    color: \"#A24DE4\"\n  }, {\n    time: \"02:00 PM - 05:00 PM\",\n    color: \"#06C2FF\"\n  }, {\n    time: \"05:00 PM - 00:00 AM\",\n    color: \"#F68942\"\n  }];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      modalVisibleSelect = _useState32[0],\n      setModalVisibleSelect = _useState32[1];\n\n  var _useState33 = useState(\"All\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      pickerValueSelect = _useState34[0],\n      setPickerValueSelect = _useState34[1];\n\n  var dataModelSelect = [{\n    label: \"All\",\n    value: \"all\"\n  }, {\n    label: \"Total Amount\",\n    value: \"totalAmount\"\n  }, {\n    label: \"Promotion\",\n    value: \"promotion\"\n  }, {\n    label: \"Transaction\",\n    value: \"transaction\"\n  }, {\n    label: \"Average TC\",\n    value: \"averageTC\"\n  }];\n\n  var _useState35 = useState({\n    totalAmount: true,\n    promotion: true,\n    transaction: true,\n    averageTC: true\n  }),\n      _useState36 = _slicedToArray(_useState35, 2),\n      pickerValueChartDisplay = _useState36[0],\n      setPickerValueChartDisplay = _useState36[1];\n\n  var _useState37 = useState([\"all\", \"totalAmount\", \"promotion\", \"transaction\", \"averageTC\"]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      selectedChart = _useState38[0],\n      setSelectedChartValue = _useState38[1];\n\n  function handleCheck(item) {\n    var data = selectedChart;\n\n    if (data.includes(item)) {\n      if (item === \"all\") {\n        data = [];\n        setPickerValueSelect(\"Select...\");\n        setPickerValueChartDisplay({\n          totalAmount: false,\n          promotion: false,\n          transaction: false,\n          averageTC: false\n        });\n      } else {\n        data = data.filter(function (i) {\n          return i !== item;\n        });\n        data = data.filter(function (i) {\n          return i !== \"all\";\n        });\n        var labelSeleted = \"\";\n        data.map(function (map, index) {\n          dataModelSelect.map(function (model) {\n            if (map != \"all\") {\n              if (map === model.value) {\n                labelSeleted += index != data.length - 1 ? model.label + \", \" : \"\" + model.label;\n              }\n            }\n          });\n        });\n        setPickerValueSelect(labelSeleted);\n        setPickerValueChartDisplay(_objectSpread(_objectSpread({}, pickerValueChartDisplay), {}, _defineProperty({}, item, false)));\n      }\n\n      setSelectedChartValue(data);\n    } else {\n      if (item === \"all\") {\n        data = [];\n        dataModelSelect.map(function (item) {\n          data.push(item.value);\n        });\n        setPickerValueSelect(\"All\");\n        setPickerValueChartDisplay({\n          totalAmount: true,\n          promotion: true,\n          transaction: true,\n          averageTC: true\n        });\n      } else {\n        if (selectedChart.length === dataModelSelect.length - 2) {\n          data = [].concat(_toConsumableArray(data), [\"all\"]);\n        }\n\n        data = [].concat(_toConsumableArray(data), [item]);\n\n        if (data.length === dataModelSelect.length) {\n          setPickerValueSelect(\"All\");\n        } else {\n          var _labelSeleted = \"\";\n          data.map(function (map, index) {\n            dataModelSelect.map(function (model) {\n              if (map != \"all\") {\n                if (map === model.value) {\n                  _labelSeleted += index != data.length - 1 ? model.label + \", \" : \"\" + model.label;\n                }\n              }\n            });\n          });\n          setPickerValueSelect(_labelSeleted);\n        }\n\n        setPickerValueChartDisplay(_objectSpread(_objectSpread({}, pickerValueChartDisplay), {}, _defineProperty({}, item, true)));\n      }\n\n      setSelectedChartValue(data);\n    }\n  }\n\n  useEffect(function () {\n    loadPaymentList();\n  }, [fromDateTime, endDateTime]);\n  useEffect(function () {\n    loadPaymentTypeList();\n  }, []);\n  useEffect(function () {\n    if (paymentList.length > 0) {\n      handlePicker(pickerTopValue);\n    }\n  }, [paymentList]);\n  useEffect(function () {\n    var _titleColChart = [];\n    dataTopPicker.map(function (i) {\n      if (i.value !== 0) {\n        _titleColChart.push(i.label);\n      }\n    });\n    setTitleColumnChart(_titleColChart);\n  }, [dataTopPicker]);\n  var whiteStyleBottom = {\n    axis: {\n      stroke: colors.colorLine\n    },\n    ticks: {\n      stroke: colors.gray,\n      size: 8,\n      margin: 5\n    },\n    tickLabels: {\n      fontSize: 10,\n      padding: 5,\n      fill: \"#A4A4A4\"\n    }\n  };\n  var whiteStyle = {\n    grid: {\n      stroke: colors.colorLine,\n      strokeWidth: 0.25\n    },\n    axis: {\n      stroke: colors.backgroundApp\n    },\n    tickLabels: {\n      fill: colors.colorChartLine,\n      fontSize: 10\n    }\n  };\n\n  var handleDataChartCol = function handleDataChartCol(data, type) {\n    var arr = [];\n    Object.values(data).map(function (item, index) {\n      arr.push({\n        x: index + 1,\n        y: +item / 1000000\n      });\n    });\n    return arr;\n  };\n\n  var handleDataChartLine = function handleDataChartLine(data) {\n    var arr = [{\n      x: 0.45,\n      y: 0,\n      fill: \"#DAB451\"\n    }];\n    Object.values(data).map(function (item, index) {\n      arr.push({\n        x: index + 1,\n        y: +item,\n        fill: \"#DAB451\"\n      });\n    });\n    return arr;\n  };\n\n  useEffect(function () {\n    var maxInNumbers = Math.max.apply(Math, Object.values(dataChartCol.totalAmount));\n\n    if (maxInNumbers !== -Infinity && maxInNumbers > 100000000) {\n      var money = maxInNumbers / 1000000;\n      setTickValueMoney([Math.round(money / 4), Math.round(money / 2), Math.round(money - money / 4), Math.round(money)]);\n    }\n  }, [dataChartCol.totalAmount]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }\n  }, React.createElement(PickerModel, {\n    data: outletModel,\n    defaultValue: \"Ola Restaurant\",\n    onSelectedValue: function onSelectedValue(value) {\n      onchangeOutlet(value == null ? void 0 : value.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingHorizontal: 15,\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.titleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.textTitleHeader, {\n      textAlign: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, \"ONLINE PAYMENT METHOD\"))), React.createElement(DateTimePicker, {\n    onSubmitFromDate: function onSubmitFromDate(date) {\n      return setFromDateTime(moment(date).format(\"YYYY-MM-DD\"));\n    },\n    onSubmitEndDate: function onSubmitEndDate(date) {\n      return setEndDateTime(moment(date).format(\"YYYY-MM-DD\"));\n    },\n    fromDate: fromDateTime,\n    endDate: endDateTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  }), React.createElement(DropDownPickerLine, {\n    data: dataTopPicker,\n    onSelected: function onSelected(value) {\n      handlePicker(value);\n    },\n    itemSelected: pickerTopValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }\n  }), pickerTopValueChild !== \"\" && React.createElement(View, {\n    style: styles.viewWallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }, pickerTopValueChild)), React.createElement(View, {\n    style: {\n      paddingVertical: 15,\n      paddingLeft: 15,\n      flexDirection: \"row\",\n      flexWrap: \"wrap\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }\n  }, Object.values(fieldSells).map(function (item, index) {\n    var _item$value;\n\n    return React.createElement(View, {\n      key: index,\n      style: [styles.itemFieldSells, {\n        width: windowWidth / 2 - 15 - 7.5\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: [styles.textGray, {\n        marginBottom: 8\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 17\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.text16,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 17\n      }\n    }, (_item$value = item.value) != null ? _item$value : 0));\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    indicatorStyle: \"white\",\n    pagingEnabled: true,\n    persistentScrollbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 11\n    }\n  }, dataChartPie.map(function (chart, iChart) {\n    return React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        width: windowWidth\n      },\n      key: iChart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: [styles.text16, {\n        marginBottom: 15\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 19\n      }\n    }, chart.title), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 19\n      }\n    }, React.createElement(VictoryPie, {\n      width: windowWidth / 1.8,\n      height: windowWidth / 1.8,\n      theme: {\n        pie: {\n          padding: 15\n        }\n      },\n      animate: {\n        duration: 2000\n      },\n      data: chart.data,\n      colorScale: [\"#A24DE4\", \"#06C2FF\", \"#F68942\", \"#70E6A3\"],\n      style: {\n        labels: {\n          fill: colors.backgroundApp\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 21\n      }\n    }, dataTimeSales.map(function (item, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginVertical: 4\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: [styles.dot, {\n          backgroundColor: item.color\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: \"500\",\n          color: item.color\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 29\n        }\n      }, item.time));\n    }))));\n  }))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.salectChart, {\n      zIndex: 10\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisibleSelect(!modalVisibleSelect);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.chartPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitleHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 17\n    }\n  }, pickerValueSelect), React.createElement(Ionicons, {\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 17\n    }\n  }))), modalVisibleSelect && React.createElement(View, {\n    style: [styles.listPicker, {\n      width: windowWidth - 30\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      borderRadius: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingVertical: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 19\n    }\n  }, dataModelSelect.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return handleCheck(item.value);\n      },\n      style: {\n        paddingVertical: 10,\n        flexDirection: \"row\",\n        paddingLeft: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 25\n      }\n    }, selectedChart.includes(item.value) ? React.createElement(View, {\n      style: [styles.iconUnCheck, {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 29\n      }\n    }, React.createElement(SvgUri, {\n      source: Icons.iconTickCheckBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 31\n      }\n    })) : React.createElement(View, {\n      style: styles.iconUnCheck,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: [styles.textTitleHeader],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 27\n      }\n    }, item.label));\n  }))))), React.createElement(ScrollView, {\n    horizontal: true,\n    endFillColor: colors.backgroundApp,\n    style: {\n      backgroundColor: colors.backgroundApp\n    },\n    indicatorStyle: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 15\n    }\n  }, React.createElement(VictoryChart, {\n    domainPadding: {\n      x: 30,\n      y: 40\n    },\n    padding: {\n      top: 5,\n      bottom: 50,\n      left: 90,\n      right: 80\n    },\n    width: titleColumnChart.length > 4 ? titleColumnChart.length * 80 : windowWidth,\n    containerComponent: React.createElement(VictoryVoronoiContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 39\n      }\n    }),\n    style: {\n      parent: {\n        cursor: \"pointer\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 17\n    }\n  }, React.createElement(VictoryChart, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 19\n    }\n  }, React.createElement(VictoryLabel, {\n    y: 170,\n    x: 5,\n    angle: -90,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorText\n    },\n    text: \"Amount - Average TC\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryLabel, {\n    y: 170,\n    x: titleColumnChart.length > 4 ? titleColumnChart.length * 80 - 30 : windowWidth - 30,\n    angle: -90,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorText\n    },\n    text: \"Transaction - Promotion\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryLabel, {\n    y: 250,\n    x: 70,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorChartLine\n    },\n    text: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryLabel, {\n    y: 250,\n    x: titleColumnChart.length > 4 ? titleColumnChart.length * 80 - 65 : windowWidth - 65,\n    style: {\n      fontSize: 10,\n      fontStyle: \"normal\",\n      fill: colors.colorChartLine\n    },\n    text: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: tickValueMoney,\n    tickFormat: function tickFormat(t) {\n      return Math.round(t) + \".000.000\";\n    },\n    dependentAxis: true,\n    orientation: \"left\",\n    style: whiteStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: titleColumnChart,\n    style: whiteStyleBottom,\n    orientation: \"bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 21\n    }\n  }), React.createElement(VictoryAxis, {\n    tickValues: tickValueMoney,\n    tickFormat: function tickFormat(t) {\n      return \"\" + Math.round(t);\n    },\n    dependentAxis: true,\n    orientation: \"right\",\n    style: whiteStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 21\n    }\n  })), React.createElement(VictoryGroup, {\n    offset: !pickerValueChartDisplay.totalAmount && pickerValueChartDisplay.averageTC ? 0 : 15,\n    style: {\n      data: {\n        width: 15\n      }\n    },\n    colorScale: !pickerValueChartDisplay.totalAmount && pickerValueChartDisplay.averageTC ? [\"#00DFFD\"] : [\"#A24DE4\", \"#00DFFD\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 19\n    }\n  }, pickerValueChartDisplay.totalAmount && React.createElement(VictoryBar, {\n    animate: {\n      duration: 2000,\n      onLoad: {\n        duration: 1000\n      }\n    },\n    data: handleDataChartCol(dataChartCol.totalAmount, \"totalAmount\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 23\n    }\n  }), pickerValueChartDisplay.averageTC && React.createElement(VictoryBar, {\n    animate: {\n      duration: 2000,\n      onLoad: {\n        duration: 1000\n      }\n    },\n    data: handleDataChartCol(dataChartCol.averageTC, \"averageTC\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 23\n    }\n  })), pickerValueChartDisplay.transaction && React.createElement(VictoryGroup, {\n    data: handleDataChartLine(dataChartCol.transaction),\n    color: \"#5F8BFC\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 21\n    }\n  }, React.createElement(VictoryLine, {\n    interpolation: \"natural\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 23\n    }\n  }), React.createElement(VictoryScatter, {\n    size: 3,\n    style: {\n      data: {\n        fill: function fill(_ref) {\n          var datum = _ref.datum;\n          return datum.fill;\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 23\n    }\n  })), pickerValueChartDisplay.promotion && React.createElement(VictoryGroup, {\n    data: handleDataChartLine(dataChartCol.promotion),\n    color: \"#FDB441\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 21\n    }\n  }, React.createElement(VictoryLine, {\n    interpolation: \"natural\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 23\n    }\n  }), React.createElement(VictoryScatter, {\n    size: 3,\n    style: {\n      data: {\n        fill: function fill(_ref2) {\n          var datum = _ref2.datum;\n          return datum.fill;\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 23\n    }\n  })))), React.createElement(View, {\n    style: styles.rowTableChart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 2.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 8,\n      height: 8,\n      backgroundColor: \"#A24DE4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles.textNoteChart, {\n      color: \"#A24DE4\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 21\n    }\n  }, \"Total Amount\"))), React.createElement(View, {\n    style: {\n      flex: 2.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 8,\n      height: 8,\n      backgroundColor: \"#06C2FF\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles.textNoteChart, {\n      color: \"#06C2FF\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 21\n    }\n  }, \"Average TC\"))), React.createElement(View, {\n    style: {\n      flex: 2.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 8,\n      height: 2,\n      backgroundColor: \"#5F8BFC\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles.textNoteChart, {\n      color: \"#5F8BFC\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 21\n    }\n  }, \"Transaction\"))), React.createElement(View, {\n    style: {\n      flex: 2.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 8,\n      height: 2,\n      backgroundColor: \"#FDB441\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles.textNoteChart, {\n      color: \"#FDB441\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 21\n    }\n  }, \"Promotion\")))))))), isLoading && React.createElement(DialogAwait, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default OnlinePaymentMethod;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  titleHeader: {\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.colorLine\n  },\n  textTitleHeader: {\n    color: colors.colorText,\n    fontWeight: \"500\",\n    fontSize: 14\n  },\n  text16: {\n    color: colors.colorText,\n    fontWeight: \"500\",\n    fontSize: 16\n  },\n  textGray: {\n    color: colors.colorLine,\n    fontWeight: \"400\",\n    fontSize: 14\n  },\n  itemFieldSells: {\n    height: 77,\n    backgroundColor: \"#414141\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4,\n    marginRight: 15,\n    marginBottom: 15\n  },\n  viewWallet: {\n    backgroundColor: \"#675E50\",\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 15,\n    marginTop: 4\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    marginRight: 4,\n    borderRadius: 8\n  },\n  rowTableChart: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: 30\n  },\n  textNoteChart: {\n    color: colors.colorText,\n    textAlign: \"center\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: 12,\n    lineHeight: 20,\n    marginLeft: 4\n  },\n  lineItem: {\n    height: 0.5,\n    backgroundColor: colors.colorLine\n  },\n  salectChart: {\n    paddingTop: 15,\n    paddingHorizontal: 15\n  },\n  chartPicker: {\n    height: 40,\n    flexDirection: \"row\",\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 10\n  },\n  listPicker: {\n    position: \"absolute\",\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    borderColor: colors.backgroundApp,\n    top: 60,\n    left: 15\n  },\n  iconUnCheck: {\n    borderRadius: 4,\n    backgroundColor: \"transparent\",\n    width: 18,\n    height: 18,\n    borderColor: \"#fff\",\n    borderWidth: 1,\n    marginRight: 10\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/OnlineSystem/OnlinePaymentMethod.tsx"],"names":["React","useState","useEffect","TouchableOpacity","VictoryBar","VictoryChart","VictoryPie","VictoryLine","VictoryScatter","VictoryAxis","VictoryLabel","VictoryGroup","VictoryVoronoiContainer","colors","Ionicons","moment","DateTimePicker","Icons","PickerModel","DropDownPickerLine","SvgUri","getAllPaymentType","getTransactionDetail","getTransactionPayment","Money","DialogAwait","OnlinePaymentMethod","dimensions","Dimensions","get","windowHeight","height","windowWidth","width","isLoading","setIsLoading","outletModel","label","value","outlet","setOutlet","onchangeOutlet","data","Date","setDate","getDate","format","fromDateTime","setFromDateTime","endDateTime","setEndDateTime","titleColumnChart","setTitleColumnChart","dataTopPicker","setdataTopPicker","pickerTopValue","setPickerTopValue","pickerTopValueChild","setPickerTopValueChild","paymentList","setPaymentList","dataPaymentList","setDataPaymentList","tickValueMoney","setTickValueMoney","dataInitFieldSells","totalAmount","title","averageTC","transaction","promotion","fieldSells","setFieldSells","dataChartPie","setDataChartPie","dataChartCol","setDataChartCol","loadPaymentTypeList","res","dataList","isSuccess","dataPaymentType","map","item","isActive","push","descript","methodNum","loadPaymentList","detailTransacts","t","loadTransactionDetail","transact","Promise","all","transacts","filter","x","undefined","forEach","find","i","prodType","handlePicker","_dataChartPie","dataCash","_dataChartCol","count","countPromo","countTotalAmount","morning","noon","afternoon","night","countTransaction","countAverageTC","countPromotion","Object","keys","reduce","obj","_titleColChart","tender","length","time","transDate","isBefore","isBetween","y","__fieldSells","Math","round","handlePickerChild","setModalRadioButton","handleClosePickerChild","modalRadioButton","dataTimeSales","color","modalVisibleSelect","setModalVisibleSelect","pickerValueSelect","setPickerValueSelect","dataModelSelect","pickerValueChartDisplay","setPickerValueChartDisplay","selectedChart","setSelectedChartValue","handleCheck","includes","labelSeleted","index","model","whiteStyleBottom","axis","stroke","colorLine","ticks","gray","size","margin","tickLabels","fontSize","padding","fill","whiteStyle","grid","strokeWidth","backgroundApp","colorChartLine","handleDataChartCol","type","arr","values","handleDataChartLine","maxInNumbers","max","apply","Infinity","money","styles","container","line","paddingHorizontal","marginBottom","titleHeader","textTitleHeader","textAlign","date","viewWallet","paddingVertical","paddingLeft","flexDirection","flexWrap","itemFieldSells","textGray","text16","chart","iChart","alignItems","pie","duration","labels","marginVertical","dot","backgroundColor","fontWeight","salectChart","zIndex","chartPicker","listPicker","borderRadius","iconUnCheck","justifyContent","iconTickCheckBox","top","bottom","left","right","parent","cursor","fontStyle","colorText","onLoad","datum","rowTableChart","flex","textNoteChart","StyleSheet","create","backgroundTab","borderBottomWidth","borderBottomColor","marginRight","marginHorizontal","marginTop","lineHeight","marginLeft","lineItem","paddingTop","grayLight","position","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  ScrollView,\r\n  TextInput,\r\n  KeyboardTypeOptions,\r\n  ImageProps,\r\n  Platform,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { TouchableHighlight, TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport {\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryPie,\r\n  VictoryLine,\r\n  VictoryScatter,\r\n  VictoryAxis,\r\n  VictoryLabel,\r\n  VictoryGroup,\r\n  VictoryTooltip,\r\n  VictoryVoronoiContainer,\r\n} from \"victory-native\";\r\nimport { colors } from \"../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport moment from \"moment\";\r\nimport DateTimePicker from \"../../../../components/datetimepicker\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Icons, Images } from \"../../../../assets\";\r\nimport PickerModel from \"../../../../components/picker/PickerModel\";\r\nimport DropDownPickerLine from \"../../../../components/DropDownPickerLine\";\r\nimport { IModalPicker, Imodel } from \"../../../../models/Imodel\";\r\nimport ModalRadioButton from \"../../../../components/ModalRadioButton\";\r\nimport SelectMultiple from \"react-native-select-multiple\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport { getAllPaymentType } from \"../../../../netWorking/paymentService\";\r\nimport { getTransactionDetail, getTransactionPayment } from \"../../../../netWorking/transactionService\";\r\nimport { transactionDetailModel, transactionPaymentModel } from \"../../../../models/transactionModel\";\r\nimport { Money } from \"../../../../components/generalConvert/conVertmunberToMoney\";\r\nimport DialogAwait from \"../../../../components/dialogs/Loading\";\r\nconst OnlinePaymentMethod = () => {\r\n  const dimensions = Dimensions.get(\"window\");\r\n  const windowHeight = dimensions.height;\r\n  const windowWidth = dimensions.width;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // ----Outlet\r\n  const outletModel = [\r\n    { label: \"Spa\", value: 1 },\r\n    { label: \"Ola Restaurant\", value: 2 },\r\n  ];\r\n  const [outlet, setOutlet] = useState(2);\r\n  const onchangeOutlet = async (data: any) => {\r\n    setOutlet(data);\r\n  };\r\n  // -----DateTime picker\r\n  const [fromDateTime, setFromDateTime] = useState(moment(new Date().setDate(new Date().getDate() - 1)).format(\"YYYY-MM-DD\"));\r\n  const [endDateTime, setEndDateTime] = useState(moment(new Date().setDate(new Date().getDate())).format(\"YYYY-MM-DD\"));\r\n  // -----------\r\n  const [titleColumnChart, setTitleColumnChart] = useState([\"Cash\", \"Credit Card\", \"E-Wallet\"]);\r\n  // ----Picker\r\n  const [dataTopPicker, setdataTopPicker] = useState<IModalPicker[]>([{ label: \"Payment Method - All\", value: 0 }]);\r\n  const [pickerTopValue, setPickerTopValue] = useState<IModalPicker>(dataTopPicker[0]);\r\n  const [pickerTopValueChild, setPickerTopValueChild] = useState<string | undefined>(\"\");\r\n  const [paymentList, setPaymentList] = useState([]);\r\n  const [dataPaymentList, setDataPaymentList] = useState([]);\r\n  const [tickValueMoney, setTickValueMoney] = useState([25, 50, 75, 100]);\r\n  // ----Body\r\n  const dataInitFieldSells = {\r\n    totalAmount: { title: \"Total Amount\", value: 0 },\r\n    averageTC: { title: \"Average TC\", value: 0 },\r\n    transaction: { title: \"Transaction\", value: 0 },\r\n    promotion: { title: \"Promotion\", value: 0 },\r\n  };\r\n  const [fieldSells, setFieldSells] = useState(dataInitFieldSells);\r\n  //--------chart pie\r\n  interface IDataChartPie {\r\n    title: string;\r\n    data: { y: number }[];\r\n  }\r\n  const [dataChartPie, setDataChartPie] = useState<IDataChartPie[]>([]);\r\n  //--------chart col\r\n  // interface IDataChartCol {\r\n  //   amount?: any;\r\n  //   averageTC?: { x: number; y: number }[];\r\n  // }\r\n  const [dataChartCol, setDataChartCol] = useState({ totalAmount: {}, averageTC: {}, transaction: {}, promotion: {} });\r\n  //-----------Fetch API----------------------------------------------------------------------\r\n  const loadPaymentTypeList = async () => {\r\n    setPaymentList([]);\r\n    const res = await getAllPaymentType();\r\n    let dataList = [];\r\n    if (res.isSuccess == 1 && res.data) {\r\n      dataList = res.data;\r\n      const dataPaymentType = [{ label: \"Payment Method - All\", value: 0 }];\r\n      dataList.map(item => {\r\n        if (item.isActive) {\r\n          dataPaymentType.push({ label: item.descript, value: item.methodNum });\r\n        }\r\n      });\r\n      setdataTopPicker(dataPaymentType);\r\n    }\r\n  };\r\n  const loadPaymentList = async () => {\r\n    setIsLoading(true);\r\n    setPaymentList([]);\r\n    const res = await getTransactionPayment(fromDateTime, endDateTime, null, null);\r\n\r\n    let dataList = [];\r\n    if (res.isSuccess == 1 && res.data) {\r\n      dataList = res.data as transactionPaymentModel[];\r\n\r\n      const detailTransacts = dataList.map(t => loadTransactionDetail(t.transact));\r\n      let transacts = await Promise.all(detailTransacts);\r\n      transacts = transacts.filter(x => x !== undefined);\r\n      dataList.forEach(t => {\r\n        const transact = transacts.find(i => i.transact === t.transact);\r\n        if (transact) {\r\n          t.prodType = transact.prodType;\r\n        }\r\n      });\r\n      setPaymentList(dataList);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n  const loadTransactionDetail = async (transact: number) => {\r\n    const res = await getTransactionDetail(null, null, null, transact);\r\n    let dataList = [];\r\n    if (res.isSuccess == 1 && res.data) {\r\n      dataList = res.data as transactionDetailModel[];\r\n      return dataList[0];\r\n    }\r\n  };\r\n  //----------------------------------------------------------------------------------------\r\n  // pick payment method\r\n  const handlePicker = (value: IModalPicker) => {\r\n    const _dataChartPie = [];\r\n    setPickerTopValue(value);\r\n    let dataCash = [];\r\n    let _dataChartCol = dataChartCol;\r\n    let count = 0;\r\n    let countPromo = 0;\r\n\r\n    let countTotalAmount = { morning: 0, noon: 0, afternoon: 0, night: 0 };\r\n    let countTransaction = { morning: 0, noon: 0, afternoon: 0, night: 0 };\r\n    let countAverageTC = { morning: 0, noon: 0, afternoon: 0, night: 0 };\r\n    let countPromotion = { morning: 0, noon: 0, afternoon: 0, night: 0 };\r\n    const morning = moment(\"10:00am\", \"h:mma\");\r\n    const noon = moment(\"02:00pm\", \"h:mma\");\r\n    const afternoon = moment(\"05:00pm\", \"h:mma\");\r\n    const night = moment(\"23:59pm\", \"h:mma\");\r\n\r\n    if (value.value === 0) {\r\n      //choose all payment method\r\n\r\n      /// init dataChartColumn\r\n      Object.keys(_dataChartCol).map(i => {\r\n        _dataChartCol[i] = dataTopPicker.reduce((obj, item) => {\r\n          if (item.value !== 0) {\r\n            return {\r\n              ...obj,\r\n              [item.label]: 0,\r\n            };\r\n          }\r\n        }, _dataChartCol[i]);\r\n      });\r\n      // get arr title chart from payment types\r\n      let _titleColChart = [];\r\n      dataTopPicker.map(i => {\r\n        if (i.value !== 0) {\r\n          _titleColChart.push(i.label);\r\n        }\r\n      });\r\n      //\r\n      paymentList.map(item => {\r\n        dataCash.push(item);\r\n        count += item.tender;\r\n        dataTopPicker.map(i => {\r\n          // get dataChartColumn\r\n          if (i.value === item.methodNum) {\r\n            _dataChartCol.totalAmount[i.label] = _dataChartCol.totalAmount[i.label] + item.tender;\r\n            _dataChartCol.averageTC[i.label] = _dataChartCol.averageTC[i.label] + item.tender / paymentList.length;\r\n            _dataChartCol.transaction[i.label] = _dataChartCol.transaction[i.label] + 1;\r\n            if (item.prodType === 100) {\r\n              _dataChartCol.promotion[i.label] = _dataChartCol.promotion[i.label] + 1;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      setTitleColumnChart(_titleColChart);\r\n    } else {\r\n      /// init dataChartColumn\r\n      Object.keys(_dataChartCol).map(i => {\r\n        _dataChartCol[i] = {\r\n          ...{},\r\n          [value.label]: 0,\r\n        };\r\n      });\r\n      paymentList.map(item => {\r\n        if (item.methodNum === value.value) {\r\n          dataCash.push(item);\r\n          count += item.tender;\r\n          _dataChartCol.totalAmount[value.label] = _dataChartCol.totalAmount[value.label] + item.tender;\r\n          _dataChartCol.averageTC[value.label] = _dataChartCol.averageTC[value.label] + item.tender / paymentList.length;\r\n          _dataChartCol.transaction[value.label] = _dataChartCol.transaction[value.label] + 1;\r\n          if (item.prodType === 100) {\r\n            _dataChartCol.promotion[value.label] = _dataChartCol.promotion[value.label] + 1;\r\n          }\r\n        }\r\n      });\r\n      setTitleColumnChart([value.label]);\r\n    }\r\n\r\n    //---------- handle data Chart pie\r\n    dataCash.map(item => {\r\n      const time = moment(moment(item.transDate).format(\"h:mma\"), \"h:mma\");\r\n      if (item.prodType === 100) {\r\n        countPromo++;\r\n      }\r\n      if (time.isBefore(morning)) {\r\n        countTotalAmount.morning = countTotalAmount.morning + item.tender;\r\n        countTransaction.morning = countTransaction.morning + 1;\r\n        countAverageTC.morning = countAverageTC.morning + item.tender / dataCash.length;\r\n        if (item.prodType === 100) {\r\n          countPromotion.morning = countPromotion.morning + 1;\r\n        }\r\n      }\r\n      if (time.isBetween(morning, noon)) {\r\n        countTotalAmount.noon = countTotalAmount.noon + item.tender;\r\n        countTransaction.noon = countTransaction.noon + 1;\r\n        countAverageTC.noon = countAverageTC.noon + item.tender / dataCash.length;\r\n        if (item.prodType === 100) {\r\n          countPromotion.noon = countPromotion.noon + 1;\r\n        }\r\n      }\r\n      if (time.isBetween(noon, afternoon)) {\r\n        countTotalAmount.afternoon = countTotalAmount.afternoon + item.tender;\r\n        countTransaction.afternoon = countTransaction.afternoon + 1;\r\n        countAverageTC.afternoon = countAverageTC.afternoon + item.tender / dataCash.length;\r\n        if (item.prodType === 100) {\r\n          countPromotion.afternoon = countPromotion.afternoon + 1;\r\n        }\r\n      }\r\n      if (time.isBetween(afternoon, night)) {\r\n        countTotalAmount.night = countTotalAmount.night + item.tender;\r\n        countTransaction.night = countTransaction.night + 1;\r\n        countAverageTC.night = countAverageTC.night + item.tender / dataCash.length;\r\n        if (item.prodType === 100) {\r\n          countPromotion.night = countPromotion.night + 1;\r\n        }\r\n      }\r\n    });\r\n    _dataChartPie.push({\r\n      title: \"Total Amount\",\r\n      data: [\r\n        { y: countTotalAmount.noon },\r\n        { y: countTotalAmount.afternoon },\r\n        { y: countTotalAmount.night },\r\n        { y: countTotalAmount.morning },\r\n      ],\r\n    });\r\n    _dataChartPie.push({\r\n      title: \"Average TC\",\r\n      data: [\r\n        { y: countAverageTC.noon },\r\n        { y: countAverageTC.afternoon },\r\n        { y: countAverageTC.night },\r\n        { y: countAverageTC.morning },\r\n      ],\r\n    });\r\n    _dataChartPie.push({\r\n      title: \"Transaction\",\r\n      data: [\r\n        { y: countTransaction.noon },\r\n        { y: countTransaction.afternoon },\r\n        { y: countTransaction.night },\r\n        { y: countTransaction.morning },\r\n      ],\r\n    });\r\n    _dataChartPie.push({\r\n      title: \"Promotion\",\r\n      data: [\r\n        { y: countPromotion.noon },\r\n        { y: countPromotion.afternoon },\r\n        { y: countPromotion.night },\r\n        { y: countPromotion.morning },\r\n      ],\r\n    });\r\n    const __fieldSells = {\r\n      totalAmount: { ...fieldSells.totalAmount, value: Money(Math.round(count)) },\r\n      averageTC: { ...fieldSells.averageTC, value: Money(Math.round(count / dataCash.length)) },\r\n      transaction: { ...fieldSells.transaction, value: dataCash.length },\r\n      promotion: { ...fieldSells.promotion, value: countPromo },\r\n    };\r\n\r\n    setDataChartCol(_dataChartCol);\r\n\r\n    setFieldSells({ ...fieldSells, ...__fieldSells });\r\n    setDataPaymentList(dataCash);\r\n    setDataChartPie(_dataChartPie);\r\n  };\r\n\r\n  const handlePickerChild = (value: string | undefined) => {\r\n    setPickerTopValueChild(value);\r\n    setModalRadioButton(false);\r\n  };\r\n  const handleClosePickerChild = () => {\r\n    setModalRadioButton(false);\r\n  };\r\n\r\n  const [modalRadioButton, setModalRadioButton] = useState(false);\r\n\r\n  // --------------------chart pie\r\n  const dataTimeSales = [\r\n    { time: \"06:00 AM - 10:00 AM\", color: \"#70E6A3\" },\r\n    { time: \"10:00 AM - 02:00 PM\", color: \"#A24DE4\" },\r\n    { time: \"02:00 PM - 05:00 PM\", color: \"#06C2FF\" },\r\n    { time: \"05:00 PM - 00:00 AM\", color: \"#F68942\" },\r\n  ];\r\n  // ------chart col\r\n\r\n  const [modalVisibleSelect, setModalVisibleSelect] = useState(false);\r\n  const [pickerValueSelect, setPickerValueSelect] = useState(\"All\");\r\n\r\n  //MultiSelect\r\n  const dataModelSelect: {\r\n    label: string;\r\n    value: string;\r\n  }[] = [\r\n    { label: \"All\", value: \"all\" },\r\n    { label: \"Total Amount\", value: \"totalAmount\" },\r\n    { label: \"Promotion\", value: \"promotion\" },\r\n    { label: \"Transaction\", value: \"transaction\" },\r\n    { label: \"Average TC\", value: \"averageTC\" },\r\n  ];\r\n  const [pickerValueChartDisplay, setPickerValueChartDisplay] = useState({\r\n    totalAmount: true,\r\n    promotion: true,\r\n    transaction: true,\r\n    averageTC: true,\r\n  });\r\n\r\n  const [selectedChart, setSelectedChartValue] = useState([\"all\", \"totalAmount\", \"promotion\", \"transaction\", \"averageTC\"]);\r\n  function handleCheck(item: string) {\r\n    let data = selectedChart;\r\n    if (data.includes(item)) {\r\n      if (item === \"all\") {\r\n        data = [];\r\n        setPickerValueSelect(\"Select...\");\r\n        setPickerValueChartDisplay({\r\n          totalAmount: false,\r\n          promotion: false,\r\n          transaction: false,\r\n          averageTC: false,\r\n        });\r\n      } else {\r\n        data = data.filter(i => i !== item);\r\n        data = data.filter(i => i !== \"all\");\r\n        let labelSeleted = \"\";\r\n        data.map((map, index) => {\r\n          dataModelSelect.map(model => {\r\n            if (map != \"all\") {\r\n              if (map === model.value) {\r\n                labelSeleted += index != data.length - 1 ? `${model.label}, ` : `${model.label}`;\r\n              }\r\n            }\r\n          });\r\n        });\r\n        setPickerValueSelect(labelSeleted);\r\n        setPickerValueChartDisplay({\r\n          ...pickerValueChartDisplay,\r\n          [item]: false,\r\n        });\r\n      }\r\n      setSelectedChartValue(data);\r\n    } else {\r\n      if (item === \"all\") {\r\n        data = [];\r\n        dataModelSelect.map(item => {\r\n          data.push(item.value);\r\n        });\r\n        setPickerValueSelect(\"All\");\r\n        setPickerValueChartDisplay({\r\n          totalAmount: true,\r\n          promotion: true,\r\n          transaction: true,\r\n          averageTC: true,\r\n        });\r\n      } else {\r\n        if (selectedChart.length === dataModelSelect.length - 2) {\r\n          data = [...data, \"all\"];\r\n        }\r\n        data = [...data, item];\r\n        if (data.length === dataModelSelect.length) {\r\n          setPickerValueSelect(\"All\");\r\n        } else {\r\n          let labelSeleted = \"\";\r\n          data.map((map, index) => {\r\n            dataModelSelect.map(model => {\r\n              if (map != \"all\") {\r\n                if (map === model.value) {\r\n                  labelSeleted += index != data.length - 1 ? `${model.label}, ` : `${model.label}`;\r\n                }\r\n              }\r\n            });\r\n          });\r\n          setPickerValueSelect(labelSeleted);\r\n        }\r\n        setPickerValueChartDisplay({\r\n          ...pickerValueChartDisplay,\r\n          [item]: true,\r\n        });\r\n      }\r\n      setSelectedChartValue(data);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    loadPaymentList();\r\n  }, [fromDateTime, endDateTime]);\r\n  useEffect(() => {\r\n    loadPaymentTypeList();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (paymentList.length > 0) {\r\n      handlePicker(pickerTopValue);\r\n    }\r\n  }, [paymentList]);\r\n  useEffect(() => {\r\n    let _titleColChart = [];\r\n    dataTopPicker.map(i => {\r\n      if (i.value !== 0) {\r\n        _titleColChart.push(i.label);\r\n      }\r\n    });\r\n    setTitleColumnChart(_titleColChart);\r\n  }, [dataTopPicker]);\r\n  // ---------------------------------style\r\n  const whiteStyleBottom = {\r\n    axis: { stroke: colors.colorLine },\r\n    ticks: { stroke: colors.gray, size: 8, margin: 5 },\r\n    tickLabels: { fontSize: 10, padding: 5, fill: \"#A4A4A4\" },\r\n  };\r\n  const whiteStyle = {\r\n    grid: { stroke: colors.colorLine, strokeWidth: 0.25 },\r\n    axis: { stroke: colors.backgroundApp },\r\n    tickLabels: { fill: colors.colorChartLine, fontSize: 10 },\r\n  };\r\n  const handleDataChartCol = (data: any, type: string) => {\r\n    let arr = [];\r\n    Object.values(data).map((item, index) => {\r\n      arr.push({ x: index + 1, y: +item / 1000000 });\r\n    });\r\n    return arr;\r\n  };\r\n  const handleDataChartLine = (data: any) => {\r\n    let arr = [{ x: 0.45, y: 0, fill: \"#DAB451\" }];\r\n    Object.values(data).map((item, index) => {\r\n      arr.push({ x: index + 1, y: +item, fill: \"#DAB451\" });\r\n    });\r\n    return arr;\r\n  };\r\n  useEffect(() => {\r\n    let maxInNumbers = Math.max.apply(Math, Object.values(dataChartCol.totalAmount));\r\n    if (maxInNumbers !== -Infinity && maxInNumbers > 100000000) {\r\n      let money = maxInNumbers / 1000000;\r\n      setTickValueMoney([Math.round(money / 4), Math.round(money / 2), Math.round(money - money / 4), Math.round(money)])\r\n    }\r\n  }, [dataChartCol.totalAmount])\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        {/* -----------------Picker Outlet------------- */}\r\n        <PickerModel\r\n          data={outletModel}\r\n          defaultValue=\"Ola Restaurant\"\r\n          onSelectedValue={value => {\r\n            onchangeOutlet(value?.value);\r\n          }}\r\n        ></PickerModel>\r\n        {/* ----------------------------------------------- */}\r\n\r\n        <View style={styles.line}></View>\r\n        <View style={{ paddingHorizontal: 15, marginBottom: 10 }}>\r\n          <View style={styles.titleHeader}>\r\n            <Text style={[styles.textTitleHeader, { textAlign: \"center\" }]}>ONLINE PAYMENT METHOD</Text>\r\n          </View>\r\n        </View>\r\n        {/* ---------------------------------------- */}\r\n        <DateTimePicker\r\n          onSubmitFromDate={date => setFromDateTime(moment(date).format(\"YYYY-MM-DD\"))}\r\n          onSubmitEndDate={date => setEndDateTime(moment(date).format(\"YYYY-MM-DD\"))}\r\n          fromDate={fromDateTime}\r\n          endDate={endDateTime}\r\n        ></DateTimePicker>\r\n        {/* ---------------------------------------- */}\r\n        <DropDownPickerLine\r\n          data={dataTopPicker}\r\n          onSelected={value => {\r\n            handlePicker(value);\r\n          }}\r\n          itemSelected={pickerTopValue}\r\n        ></DropDownPickerLine>\r\n        {pickerTopValueChild !== \"\" && (\r\n          <View style={styles.viewWallet}>\r\n            <Text style={styles.textTitleHeader}>{pickerTopValueChild}</Text>\r\n          </View>\r\n        )}\r\n        {/* ---------------------------------------- */}\r\n        <View\r\n          style={{\r\n            paddingVertical: 15,\r\n            paddingLeft: 15,\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          {Object.values(fieldSells).map((item, index) => {\r\n            return (\r\n              <View key={index} style={[styles.itemFieldSells, { width: windowWidth / 2 - 15 - 7.5 }]}>\r\n                <Text style={[styles.textGray, { marginBottom: 8 }]}>{item.title}</Text>\r\n                <Text style={styles.text16}>{item.value ?? 0}</Text>\r\n              </View>\r\n            );\r\n          })}\r\n        </View>\r\n        {/* ---------------------------------------- */}\r\n        <View>\r\n          <ScrollView horizontal indicatorStyle={\"white\"} pagingEnabled persistentScrollbar>\r\n            {dataChartPie.map((chart, iChart) => {\r\n              return (\r\n                <View style={{ alignItems: \"center\", width: windowWidth }} key={iChart}>\r\n                  <Text style={[styles.text16, { marginBottom: 15 }]}>{chart.title}</Text>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <VictoryPie\r\n                      width={windowWidth / 1.8}\r\n                      height={windowWidth / 1.8}\r\n                      theme={{\r\n                        pie: {\r\n                          padding: 15,\r\n                        },\r\n                      }}\r\n                      animate={{ duration: 2000 }}\r\n                      data={chart.data}\r\n                      colorScale={[\"#A24DE4\", \"#06C2FF\", \"#F68942\", \"#70E6A3\"]}\r\n                      style={{ labels: { fill: colors.backgroundApp } }}\r\n                    />\r\n                    <View style={{}}>\r\n                      {dataTimeSales.map((item, index) => {\r\n                        return (\r\n                          <View\r\n                            key={index}\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              marginVertical: 4,\r\n                            }}\r\n                          >\r\n                            <View style={[styles.dot, { backgroundColor: item.color }]}></View>\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 12,\r\n                                fontWeight: \"500\",\r\n                                color: item.color,\r\n                              }}\r\n                            >\r\n                              {item.time}\r\n                            </Text>\r\n                          </View>\r\n                        );\r\n                      })}\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              );\r\n            })}\r\n          </ScrollView>\r\n        </View>\r\n\r\n        {/* --------------------chartCol */}\r\n        <View>\r\n          <View style={[styles.salectChart, { zIndex: 10 }]}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setModalVisibleSelect(!modalVisibleSelect);\r\n              }}\r\n            >\r\n              <View style={styles.chartPicker}>\r\n                <Text style={styles.textTitleHeader}>{pickerValueSelect}</Text>\r\n\r\n                <Ionicons name=\"caret-down\" size={20} color=\"#fff\" />\r\n              </View>\r\n            </TouchableOpacity>\r\n            {modalVisibleSelect && (\r\n              <View style={[styles.listPicker, { width: windowWidth - 30 }]}>\r\n                <View style={{ borderRadius: 4 }}>\r\n                  <View style={{ paddingVertical: 5 }}>\r\n                    {dataModelSelect.map((item, index) => {\r\n                      return (\r\n                        <TouchableOpacity\r\n                          key={index}\r\n                          onPress={() => handleCheck(item.value)}\r\n                          style={{\r\n                            paddingVertical: 10,\r\n                            flexDirection: \"row\",\r\n                            paddingLeft: 15,\r\n                          }}\r\n                        >\r\n                          {selectedChart.includes(item.value) ? (\r\n                            <View\r\n                              style={[\r\n                                styles.iconUnCheck,\r\n                                {\r\n                                  alignItems: \"center\",\r\n                                  justifyContent: \"center\",\r\n                                },\r\n                              ]}\r\n                            >\r\n                              <SvgUri source={Icons.iconTickCheckBox}></SvgUri>\r\n                            </View>\r\n                          ) : (\r\n                            <View style={styles.iconUnCheck}></View>\r\n                          )}\r\n\r\n                          <Text style={[styles.textTitleHeader]}>{item.label}</Text>\r\n                        </TouchableOpacity>\r\n                      );\r\n                    })}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            )}\r\n          </View>\r\n          <ScrollView\r\n            horizontal={true}\r\n            endFillColor={colors.backgroundApp}\r\n            style={{ backgroundColor: colors.backgroundApp }}\r\n            indicatorStyle={\"white\"}\r\n          >\r\n            <View style={{ paddingHorizontal: 15 }}>\r\n              <View>\r\n                <VictoryChart\r\n                  domainPadding={{ x: 30, y: 40 }}\r\n                  padding={{ top: 5, bottom: 50, left: 90, right: 80 }}\r\n                  width={titleColumnChart.length > 4 ? titleColumnChart.length * 80 : windowWidth}\r\n                  containerComponent={<VictoryVoronoiContainer />}\r\n                  style={{ parent: { cursor: \"pointer\" } }}\r\n                >\r\n                  <VictoryChart>\r\n                    <VictoryLabel\r\n                      y={170}\r\n                      x={5}\r\n                      angle={-90}\r\n                      style={{\r\n                        fontSize: 10,\r\n                        fontStyle: \"normal\",\r\n                        fill: colors.colorText,\r\n                      }}\r\n                      text={\"Amount - Average TC\"}\r\n                    />\r\n                    <VictoryLabel\r\n                      y={170}\r\n                      x={titleColumnChart.length > 4 ? titleColumnChart.length * 80 - 30 : windowWidth - 30}\r\n                      angle={-90}\r\n                      style={{\r\n                        fontSize: 10,\r\n                        fontStyle: \"normal\",\r\n                        fill: colors.colorText,\r\n                      }}\r\n                      text={\"Transaction - Promotion\"}\r\n                    />\r\n                    <VictoryLabel\r\n                      y={250}\r\n                      x={70}\r\n                      style={{\r\n                        fontSize: 10,\r\n                        fontStyle: \"normal\",\r\n                        fill: colors.colorChartLine,\r\n                      }}\r\n                      text={\"0\"}\r\n                    />\r\n                    <VictoryLabel\r\n                      y={250}\r\n                      x={titleColumnChart.length > 4 ? titleColumnChart.length * 80 - 65 : windowWidth - 65}\r\n                      style={{\r\n                        fontSize: 10,\r\n                        fontStyle: \"normal\",\r\n                        fill: colors.colorChartLine,\r\n                      }}\r\n                      text={\"0\"}\r\n                    />\r\n                    <VictoryAxis\r\n                      tickValues={tickValueMoney}\r\n                      tickFormat={t => `${Math.round(t)}.000.000`}\r\n                      dependentAxis\r\n                      orientation=\"left\"\r\n                      style={whiteStyle}\r\n                    />\r\n                    <VictoryAxis tickValues={titleColumnChart} style={whiteStyleBottom} orientation=\"bottom\" />\r\n\r\n                    <VictoryAxis\r\n                      tickValues={tickValueMoney}\r\n                      tickFormat={t => `${Math.round(t)}`}\r\n                      dependentAxis\r\n                      orientation=\"right\"\r\n                      style={whiteStyle}\r\n                    />\r\n                  </VictoryChart>\r\n                  {/* ----------value of chart--- */}\r\n                  <VictoryGroup\r\n                    offset={!pickerValueChartDisplay.totalAmount && pickerValueChartDisplay.averageTC ? 0 : 15}\r\n                    style={{ data: { width: 15 } }}\r\n                    colorScale={\r\n                      !pickerValueChartDisplay.totalAmount && pickerValueChartDisplay.averageTC\r\n                        ? [\"#00DFFD\"]\r\n                        : [\"#A24DE4\", \"#00DFFD\"]\r\n                    }\r\n                  >\r\n                    {pickerValueChartDisplay.totalAmount && (\r\n                      <VictoryBar\r\n                        animate={{\r\n                          duration: 2000,\r\n                          onLoad: { duration: 1000 },\r\n                        }}\r\n                        data={handleDataChartCol(dataChartCol.totalAmount, \"totalAmount\")}\r\n                      />\r\n                    )}\r\n                    {pickerValueChartDisplay.averageTC && (\r\n                      <VictoryBar\r\n                        animate={{\r\n                          duration: 2000,\r\n                          onLoad: { duration: 1000 },\r\n                        }}\r\n                        data={handleDataChartCol(dataChartCol.averageTC, \"averageTC\")}\r\n                      />\r\n                    )}\r\n                  </VictoryGroup>\r\n                  {/* ------------ */}\r\n                  {/* ----------------Line1 */}\r\n                  {pickerValueChartDisplay.transaction && (\r\n                    <VictoryGroup data={handleDataChartLine(dataChartCol.transaction)} color=\"#5F8BFC\">\r\n                      <VictoryLine interpolation=\"natural\" />\r\n                      <VictoryScatter\r\n                        size={3}\r\n                        style={{\r\n                          data: {\r\n                            fill: ({ datum }) => datum.fill,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </VictoryGroup>\r\n                  )}\r\n\r\n                  {/* ----------------Line2 */}\r\n                  {pickerValueChartDisplay.promotion && (\r\n                    <VictoryGroup data={handleDataChartLine(dataChartCol.promotion)} color=\"#FDB441\">\r\n                      <VictoryLine interpolation=\"natural\" />\r\n                      <VictoryScatter\r\n                        size={3}\r\n                        style={{\r\n                          data: {\r\n                            fill: ({ datum }) => datum.fill,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </VictoryGroup>\r\n                  )}\r\n                </VictoryChart>\r\n              </View>\r\n              <View style={styles.rowTableChart}>\r\n                <View style={{ flex: 2.5 }}>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {/* <SvgUri source={Icons.Ellipse_foc} /> */}\r\n                    <View\r\n                      style={{\r\n                        width: 8,\r\n                        height: 8,\r\n                        backgroundColor: \"#A24DE4\",\r\n                      }}\r\n                    ></View>\r\n                    <Text style={[styles.textNoteChart, { color: \"#A24DE4\" }]}>Total Amount</Text>\r\n                  </View>\r\n                </View>\r\n                <View style={{ flex: 2.5 }}>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        width: 8,\r\n                        height: 8,\r\n                        backgroundColor: \"#06C2FF\",\r\n                      }}\r\n                    ></View>\r\n                    <Text style={[styles.textNoteChart, { color: \"#06C2FF\" }]}>Average TC</Text>\r\n                  </View>\r\n                </View>\r\n                <View style={{ flex: 2.5 }}>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        width: 8,\r\n                        height: 2,\r\n                        backgroundColor: \"#5F8BFC\",\r\n                      }}\r\n                    ></View>\r\n                    <Text style={[styles.textNoteChart, { color: \"#5F8BFC\" }]}>Transaction</Text>\r\n                  </View>\r\n                </View>\r\n                <View style={{ flex: 2.5 }}>\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        width: 8,\r\n                        height: 2,\r\n                        backgroundColor: \"#FDB441\",\r\n                      }}\r\n                    ></View>\r\n                    <Text style={[styles.textNoteChart, { color: \"#FDB441\" }]}>Promotion</Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* -----------Modal---- */}\r\n      {/* <ModalRadioButton\r\n        title={pickerTopValueCache.label}\r\n        visible={modalRadioButton}\r\n        data={listPickerTopChild}\r\n        onRequestClose={() => {\r\n          handleClosePickerChild();\r\n        }}\r\n        onRequestSend={value => {\r\n          handlePickerChild(value);\r\n        }}\r\n      ></ModalRadioButton> */}\r\n      {isLoading && <DialogAwait></DialogAwait>}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default OnlinePaymentMethod;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n  line: {\r\n    height: 10,\r\n    backgroundColor: colors.backgroundTab,\r\n  },\r\n\r\n  titleHeader: {\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.colorLine,\r\n  },\r\n\r\n  textTitleHeader: {\r\n    color: colors.colorText,\r\n    fontWeight: \"500\",\r\n    fontSize: 14,\r\n  },\r\n  text16: {\r\n    color: colors.colorText,\r\n    fontWeight: \"500\",\r\n    fontSize: 16,\r\n  },\r\n  textGray: {\r\n    color: colors.colorLine,\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n  itemFieldSells: {\r\n    height: 77,\r\n    backgroundColor: \"#414141\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 4,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n  },\r\n  viewWallet: {\r\n    backgroundColor: \"#675E50\",\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginHorizontal: 15,\r\n    marginTop: 4,\r\n  },\r\n  dot: {\r\n    width: 8,\r\n    height: 8,\r\n    marginRight: 4,\r\n    borderRadius: 8,\r\n  },\r\n\r\n  //chartCol\r\n  rowTableChart: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    height: 30,\r\n  },\r\n  textNoteChart: {\r\n    color: colors.colorText,\r\n    textAlign: \"center\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: 12,\r\n    lineHeight: 20,\r\n    marginLeft: 4,\r\n  },\r\n  lineItem: {\r\n    height: 0.5,\r\n    backgroundColor: colors.colorLine,\r\n  },\r\n  salectChart: {\r\n    paddingTop: 15,\r\n    paddingHorizontal: 15,\r\n  },\r\n\r\n  chartPicker: {\r\n    height: 40,\r\n    flexDirection: \"row\",\r\n    backgroundColor: colors.grayLight,\r\n    borderRadius: 4,\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n\r\n  listPicker: {\r\n    position: \"absolute\",\r\n    backgroundColor: colors.grayLight,\r\n    borderRadius: 4,\r\n    borderColor: colors.backgroundApp,\r\n    top: 60,\r\n    left: 15,\r\n  },\r\n  iconUnCheck: {\r\n    borderRadius: 4,\r\n    backgroundColor: \"transparent\",\r\n    width: 18,\r\n    height: 18,\r\n    borderColor: \"#fff\",\r\n    borderWidth: 1,\r\n    marginRight: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}