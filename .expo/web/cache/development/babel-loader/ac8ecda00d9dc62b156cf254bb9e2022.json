{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\login\\\\ForgotPassword.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { colors } from \"../../../utils/Colors\";\nimport { ValidateEmail } from \"../../../components/management/utils\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nvar ForgotPassword = function ForgotPassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubmit = _useState2[0],\n      setIssubmit = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      txtError = _useState6[0],\n      setTxtError = _useState6[1];\n\n  var onChangeInput = function onChangeInput(value) {\n    setInput(value);\n\n    if (value && input) {\n      setTxtError(\"\");\n    }\n  };\n\n  var clearInput = function clearInput() {\n    setInput(\"\");\n  };\n\n  var onSubmit = function onSubmit() {\n    var validate;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            validate = validateForm();\n\n            if (validate) {\n              props.navigation.navigate(\"Verification\", {\n                input: input\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var validateForm = function validateForm() {\n    if (input === \"\") {\n      setTxtError(\"PhoneNumber or Email cannot be blank!\");\n      return false;\n    }\n\n    if (!ValidateEmail(input)) {\n      setTxtError(\"Email invalid!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  return React.createElement(TouchableNativeFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, isSubmit ? React.createElement(View, {\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#988050\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.rowlogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formlogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Please enter your telephone or email address and we will send your password by email immediately.\"), React.createElement(View, {\n    style: {\n      height: 56\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, txtError == \"\" ? React.createElement(React.Fragment, null) : React.createElement(Text, {\n    style: styles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 70\n    }\n  }, txtError)), React.createElement(View, {\n    style: [styles.viewInput, {\n      borderColor: txtError == \"\" ? colors.black : \"red\",\n      borderWidth: 1\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    value: input,\n    onChangeText: onChangeInput,\n    placeholder: \"Telephone or Email\",\n    placeholderTextColor: \"#BDBDBD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }))), React.createElement(LinearGradient, {\n    style: styles.button,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      onSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Send\")))))));\n};\n\nexport default ForgotPassword;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#17151C\"\n  },\n  title: {\n    color: colors.gray,\n    fontSize: 14,\n    textAlign: \"center\",\n    marginBottom: 30,\n    fontWeight: \"400\"\n  },\n  textButton: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 17\n  },\n  rowlogin: {\n    flex: 7,\n    justifyContent: \"space-between\",\n    paddingTop: 60,\n    paddingBottom: 0\n  },\n  formlogin: {\n    justifyContent: \"flex-start\",\n    paddingRight: 30,\n    paddingLeft: 30\n  },\n  viewInput: {\n    flexDirection: \"row\",\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\n    height: 46,\n    borderRadius: 4,\n    zIndex: 1\n  },\n  textInput: {\n    color: \"white\",\n    opacity: 1,\n    zIndex: 3,\n    width: \"100%\",\n    paddingLeft: 15,\n    fontSize: 14,\n    fontWeight: \"400\"\n  },\n  button: {\n    marginTop: 32,\n    borderRadius: 4,\n    height: 46,\n    justifyContent: \"center\"\n  },\n  errorText: {\n    color: colors.red,\n    marginLeft: 5,\n    fontWeight: \"500\",\n    fontSize: 12,\n    marginStart: 15\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/login/ForgotPassword.tsx"],"names":["React","useState","colors","ValidateEmail","LinearGradient","ForgotPassword","props","isSubmit","setIssubmit","input","setInput","txtError","setTxtError","onChangeInput","value","clearInput","onSubmit","validate","validateForm","navigation","navigate","Keyboard","dismiss","styles","container","justifyContent","rowlogin","formlogin","title","height","errorText","viewInput","borderColor","black","borderWidth","textInput","button","textButton","StyleSheet","create","flex","backgroundColor","color","gray","fontSize","textAlign","marginBottom","fontWeight","paddingTop","paddingBottom","paddingRight","paddingLeft","flexDirection","borderRadius","zIndex","opacity","width","marginTop","red","marginLeft","marginStart"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Keyboard,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { AuthorStackParamList } from \"../../../types\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { ValidateEmail } from \"../../../components/management/utils\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { getOPTCode } from \"../../../netWorking/authService\";\r\ninterface Props {\r\n  navigation: StackNavigationProp<AuthorStackParamList>;\r\n}\r\nconst ForgotPassword = (props: Props) => {\r\n  const [isSubmit, setIssubmit] = useState(false);\r\n  const [input, setInput] = useState<string>(\"\");\r\n  const [txtError, setTxtError] = useState(\"\");\r\n\r\n  const onChangeInput = (value: string) => {\r\n    setInput(value);\r\n    if (value && input) {\r\n      setTxtError(\"\");\r\n    }\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setInput(\"\");\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    let validate = validateForm();\r\n    if (validate) {\r\n      props.navigation.navigate(\"Verification\", { input });\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (input === \"\") {\r\n      setTxtError(\"PhoneNumber or Email cannot be blank!\");\r\n      return false;\r\n    }\r\n    if (!ValidateEmail(input)) {\r\n      setTxtError(\"Email invalid!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  return (\r\n    <TouchableNativeFeedback onPress={Keyboard.dismiss}>\r\n      <View style={styles.container}>\r\n        {isSubmit ? (\r\n          <View style={{ justifyContent: \"center\" }}>\r\n            <ActivityIndicator size=\"large\" color=\"#988050\" />\r\n          </View>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <View style={styles.rowlogin}>\r\n          <View style={styles.formlogin}>\r\n            <Text style={styles.title}>\r\n              Please enter your telephone or email address and we will send your password by email immediately.\r\n            </Text>\r\n            <View style={{ height: 56 }}>\r\n              <View style={{ height: 15 }}>{txtError == \"\" ? <></> : <Text style={styles.errorText}>{txtError}</Text>}</View>\r\n              <View\r\n                style={[\r\n                  styles.viewInput,\r\n                  {\r\n                    borderColor: txtError == \"\" ? colors.black : \"red\",\r\n                    borderWidth: 1,\r\n                  },\r\n                ]}\r\n              >\r\n                <TextInput\r\n                  style={styles.textInput}\r\n                  value={input}\r\n                  onChangeText={onChangeInput}\r\n                  placeholder=\"Telephone or Email\"\r\n                  placeholderTextColor=\"#BDBDBD\"\r\n                ></TextInput>\r\n              </View>\r\n            </View>\r\n            <LinearGradient style={styles.button} colors={[\"#DAB451\", \"#988050\"]}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  onSubmit();\r\n                }}\r\n              >\r\n                <Text style={styles.textButton}>Send</Text>\r\n              </TouchableOpacity>\r\n            </LinearGradient>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </TouchableNativeFeedback>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#17151C\",\r\n  },\r\n  title: {\r\n    color: colors.gray,\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n    fontWeight: \"400\",\r\n  },\r\n  textButton: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 17,\r\n  },\r\n  rowlogin: {\r\n    flex: 7,\r\n    justifyContent: \"space-between\",\r\n    paddingTop: 60,\r\n    paddingBottom: 0,\r\n  },\r\n  formlogin: {\r\n    justifyContent: \"flex-start\",\r\n    paddingRight: 30,\r\n    paddingLeft: 30,\r\n  },\r\n  viewInput: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\r\n    height: 46,\r\n    borderRadius: 4,\r\n    // marginBottom: 20,\r\n    zIndex: 1,\r\n  },\r\n  textInput: {\r\n    color: \"white\",\r\n    opacity: 1,\r\n    zIndex: 3,\r\n    width: \"100%\",\r\n    paddingLeft: 15,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n  button: {\r\n    marginTop: 32,\r\n    borderRadius: 4,\r\n    height: 46,\r\n    justifyContent: \"center\",\r\n  },\r\n  errorText: {\r\n    color: colors.red,\r\n    marginLeft: 5,\r\n    fontWeight: \"500\",\r\n    fontSize: 12,\r\n    marginStart: 15,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}