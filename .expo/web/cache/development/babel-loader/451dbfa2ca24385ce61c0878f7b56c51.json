{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabProfile\\\\setting.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { colors } from \"../../../utils/Colors\";\nimport SvgUri from \"react-native-svg-uri\";\nimport { Icons } from \"../../../assets\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { _getUserId } from \"../../../netWorking/authService\";\nimport { UserService } from \"../../../netWorking/userService\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport default function Setting(router) {\n  var _this = this;\n\n  var dataCurrencySetting = [{\n    label: \"Full currency\",\n    value: \"Display 1,000,000K\",\n    id: 0\n  }, {\n    label: \"K currency\",\n    value: \"Display 1000K\",\n    id: 1\n  }, {\n    label: \"Mil currency\",\n    value: \"Display 1.0 Mil\",\n    id: 2\n  }];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      sms = _useState2[0],\n      setSms = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inApp = _useState4[0],\n      setInApp = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      security = _useState8[0],\n      setSecurity = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currencySettingId = _useState10[0],\n      setCurrencySettingId = _useState10[1];\n\n  var _useState11 = useState(\"0\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputWorkingHour = _useState12[0],\n      setInputWorkingHour = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalConfirm = _useState14[0],\n      setModalConfirm = _useState14[1];\n\n  var toggleSwitchSms = function toggleSwitchSms() {\n    return setSms(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var toggleSwitchInApp = function toggleSwitchInApp() {\n    return setInApp(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var toggleSwitchEmail = function toggleSwitchEmail() {\n    return setEmail(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var toggleSwitchSecurity = function toggleSwitchSecurity() {\n    return _regeneratorRuntime.async(function toggleSwitchSecurity$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSecurity(function (previousState) {\n              return !previousState;\n            });\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('security', \"\" + +!security));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  };\n\n  function _getAsyncStorage() {\n    var res;\n    return _regeneratorRuntime.async(function _getAsyncStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('security'));\n\n          case 3:\n            res = _context2.sent;\n            setSecurity(!!+res);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", _context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      input = _useState16[0],\n      setInput = _useState16[1];\n\n  var onConfirm = function onConfirm() {\n    return _regeneratorRuntime.async(function onConfirm$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            input.isSendSMS = sms;\n            input.isSendInApp = inApp;\n            input.isSendMail = email;\n            input.currencyMode = currencySettingId;\n            input.workingHour = inputWorkingHour;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('currencyMode', currencySettingId.toString()));\n\n          case 7:\n            updateUser(input);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateUser = function updateUser(value) {\n    var user;\n    return _regeneratorRuntime.async(function updateUser$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(UserService.updateUser(value));\n\n          case 2:\n            user = _context4.sent;\n\n            if (user != null) {\n              setModalConfirm(!modalConfirm);\n              setInput(user);\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function loadDataUser() {\n    var userId, res;\n    return _regeneratorRuntime.async(function loadDataUser$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(_getUserId());\n\n          case 2:\n            userId = _context5.sent;\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(UserService.getUserById(userId));\n\n          case 5:\n            res = _context5.sent;\n\n            if (res) {\n              setInput(res[0]);\n              setSms(res[0].isSendSMS ? true : false);\n              setInApp(res[0].isSendInApp ? true : false);\n              setEmail(res[0].isSendMail ? true : false);\n              setInputWorkingHour(res[0].workingHour ? res[0].workingHour.toString() : \"0\");\n\n              if (res[0].currencyMode) {\n                setCurrencySettingId(res[0].currencyMode);\n              }\n            }\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadDataUser();\n\n    _getAsyncStorage();\n  }, []);\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isKeyboardVisible = _useState18[0],\n      setKeyboardVisible = _useState18[1];\n\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setKeyboardVisible(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardVisible(false);\n    });\n    return function () {\n      keyboardDidHideListener.remove();\n      keyboardDidShowListener.remove();\n    };\n  }, []);\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.topSpace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.partBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Notification Setting\"), React.createElement(View, {\n    style: styles.containerSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.itemSetting, {\n      marginBottom: 24\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Send In - App Notification\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#303030\",\n      true: \"#DAB451\"\n    },\n    thumbColor: \"#fff\",\n    onValueChange: toggleSwitchInApp,\n    value: inApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.itemSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Send E-Mail\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#303030\",\n      true: \"#DAB451\"\n    },\n    thumbColor: \"#fff\",\n    onValueChange: toggleSwitchEmail,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  })))), React.createElement(View, {\n    style: styles.topSpace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.partBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Security setting\"), React.createElement(View, {\n    style: styles.containerSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.itemSetting, {}],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"FaceID/TouchID\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#303030\",\n      true: \"#DAB451\"\n    },\n    thumbColor: \"#fff\",\n    onValueChange: toggleSwitchSecurity,\n    value: security,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })))), React.createElement(View, {\n    style: styles.topSpace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.partBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Currency Setting\"), React.createElement(View, {\n    style: styles.containerSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, dataCurrencySetting.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        setCurrencySettingId(item.id);\n      },\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: index === dataCurrencySetting.length - 1 ? 0 : 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: [styles.title, {\n        marginBottom: 4\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, item.label), React.createElement(Text, {\n      style: [styles.textValue, {}],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, item.value)), React.createElement(SvgUri, {\n      source: currencySettingId === item.id ? Icons.iconRadioButton : Icons.iconRadioButtonOff,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }));\n  }))), React.createElement(View, {\n    style: styles.topSpace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.partBody, {\n      marginBottom: isKeyboardVisible ? 220 : 0\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, React.createElement(LinearGradient, {\n    style: styles.button,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalConfirm(!modalConfirm);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.colorText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"Confirm\")))), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalConfirm,\n    statusBarTranslucent: true,\n    onRequestClose: function onRequestClose() {\n      setModalConfirm(!modalConfirm);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.containerModal],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.headerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, \"Actual Store Working Hours\")), React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingVertical: 25,\n      paddingHorizontal: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: Icons.iconQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: colors.colorText,\n      textAlign: \"center\",\n      marginTop: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, \"Are you sure want to change this information?\")), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginTop: 20,\n      marginBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalConfirm(!modalConfirm);\n    },\n    style: [styles.buttonSend, {\n      backgroundColor: \"#636363\",\n      flex: 1,\n      marginRight: 8\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, \"No\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      onConfirm();\n    },\n    style: {\n      flex: 1,\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, React.createElement(LinearGradient, {\n    style: styles.buttonSend,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, \"Yes\"))))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  partBody: {\n    paddingVertical: 25,\n    paddingHorizontal: 15\n  },\n  topSpace: {\n    width: \"100%\",\n    height: 10,\n    backgroundColor: \"#2a2731\"\n  },\n  itemSetting: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 16,\n    color: colors.colorText\n  },\n  textValue: {\n    fontSize: 12,\n    color: colors.colorLine\n  },\n  line: {\n    height: 1,\n    backgroundColor: colors.colorLine,\n    marginVertical: 16\n  },\n  textTitle: {\n    color: colors.gray,\n    fontSize: 12,\n    fontWeight: \"600\"\n  },\n  containerSetting: {\n    paddingHorizontal: 9,\n    paddingVertical: 24\n  },\n  button: {\n    flex: 1,\n    height: 40,\n    borderRadius: 4,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    flex: 2,\n    height: 40,\n    backgroundColor: \"#303030\",\n    marginRight: 12,\n    borderRadius: 4,\n    paddingHorizontal: 5,\n    color: colors.colorText\n  },\n  textButton: {\n    fontSize: 16,\n    color: colors.colorText\n  },\n  buttonSend: {\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  containerModal: {\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modal: {\n    backgroundColor: \"#414141\",\n    borderRadius: 4,\n    padding: 15,\n    width: \"90%\"\n  },\n  headerModal: {\n    borderBottomWidth: 0.5,\n    borderBottomColor: colors.colorLine,\n    paddingBottom: 15,\n    alignItems: \"center\"\n  },\n  textMain: {\n    color: \"#DAB451\",\n    fontWeight: \"500\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabProfile/setting.tsx"],"names":["React","useState","useEffect","colors","SvgUri","Icons","LinearGradient","ScrollView","_getUserId","UserService","AsyncStorage","Setting","router","dataCurrencySetting","label","value","id","sms","setSms","inApp","setInApp","email","setEmail","security","setSecurity","currencySettingId","setCurrencySettingId","inputWorkingHour","setInputWorkingHour","modalConfirm","setModalConfirm","toggleSwitchSms","previousState","toggleSwitchInApp","toggleSwitchEmail","toggleSwitchSecurity","setItem","_getAsyncStorage","getItem","res","input","setInput","onConfirm","isSendSMS","isSendInApp","isSendMail","currencyMode","workingHour","toString","updateUser","user","loadDataUser","userId","getUserById","isKeyboardVisible","setKeyboardVisible","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","remove","styles","container","topSpace","partBody","textTitle","containerSetting","itemSetting","marginBottom","title","false","true","map","item","index","flexDirection","alignItems","justifyContent","length","textValue","iconRadioButton","iconRadioButtonOff","button","color","colorText","containerModal","modal","headerModal","textMain","paddingVertical","paddingHorizontal","iconQuestion","textAlign","marginTop","buttonSend","backgroundColor","flex","marginRight","textButton","marginLeft","StyleSheet","create","backgroundApp","width","height","fontSize","colorLine","line","marginVertical","gray","fontWeight","borderRadius","padding","borderBottomWidth","borderBottomColor","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  Image,\r\n  Switch,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Modal,Keyboard\r\n} from \"react-native\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { TabProfileParamList } from \"../../../types\";\r\n\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport { Icons } from \"../../../assets\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { _getUserId, _addCurrency } from \"../../../netWorking/authService\";\r\nimport { UserService } from \"../../../netWorking/userService\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nexport interface Props {\r\n  route: RouteProp<TabProfileParamList, \"Setting\">;\r\n}\r\nexport default function Setting(router: Props) {\r\n  const dataCurrencySetting = [\r\n    { label: \"Full currency\", value: \"Display 1,000,000K\", id: 0 },\r\n    { label: \"K currency\", value: \"Display 1000K\", id: 1 },\r\n    { label: \"Mil currency\", value: \"Display 1.0 Mil\", id: 2 },\r\n  ];\r\n  const [sms, setSms] = useState(false);\r\n  const [inApp, setInApp] = useState(false);\r\n  const [email, setEmail] = useState(false);\r\n  const [security, setSecurity] = useState(false);\r\n  const [currencySettingId, setCurrencySettingId] = useState(0);\r\n  const [inputWorkingHour, setInputWorkingHour] = useState(\"0\");\r\n  const [modalConfirm, setModalConfirm] = useState(false);\r\n  const toggleSwitchSms = () => setSms(previousState => !previousState);\r\n  const toggleSwitchInApp = () => setInApp(previousState => !previousState);\r\n  const toggleSwitchEmail = () => setEmail(previousState => !previousState);\r\n  const toggleSwitchSecurity = async() => {\r\n    setSecurity(previousState => !previousState)\r\n    try {\r\n        await AsyncStorage.setItem('security',`${+!security}`);\r\n      } catch (error) {\r\n      }\r\n  }\r\n  async function _getAsyncStorage() {\r\n      try {\r\n          let res= await AsyncStorage.getItem('security');\r\n          setSecurity(!!+res)\r\n      } catch (error) {\r\n          return error;\r\n      }\r\n  }\r\n  //\r\n  const [input, setInput] = useState<UserModel>({});\r\n  //\r\n  const onConfirm = async () => {\r\n    input.isSendSMS = sms;\r\n    input.isSendInApp = inApp;\r\n    input.isSendMail = email;\r\n    input.currencyMode = currencySettingId;\r\n    input.workingHour = inputWorkingHour;\r\n    // await _addCurrency(currencySettingId)\r\n    await AsyncStorage.setItem('currencyMode',currencySettingId.toString());\r\n    updateUser(input);\r\n  };\r\n  //\r\n  const updateUser = async (value) => {\r\n    const user = await UserService.updateUser(value);\r\n    if (user != null) {\r\n      setModalConfirm(!modalConfirm);\r\n      setInput(user);\r\n    }\r\n  }\r\n  //\r\n  async function loadDataUser() {\r\n    let userId = await _getUserId();\r\n    const res = await UserService.getUserById(userId);\r\n    if (res) {\r\n      setInput(res[0]);\r\n      setSms(res[0].isSendSMS ? true : false);\r\n      setInApp(res[0].isSendInApp ? true : false);\r\n      setEmail(res[0].isSendMail ? true : false);\r\n      setInputWorkingHour(res[0].workingHour ? res[0].workingHour.toString() : \"0\");\r\n      if (res[0].currencyMode) {\r\n        setCurrencySettingId(res[0].currencyMode);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadDataUser();\r\n    _getAsyncStorage();\r\n  }, [])\r\n  const [isKeyboardVisible, setKeyboardVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n     const keyboardDidShowListener = Keyboard.addListener(\r\n       'keyboardDidShow',\r\n       () => {\r\n         setKeyboardVisible(true); // or some other action\r\n       }\r\n     );\r\n     const keyboardDidHideListener = Keyboard.addListener(\r\n       'keyboardDidHide',\r\n       () => {\r\n         setKeyboardVisible(false); // or some other action\r\n       }\r\n     );\r\n \r\n     return () => {\r\n       keyboardDidHideListener.remove();\r\n       keyboardDidShowListener.remove();\r\n     };\r\n   }, []);\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.topSpace}></View>\r\n      <View style={styles.partBody}>\r\n        <Text style={styles.textTitle}>Notification Setting</Text>\r\n        <View style={styles.containerSetting}>\r\n          {/* <View style={[styles.itemSetting, { marginBottom: 24 }]}>\r\n            <Text style={styles.title}>Send SMS</Text>\r\n            <Switch\r\n              trackColor={{ false: \"#303030\", true: \"#DAB451\" }}\r\n              thumbColor={\"#fff\"}\r\n              onValueChange={toggleSwitchSms}\r\n              value={sms}\r\n            />\r\n          </View> */}\r\n          <View style={[styles.itemSetting, { marginBottom: 24 }]}>\r\n            <Text style={styles.title}>Send In - App Notification</Text>\r\n            <Switch\r\n              trackColor={{ false: \"#303030\", true: \"#DAB451\" }}\r\n              thumbColor={\"#fff\"}\r\n              onValueChange={toggleSwitchInApp}\r\n              value={inApp}\r\n            />\r\n          </View>\r\n          <View style={styles.itemSetting}>\r\n            <Text style={styles.title}>Send E-Mail</Text>\r\n            <Switch\r\n              trackColor={{ false: \"#303030\", true: \"#DAB451\" }}\r\n              thumbColor={\"#fff\"}\r\n              onValueChange={toggleSwitchEmail}\r\n              value={email}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n      <View style={styles.topSpace}></View>\r\n      <View style={styles.partBody}>\r\n        <Text style={styles.textTitle}>Security setting</Text>\r\n        <View style={styles.containerSetting}>\r\n          <View style={[styles.itemSetting, { }]}>\r\n            <Text style={styles.title}>FaceID/TouchID</Text>\r\n            <Switch\r\n              trackColor={{ false: \"#303030\", true: \"#DAB451\" }}\r\n              thumbColor={\"#fff\"}\r\n              onValueChange={toggleSwitchSecurity}\r\n              value={security}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n      <View style={styles.topSpace}></View>\r\n      <View style={styles.partBody}>\r\n        <Text style={styles.textTitle}>Currency Setting</Text>\r\n        <View style={styles.containerSetting}>\r\n          {dataCurrencySetting.map((item, index) => {\r\n            return (\r\n              <TouchableOpacity\r\n                key={index}\r\n                onPress={() => {\r\n                  setCurrencySettingId(item.id)\r\n                }}\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  marginBottom:\r\n                    index === dataCurrencySetting.length - 1 ? 0 : 24,\r\n                }}\r\n              >\r\n                <View>\r\n                  <Text style={[styles.title, { marginBottom: 4 }]}>\r\n                    {item.label}\r\n                  </Text>\r\n                  <Text style={[styles.textValue, {}]}>{item.value}</Text>\r\n                </View>\r\n                <SvgUri\r\n                  source={\r\n                    currencySettingId === item.id ? Icons.iconRadioButton : Icons.iconRadioButtonOff\r\n                  }\r\n                />\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n      </View>\r\n      <View style={styles.topSpace}></View>\r\n      <View style={[styles.partBody,{marginBottom:isKeyboardVisible?220:0}]}>\r\n        {/* <Text style={styles.textTitle}>Actual Store Working Hours</Text>\r\n        <View style={{ paddingVertical: 9 }}>\r\n          <View style={[{ marginBottom: 24 }]}>\r\n            <TextInput\r\n              keyboardType=\"numeric\"\r\n              style={[styles.input,{ marginRight: 0, marginBottom:32}]}\r\n              value={inputWorkingHour}\r\n              onChangeText={text => setInputWorkingHour(text)}\r\n            ></TextInput>\r\n            \r\n          </View>\r\n        </View> */}\r\n        <LinearGradient\r\n              style={styles.button}\r\n              colors={[\"#DAB451\", \"#988050\"]}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setModalConfirm(!modalConfirm);\r\n                }}\r\n              >\r\n                <Text style={{ color: colors.colorText }}>Confirm</Text>\r\n              </TouchableOpacity>\r\n            </LinearGradient>\r\n      </View>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalConfirm}\r\n        statusBarTranslucent={true}\r\n        onRequestClose={() => {\r\n          setModalConfirm(!modalConfirm);\r\n        }}\r\n      >\r\n        <View style={[styles.containerModal]}>\r\n          <View style={styles.modal}>\r\n            <View style={styles.headerModal}>\r\n              <Text style={styles.textMain}>Actual Store Working Hours</Text>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                paddingVertical: 25,\r\n                paddingHorizontal: 50,\r\n              }}\r\n            >\r\n              <Image source={Icons.iconQuestion} />\r\n              <Text style={{ color: colors.colorText, textAlign: \"center\", marginTop: 25 }}>\r\n                Are you sure want to change this information?\r\n              </Text>\r\n            </View>\r\n\r\n            {/* Button */}\r\n            <View\r\n              style={{ flexDirection: \"row\", marginTop: 20, marginBottom: 5 }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setModalConfirm(!modalConfirm);\r\n                }}\r\n                style={[\r\n                  styles.buttonSend,\r\n                  { backgroundColor: \"#636363\", flex: 1, marginRight: 8 },\r\n                ]}\r\n              >\r\n                <Text style={styles.textButton}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  onConfirm();\r\n                }}\r\n                style={{ flex: 1, marginLeft: 8 }}\r\n              >\r\n                <LinearGradient\r\n                  style={styles.buttonSend}\r\n                  colors={[\"#DAB451\", \"#988050\"]}\r\n                >\r\n                  <Text style={styles.textButton}>Yes</Text>\r\n                </LinearGradient>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n  partBody: {\r\n    paddingVertical: 25,\r\n    paddingHorizontal: 15,\r\n  },\r\n  topSpace: {\r\n    width: \"100%\",\r\n    height: 10,\r\n    backgroundColor: \"#2a2731\",\r\n  },\r\n  itemSetting: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    color: colors.colorText,\r\n  },\r\n  textValue: {\r\n    fontSize: 12,\r\n    color: colors.colorLine,\r\n  },\r\n  line: {\r\n    height: 1,\r\n    backgroundColor: colors.colorLine,\r\n    marginVertical: 16,\r\n  },\r\n  textTitle: {\r\n    color: colors.gray,\r\n    fontSize: 12,\r\n    fontWeight: \"600\",\r\n  },\r\n  containerSetting: {\r\n    paddingHorizontal: 9,\r\n    paddingVertical: 24,\r\n  },\r\n\r\n  button: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderRadius: 4,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    flex: 2,\r\n    height: 40,\r\n    backgroundColor: \"#303030\",\r\n    marginRight: 12,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 5,\r\n    color: colors.colorText,\r\n  },\r\n  //modal\r\n  textButton: {\r\n    fontSize: 16,\r\n\r\n    color: colors.colorText,\r\n  },\r\n  buttonSend: {\r\n    height: 36,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n  containerModal: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modal: {\r\n    backgroundColor: \"#414141\",\r\n    borderRadius: 4,\r\n    padding: 15,\r\n    width: \"90%\",\r\n  },\r\n  headerModal: {\r\n    borderBottomWidth: 0.5,\r\n    borderBottomColor: colors.colorLine,\r\n    paddingBottom: 15,\r\n    alignItems: \"center\",\r\n  },\r\n  textMain: {\r\n    color: \"#DAB451\",\r\n    fontWeight: \"500\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}