{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport moment from \"moment\";\nimport { getMonday } from \"../../components/generalConvert/conVertMonDay\";\nvar endWeekDay = new Date().setDate(getMonday(new Date()).getDate() + 6);\n\nif (getMonday(new Date()).getMonth() < new Date().getMonth()) {\n  endWeekDay = new Date(new Date().setMonth(new Date().getMonth() - 1)).setDate(getMonday(new Date()).getDate() + 6);\n}\n\nvar initialState = {\n  fromDate: moment(getMonday(new Date())).format(\"YYYY-MM-DD 00:00\"),\n  endDate: moment(endWeekDay).format(\"YYYY-MM-DD 23:59\")\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_DATE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fromDate: action.payload.fromDate,\n        endDate: action.payload.endDate\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/redux/reducers/reportStaffReducer.tsx"],"names":["moment","getMonday","endWeekDay","Date","setDate","getDate","getMonth","setMonth","initialState","fromDate","format","endDate","reducer","state","action","type","payload"],"mappings":";;;;;;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT;AAMA,IAAIC,UAAU,GAAC,IAAIC,IAAJ,GAAWC,OAAX,CAAmBH,SAAS,CAAC,IAAIE,IAAJ,EAAD,CAAT,CAAsBE,OAAtB,KAAkC,CAArD,CAAf;;AACA,IAAGJ,SAAS,CAAC,IAAIE,IAAJ,EAAD,CAAT,CAAsBG,QAAtB,KAAiC,IAAIH,IAAJ,GAAWG,QAAX,EAApC,EAA0D;AAExDJ,EAAAA,UAAU,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWI,QAAX,CAAoB,IAAIJ,IAAJ,GAAWG,QAAX,KAAsB,CAA1C,CAAT,EAAuDF,OAAvD,CAA+DH,SAAS,CAAC,IAAIE,IAAJ,EAAD,CAAT,CAAsBE,OAAtB,KAAkC,CAAjG,CAAb;AACD;;AACD,IAAMG,YAAsB,GAAG;AAC7BC,EAAAA,QAAQ,EAAET,MAAM,CAACC,SAAS,CAAC,IAAIE,IAAJ,EAAD,CAAV,CAAN,CAA8BO,MAA9B,CAAqC,kBAArC,CADmB;AAE7BC,EAAAA,OAAO,EAAEX,MAAM,CAACE,UAAD,CAAN,CAAmBQ,MAAnB,CAA0B,kBAA1B;AAFoB,CAA/B;;AAIA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAgE;AAAA,MAA/DC,KAA+D,uEAA7CL,YAA6C;AAAA,MAA/BM,MAA+B;;AAC9E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,6CACKF,KADL;AAEEJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAAP,CAAeP,QAF3B;AAGEE,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAH1B;;AAKF;AACE,aAAOE,KAAP;AARJ;AAUD,CAXD;;AAYA,eAAeD,OAAf","sourcesContent":["import { ReportStaffActions } from \"../actions/reportStaffAction\";\r\nimport moment from \"moment\";\r\nimport { getMonday } from \"../../components/generalConvert/conVertMonDay\";\r\ntype AppState = {\r\n  fromDate: string;\r\n  endDate: string;\r\n};\r\n\r\nlet endWeekDay=new Date().setDate(getMonday(new Date()).getDate() + 6);\r\nif(getMonday(new Date()).getMonth()<new Date().getMonth()){\r\n  //check ngày đầu tuần và ngày hiện tại khác tháng\r\n  endWeekDay = new Date(new Date().setMonth(new Date().getMonth()-1)).setDate(getMonday(new Date()).getDate() + 6);\r\n} \r\nconst initialState: AppState = {\r\n  fromDate: moment(getMonday(new Date())).format(\"YYYY-MM-DD 00:00\"),\r\n  endDate: moment(endWeekDay).format(\"YYYY-MM-DD 23:59\"),\r\n};\r\nconst reducer = (state: AppState = initialState, action: ReportStaffActions) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_DATE\":\r\n      return {\r\n        ...state,\r\n        fromDate: action.payload.fromDate,\r\n        endDate: action.payload.endDate,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}