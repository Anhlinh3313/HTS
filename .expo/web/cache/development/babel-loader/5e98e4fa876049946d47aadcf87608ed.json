{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\bottomTabs\\\\TabReportScreen.tsx\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { colors } from \"../../utils/Colors\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport PickerModel from \"../../components/picker/PickerModel\";\nimport { useSelector } from \"react-redux\";\nimport { checkRole } from \"../../components/generalConvert/roles\";\nexport default function TabReportScreen(props) {\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state.accesses;\n  }),\n      access = _useSelector.access;\n\n  var dataModel = [{\n    label: \"Outlet 1\",\n    value: 1\n  }, {\n    label: \"Outlet 2\",\n    value: 2\n  }, {\n    label: \"Outlet 3\",\n    value: 3\n  }, {\n    label: \"Outlet 4\",\n    value: 4\n  }, {\n    label: \"Outlet 5\",\n    value: 5\n  }];\n\n  var _useState = useState(dataModel[0].label),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickerValue = _useState2[0],\n      setPickerValue = _useState2[1];\n\n  var toDate = new Date();\n\n  var _useState3 = useState(moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromDateTime = _useState4[0],\n      setFromDateTime = _useState4[1];\n\n  var _useState5 = useState(moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD\")),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endDateTime = _useState6[0],\n      setEndDateTime = _useState6[1];\n\n  var itemNavigate = function itemNavigate(title, screenName) {\n    return React.createElement(TouchableHighlight, {\n      underlayColor: colors.mainColor,\n      onPress: function onPress() {\n        props.navigation.navigate(screenName);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [styles.expansionPanel],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, title)));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(PickerModel, {\n    data: dataModel,\n    defaultValue: \"Outlet\",\n    onSelectedValue: function onSelectedValue(value) {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, checkRole(access, 'Sales & TC - Hourly Screen') && itemNavigate(\"SALES & TC - HOURLY\", \"SaleTCHourly\"), checkRole(access, 'Management Awareness Screen') && itemNavigate(\"MANAGEMENT AWARENESS\", \"Awareness\"), checkRole(access, 'Revenue Management (Item) Screen') && itemNavigate(\"REVENUE MANAGEMENT (ITEM)\", \"Revenue\"), itemNavigate(\"Revenue Summary\", \"RevenueSummary\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: colors.white,\n    textTransform: 'uppercase'\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  expansionPanel: {\n    flex: 1,\n    height: 60,\n    paddingLeft: 8,\n    paddingRight: 25,\n    paddingTop: 18,\n    paddingBottom: 15,\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: colors.backgroundApp\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/bottomTabs/TabReportScreen.tsx"],"names":["React","colors","useState","moment","PickerModel","useSelector","checkRole","TabReportScreen","props","state","accesses","access","dataModel","label","value","pickerValue","setPickerValue","toDate","Date","setDate","getDate","format","fromDateTime","setFromDateTime","endDateTime","setEndDateTime","itemNavigate","title","screenName","mainColor","navigation","navigate","styles","expansionPanel","container","line","flex","StyleSheet","create","backgroundColor","backgroundApp","fontSize","fontWeight","color","white","textTransform","height","backgroundTab","paddingLeft","paddingRight","paddingTop","paddingBottom","flexDirection","alignContent","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport { colors } from \"../../utils/Colors\";\r\nimport { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { TabReportParamList } from \"../../types\";\r\nimport { _getToken } from \"../../netWorking/authService\";\r\nimport DateTimePicker from \"../../components/datetimepicker\";\r\nimport PickerModel from \"../../components/picker/PickerModel\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { checkRole } from \"../../components/generalConvert/roles\";\r\ninterface Props {\r\n  navigation: StackNavigationProp<TabReportParamList>;\r\n}\r\n\r\nexport default function TabReportScreen(props: Props) {\r\n  const { access } = useSelector((state: RootState) => state.accesses);\r\n  const dataModel = [\r\n    { label: \"Outlet 1\", value: 1 },\r\n    { label: \"Outlet 2\", value: 2 },\r\n    { label: \"Outlet 3\", value: 3 },\r\n    { label: \"Outlet 4\", value: 4 },\r\n    { label: \"Outlet 5\", value: 5 },\r\n  ];\r\n  const [pickerValue, setPickerValue] = useState(dataModel[0].label);\r\n\r\n  const toDate = new Date();\r\n  const [fromDateTime, setFromDateTime] = useState(\r\n    moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [endDateTime, setEndDateTime] = useState(\r\n    moment(new Date().setDate(toDate.getDate() - 1)).format(\"YYYY-MM-DD\")\r\n  );\r\n  const itemNavigate = (\r\n    title: string,\r\n    screenName: keyof TabReportParamList\r\n  ) => {\r\n    return (\r\n      <TouchableHighlight\r\n        underlayColor={colors.mainColor}\r\n        onPress={() => {\r\n          props.navigation.navigate(screenName);\r\n        }}\r\n      >\r\n        <View style={[styles.expansionPanel]}>\r\n          <Text style={styles.title}>{title}</Text>\r\n        </View>\r\n      </TouchableHighlight>\r\n    );\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <PickerModel\r\n        data={dataModel}\r\n        defaultValue=\"Outlet\"\r\n        onSelectedValue={value => {\r\n          \r\n        }}\r\n      ></PickerModel>\r\n      {/* <DateTimePicker\r\n        onSubmitFromDate={date => setFromDateTime(date)}\r\n        onSubmitEndDate={date => setEndDateTime(date)}\r\n        isShowTime={false}\r\n      ></DateTimePicker> */}\r\n      <View style={styles.line}></View>\r\n\r\n      <ScrollView>\r\n        <View style={{ flex: 1 }}>\r\n          {checkRole(access,'Sales & TC - Hourly Screen') && itemNavigate(\"SALES & TC - HOURLY\", \"SaleTCHourly\")}\r\n          {checkRole(access,'Management Awareness Screen') && itemNavigate(\"MANAGEMENT AWARENESS\", \"Awareness\")}\r\n          {checkRole(access,'Revenue Management (Item) Screen') && itemNavigate(\"REVENUE MANAGEMENT (ITEM)\", \"Revenue\")}\r\n          {/* {checkRole(access,'Number of TC (Item) Screen') && itemNavigate(\"NUMBER OF TC (ITEM)\", \"NumberOfTc\")} */}\r\n          {itemNavigate(\"Revenue Summary\", \"RevenueSummary\")}\r\n          {/* {itemNavigate(\"Revenue Item Sold By Category\", \"RevenueItemSoldByCategory\")} */}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontWeight: \"500\",\r\n    color: colors.white,\r\n    textTransform: 'uppercase'\r\n  },\r\n  line: {\r\n    height: 10,\r\n    backgroundColor: colors.backgroundTab,\r\n  },\r\n  expansionPanel: {\r\n    flex: 1,\r\n    height: 60,\r\n    paddingLeft: 8,\r\n    paddingRight: 25,\r\n    paddingTop: 18,\r\n    paddingBottom: 15,\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}