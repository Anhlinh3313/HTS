{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\StaffManagement\\\\ListOfStaff\\\\items\\\\itemFullTimeDone.tsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { colors } from \"../../../../../../utils/Colors\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { get12HourTime } from \"../../../../../../components/generalConvert/conVertMonDay\";\n\nvar FullTimeDone = function FullTimeDone(props) {\n  var initTimes = {\n    from: '',\n    to: ''\n  };\n  var workingTimes = useSelector(function (state) {\n    return state.staff.workingTimes;\n  });\n  var legends = useSelector(function (state) {\n    return state.staff.legends;\n  });\n  var data = props.data;\n\n  var _useState = useState(initTimes),\n      _useState2 = _slicedToArray(_useState, 2),\n      times = _useState2[0],\n      setTimes = _useState2[1];\n\n  var _useState3 = useState(initTimes),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timesSplit = _useState4[0],\n      settimesSplit = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valueTimeSelected = _useState6[0],\n      setValueTimeSelected = _useState6[1];\n\n  var handleTime = function handleTime() {\n    var timesPick = [];\n\n    var selected = _toConsumableArray(data.WorkingWeekTime[0].timeId);\n\n    var selectedSplit = _toConsumableArray(data.WorkingWeekTime[0].timeSplitId);\n\n    if (selectedSplit.length == 0) {\n      selected.sort(function (a, b) {\n        return a - b;\n      });\n      selected.map(function (item) {\n        timesPick.push(workingTimes.find(function (time) {\n          return time.id === item;\n        }));\n      });\n      var arr = [];\n      var temp = 0;\n\n      for (var i = 0; i < timesPick.length; i++) {\n        if (selected[i] + 1 !== selected[i + 1]) {\n          arr.push(timesPick.slice(temp, i + 1));\n          temp = i + 1;\n        }\n\n        if (selected[i] === selected[selected.length - 1]) {\n          arr.push(timesPick.slice(temp, i));\n        }\n      }\n\n      var result = [];\n      arr.map(function (item) {\n        if (item.length > 0) {\n          result.push({\n            from: item[0].timeRange.split(\" \")[0],\n            to: item[item.length - 1].timeRange.split(\" \")[2]\n          });\n        }\n      });\n      setValueTimeSelected(result);\n    } else {\n      var _result = [];\n\n      if (selected.length > 0) {\n        var from = workingTimes.find(function (item) {\n          return item.id === selected[0];\n        }).timeRange.slice(0, 5);\n        var to = workingTimes.find(function (item) {\n          return item.id === selected[selected.length - 1];\n        }).timeRange.slice(8, 13);\n\n        _result.push({\n          from: from,\n          to: to\n        });\n      }\n\n      if (selectedSplit.length > 0) {\n        var from2 = workingTimes.find(function (item) {\n          return item.id === selectedSplit[0];\n        }).timeRange.slice(0, 5);\n        var to2 = workingTimes.find(function (item) {\n          return item.id === selectedSplit[selectedSplit.length - 1];\n        }).timeRange.slice(8, 13);\n\n        _result.push({\n          from: from2,\n          to: to2\n        });\n      }\n\n      setValueTimeSelected(_result);\n    }\n  };\n\n  useEffect(function () {\n    if (data.WorkingWeekTime) {\n      handleTime();\n    }\n  }, [data]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, data.WorkingWeekTime !== null && React.createElement(View, {\n    style: [styles.staff, {\n      padding: 0\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.viewTitleFromTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, moment(data == null ? void 0 : data.WorkingDate).format(\"DD - MMM - YY\")), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, moment(data == null ? void 0 : data.WorkingDate).format(\"dddd\").toUpperCase())), React.createElement(View, {\n    style: styles.viewFromTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"FROM\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"TO\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"FROM\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"TO\")), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      backgroundColor: \"#8D7550\",\n      paddingVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Straight Shift or Split Shift\")), React.createElement(View, {\n    style: styles.viewFromTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, valueTimeSelected.length > 0 ? get12HourTime(valueTimeSelected[0].from) : \"--\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, valueTimeSelected.length > 0 ? get12HourTime(valueTimeSelected[0].to) : \"--\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, valueTimeSelected.length > 1 ? get12HourTime(valueTimeSelected[valueTimeSelected.length - 1].from) : \"\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, valueTimeSelected.length > 1 ? get12HourTime(valueTimeSelected[valueTimeSelected.length - 1].to) : \"\"))), data.WorkingWeekTime === null && data.LegendId !== null && React.createElement(View, {\n    style: [styles.staff, {\n      padding: 0\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.viewTitleFromTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, moment(data == null ? void 0 : data.WorkingDate).format(\"DD - MMM - YY\")), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, moment(data == null ? void 0 : data.WorkingDate).format(\"dddd\").toUpperCase())), React.createElement(View, {\n    style: styles.viewFromTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"FROM\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"TO\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"FROM\"), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"TO\")), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      backgroundColor: \"#8D7550\",\n      paddingVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"Legend\")), React.createElement(View, {\n    style: {\n      paddingHorizontal: 16,\n      paddingVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Legend: \" + (data.LegendId ? legends.find(function (item) {\n    return item.id == data.LegendId;\n  }).name : \"-\")), React.createElement(Text, {\n    style: styles.textInfoStaff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"Remark: \" + (data.Remark ? data.Remark : \"-\")))));\n};\n\nexport default FullTimeDone;\nvar styles = StyleSheet.create({\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  text: {\n    color: colors.colorText,\n    fontSize: 14,\n    fontWeight: \"600\"\n  },\n  itemReport: {\n    paddingVertical: 10,\n    borderBottomWidth: 0.5,\n    borderBottomColor: colors.colorLine\n  },\n  textInfoStaff: {\n    color: colors.colorText,\n    fontSize: 14,\n    fontWeight: \"400\"\n  },\n  buttonForm: {\n    flex: 1,\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  textButtonForm: {\n    color: colors.colorText,\n    fontSize: 16,\n    fontWeight: \"400\"\n  },\n  buttonConfirmSchedule: {\n    width: 150,\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  staff: {\n    backgroundColor: colors.grayLight,\n    borderRadius: 4,\n    padding: 10,\n    marginBottom: 12\n  },\n  headerStaff: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  avatarStaff: {\n    width: 44,\n    height: 44,\n    borderRadius: 30,\n    backgroundColor: \"#c4c4c4\",\n    marginRight: 15\n  },\n  textNameStaff: {\n    color: colors.colorText,\n    fontSize: 16,\n    fontWeight: \"500\"\n  },\n  bodyStaff: {},\n  itemInfo: {\n    marginVertical: 1\n  },\n  itemInfoDone: {\n    marginVertical: 8,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  infoEdit: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  viewTitleFromTo: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 5,\n    backgroundColor: \"#878787\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4\n  },\n  viewFromTo: {\n    flexDirection: \"row\",\n    paddingHorizontal: 16,\n    justifyContent: \"space-between\",\n    paddingVertical: 10\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/StaffManagement/ListOfStaff/items/itemFullTimeDone.tsx"],"names":["React","useState","useEffect","colors","useSelector","moment","get12HourTime","FullTimeDone","props","initTimes","from","to","workingTimes","state","staff","legends","data","times","setTimes","timesSplit","settimesSplit","valueTimeSelected","setValueTimeSelected","handleTime","timesPick","selected","WorkingWeekTime","timeId","selectedSplit","timeSplitId","length","sort","a","b","map","item","push","find","time","id","arr","temp","i","slice","result","timeRange","split","from2","to2","styles","padding","viewTitleFromTo","textInfoStaff","WorkingDate","format","toUpperCase","viewFromTo","alignItems","backgroundColor","paddingVertical","LegendId","paddingHorizontal","name","Remark","StyleSheet","create","line","height","backgroundTab","text","color","colorText","fontSize","fontWeight","itemReport","borderBottomWidth","borderBottomColor","colorLine","buttonForm","flex","justifyContent","borderRadius","textButtonForm","buttonConfirmSchedule","width","grayLight","marginBottom","headerStaff","flexDirection","avatarStaff","marginRight","textNameStaff","bodyStaff","itemInfo","marginVertical","itemInfoDone","infoEdit","borderTopLeftRadius","borderTopRightRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, Text, Dimensions, TouchableOpacity, Image, ImageProps } from \"react-native\";\r\nimport { ITimeAndLegendModel } from \"../../../../../../components/management/contants\";\r\nimport { colors } from \"../../../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { IStaff, IPicker, IWorkingScheduleRequest } from \"../../../../../../models/staffModel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../../../redux/reducers\";\r\nimport moment from \"moment\";\r\nimport { get12HourTime } from \"../../../../../../components/generalConvert/conVertMonDay\";\r\nexport interface IModal {\r\n  isShow?: boolean;\r\n  type?: string;\r\n}\r\nexport interface IStaffModel {\r\n  id: number;\r\n  avatar: ImageProps;\r\n  fullName: string;\r\n  title: string;\r\n  position: string;\r\n  email: string;\r\n  phone: string;\r\n  isConfirm: false;\r\n  timeAndLegend: ITimeAndLegendModel[];\r\n}\r\ninterface Props {\r\n  data?: IWorkingScheduleRequest;\r\n}\r\nconst FullTimeDone = (props: Props) => {\r\n  const initTimes = {\r\n    from: '',\r\n    to: ''\r\n  }\r\n  const workingTimes = useSelector((state: RootState) => state.staff.workingTimes);\r\n  const legends = useSelector((state: RootState) => state.staff.legends);\r\n  const { data } = props;\r\n\r\n  const [times, setTimes] = useState(initTimes);\r\n  const [timesSplit, settimesSplit] = useState(initTimes);\r\n  const [valueTimeSelected, setValueTimeSelected] = useState([]);\r\n\r\n  const handleTime = () => {\r\n    // if (data.WorkingWeekTime[0].timeId.length > 0) {\r\n    //   let from = workingTimes.find(item => item.id === data.WorkingWeekTime[0].timeId[0]).timeRange.slice(0, 5)\r\n    //   let to = workingTimes.find(item => item.id === data.WorkingWeekTime[0].timeId[data.WorkingWeekTime[0].timeId.length - 1]).timeRange.slice(8, 13)\r\n    //   setTimes({ from: from, to: to })\r\n    // }\r\n    // if (data.WorkingWeekTime[0].timeSplitId.length > 0) {\r\n    //   let from2 = workingTimes.find(item => item.id === data.WorkingWeekTime[0].timeSplitId[0]).timeRange.slice(0, 5)\r\n    //   let to2 = workingTimes.find(item => item.id === data.WorkingWeekTime[0].timeSplitId[data.WorkingWeekTime[0].timeSplitId.length - 1]).timeRange.slice(8, 13)\r\n\r\n    //   settimesSplit({ from: from2, to: to2 })\r\n    // }\r\n\r\n\r\n    // let timesPick = [];\r\n    // let selected = [...data.WorkingWeekTime[0].WorkingWeekTimeId];\r\n\r\n    // selected.sort(function (a, b) {\r\n    //   return a - b;\r\n    // });\r\n    // selected.map(item => {\r\n    //   timesPick.push(workingTimes.find(time => time.id === item));\r\n    // });\r\n    // let arr = [];\r\n    // let temp = 0;\r\n    // for (let i = 0; i < timesPick.length; i++) {\r\n    //   if (selected[i] + 1 !== selected[i + 1]) {\r\n    //     arr.push(timesPick.slice(temp, i + 1));\r\n    //     temp = i + 1;\r\n    //   }\r\n    //   if (selected[i] === selected[selected.length - 1]) {\r\n    //     arr.push(timesPick.slice(temp, i));\r\n    //   }\r\n    // }\r\n    // let result = [];\r\n    // arr.map(item => {\r\n    //   if (item.length > 0) {\r\n    //     result.push({ from: item[0].timeRange.split(\" \")[0], to: item[item.length - 1].timeRange.split(\" \")[2] });\r\n    //   }\r\n    // });\r\n    // setValueTimeSelected(result);\r\n    let timesPick = [];\r\n    let selected = [...data.WorkingWeekTime[0].timeId];\r\n    let selectedSplit = [...data.WorkingWeekTime[0].timeSplitId];\r\n    if (selectedSplit.length == 0) {\r\n      selected.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      selected.map(item => {\r\n        timesPick.push(workingTimes.find(time => time.id === item));\r\n      });\r\n      let arr = [];\r\n      let temp = 0;\r\n      for (let i = 0; i < timesPick.length; i++) {\r\n        if (selected[i] + 1 !== selected[i + 1]) {\r\n          arr.push(timesPick.slice(temp, i + 1));\r\n          temp = i + 1;\r\n        }\r\n        if (selected[i] === selected[selected.length - 1]) {\r\n          arr.push(timesPick.slice(temp, i));\r\n        }\r\n      }\r\n      let result = [];\r\n      arr.map(item => {\r\n        if (item.length > 0) {\r\n          result.push({ from: item[0].timeRange.split(\" \")[0], to: item[item.length - 1].timeRange.split(\" \")[2] });\r\n        }\r\n      });\r\n      setValueTimeSelected(result);\r\n    } else {\r\n      let result = []\r\n      if (selected.length > 0) {\r\n        let from = workingTimes.find(item => item.id === selected[0]).timeRange.slice(0, 5)\r\n        let to = workingTimes.find(item => item.id === selected[selected.length - 1]).timeRange.slice(8, 13)\r\n        result.push({ from: from, to: to })\r\n      }\r\n      if (selectedSplit.length > 0) {\r\n        let from2 = workingTimes.find(item => item.id === selectedSplit[0]).timeRange.slice(0, 5)\r\n        let to2 = workingTimes.find(item => item.id === selectedSplit[selectedSplit.length - 1]).timeRange.slice(8, 13)\r\n        result.push({ from: from2, to: to2 })\r\n      }\r\n\r\n      setValueTimeSelected(result);\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.WorkingWeekTime) {\r\n      handleTime();\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <View>\r\n      {data.WorkingWeekTime !== null && (\r\n        <View style={[styles.staff, { padding: 0 }]}>\r\n          <View style={styles.viewTitleFromTo}>\r\n            <Text style={styles.textInfoStaff}>{moment(data?.WorkingDate).format(\"DD - MMM - YY\")}</Text>\r\n            <Text style={styles.textInfoStaff}>{moment(data?.WorkingDate).format(\"dddd\").toUpperCase()}</Text>\r\n          </View>\r\n          <View style={styles.viewFromTo}>\r\n            <Text style={styles.textInfoStaff}>FROM</Text>\r\n            <Text style={styles.textInfoStaff}>TO</Text>\r\n            <Text style={styles.textInfoStaff}>FROM</Text>\r\n            <Text style={styles.textInfoStaff}>TO</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              alignItems: \"center\",\r\n              backgroundColor: \"#8D7550\",\r\n              paddingVertical: 10,\r\n            }}\r\n          >\r\n            <Text style={styles.textInfoStaff}>Straight Shift or Split Shift</Text>\r\n          </View>\r\n          <View style={styles.viewFromTo}>\r\n            <Text style={styles.textInfoStaff}>\r\n              {/* {times.from.length > 0 ? get12HourTime(times.from) : \"- -\"} */}\r\n              {valueTimeSelected.length > 0 ? get12HourTime(valueTimeSelected[0].from) : \"--\"}\r\n            </Text>\r\n            <Text style={styles.textInfoStaff}>\r\n              {/* {times.to.length > 0 ? get12HourTime(times.to) : \"- -\"} */}\r\n              {valueTimeSelected.length > 0 ? get12HourTime(valueTimeSelected[0].to) : \"--\"}\r\n            </Text>\r\n            <Text style={styles.textInfoStaff}>\r\n              {/* {timesSplit.from.length > 0 ? get12HourTime(timesSplit.from) : \"- -\"}         */}\r\n              {valueTimeSelected.length > 1 ? get12HourTime(valueTimeSelected[valueTimeSelected.length - 1].from) : \"\"}\r\n            </Text>\r\n            <Text style={styles.textInfoStaff}>\r\n              {/* {timesSplit.to.length > 0 ? get12HourTime(timesSplit.to) : \"- -\"} */}\r\n              {valueTimeSelected.length > 1 ? get12HourTime(valueTimeSelected[valueTimeSelected.length - 1].to) : \"\"}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      )}\r\n      {data.WorkingWeekTime === null && data.LegendId !== null && (\r\n        <View style={[styles.staff, { padding: 0 }]}>\r\n          <View style={styles.viewTitleFromTo}>\r\n            <Text style={styles.textInfoStaff}>{moment(data?.WorkingDate).format(\"DD - MMM - YY\")}</Text>\r\n            <Text style={styles.textInfoStaff}>{moment(data?.WorkingDate).format(\"dddd\").toUpperCase()}</Text>\r\n          </View>\r\n          <View style={styles.viewFromTo}>\r\n            <Text style={styles.textInfoStaff}>FROM</Text>\r\n            <Text style={styles.textInfoStaff}>TO</Text>\r\n            <Text style={styles.textInfoStaff}>FROM</Text>\r\n            <Text style={styles.textInfoStaff}>TO</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              alignItems: \"center\",\r\n              backgroundColor: \"#8D7550\",\r\n              paddingVertical: 10,\r\n            }}\r\n          >\r\n            <Text style={styles.textInfoStaff}>Legend</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              paddingHorizontal: 16,\r\n              paddingVertical: 10,\r\n            }}\r\n          >\r\n            <Text style={styles.textInfoStaff}>{`Legend: ${data.LegendId ? legends.find(item => item.id == data.LegendId).name : \"-\"\r\n              }`}</Text>\r\n            <Text style={styles.textInfoStaff}>{`Remark: ${data.Remark ? data.Remark : \"-\"}`}</Text>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\nexport default FullTimeDone;\r\n\r\nconst styles = StyleSheet.create({\r\n  line: {\r\n    height: 10,\r\n    backgroundColor: colors.backgroundTab,\r\n  },\r\n\r\n  text: {\r\n    color: colors.colorText,\r\n    fontSize: 14,\r\n    fontWeight: \"600\",\r\n  },\r\n  itemReport: {\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 0.5,\r\n    borderBottomColor: colors.colorLine,\r\n  },\r\n  textInfoStaff: {\r\n    color: colors.colorText,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n  buttonForm: {\r\n    flex: 1,\r\n    height: 36,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n\r\n  textButtonForm: {\r\n    color: colors.colorText,\r\n    fontSize: 16,\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  buttonConfirmSchedule: {\r\n    width: 150,\r\n    height: 36,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n  staff: {\r\n    backgroundColor: colors.grayLight,\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    marginBottom: 12,\r\n  },\r\n  headerStaff: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  avatarStaff: {\r\n    width: 44,\r\n    height: 44,\r\n    borderRadius: 30,\r\n    backgroundColor: \"#c4c4c4\",\r\n    marginRight: 15,\r\n  },\r\n  textNameStaff: {\r\n    color: colors.colorText,\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n  },\r\n  bodyStaff: {},\r\n  itemInfo: {\r\n    marginVertical: 1,\r\n  },\r\n  itemInfoDone: {\r\n    marginVertical: 8,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  infoEdit: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  viewTitleFromTo: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 5,\r\n    backgroundColor: \"#878787\",\r\n    borderTopLeftRadius: 4,\r\n    borderTopRightRadius: 4,\r\n  },\r\n  viewFromTo: {\r\n    flexDirection: \"row\",\r\n    paddingHorizontal: 16,\r\n    justifyContent: \"space-between\",\r\n    paddingVertical: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}