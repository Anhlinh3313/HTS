{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\Tabreport\\\\revenue.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { colors } from \"../../../utils/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport DateTimePicker from \"../../../components/datetimepicker\";\nimport PickerModel from \"../../../components/picker/PickerModel\";\nimport ModalSendEmail from \"../../../components/management/items/modalSendEmail\";\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\nimport SendFail from \"../../../components/modalNotification/SendFail\";\nimport { Table, Row, Cell } from \"react-native-table-component\";\nimport { getMonday } from \"../../../components/generalConvert/conVertMonDay\";\nimport { ReportService } from \"../../../netWorking/SpeedposService\";\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\nimport DialogAwait from \"../../../components/dialogs/Loading\";\nimport DropDown from \"../../../components/dropDown/DropDown\";\nimport SvgUri from \"react-native-svg-uri\";\nimport { Icons } from \"../../../assets\";\n\nfunction getDaysArray(start, end) {\n  var arr = [];\n\n  for (var dt = start; new Date(dt) <= end; dt.setDate(dt.getDate() + 1)) {\n    arr.push({\n      value: +new Date(dt),\n      label: moment(new Date(dt)).format(\"dddd (DD-MM-YYYY)\")\n    });\n  }\n\n  return arr;\n}\n\nvar toDate = new Date();\nvar WEEKDAYS = getDaysArray(getMonday(toDate), new Date(new Date(getMonday(toDate)).setDate(getMonday(toDate).getDate() + 6)));\nexport default function revenue() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(moment(getMonday(toDate)).format(\"YYYY-MM-DD 00:00\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromDateTime = _useState4[0],\n      setFromDateTime = _useState4[1];\n\n  var _useState5 = useState(moment(new Date().setDate(getMonday(toDate).getDate() + 6)).format(\"YYYY-MM-DD 23:59\")),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endDateTime = _useState6[0],\n      setEndDateTime = _useState6[1];\n\n  var _useState7 = useState(WEEKDAYS),\n      _useState8 = _slicedToArray(_useState7, 2),\n      weekDays = _useState8[0],\n      setWeekDays = _useState8[1];\n\n  var _useState9 = useState({\n    value: +getMonday(toDate),\n    label: moment(getMonday(toDate)).format(\"dddd (DD-MM-YYYY)\")\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      daySelect = _useState10[0],\n      setDaySelect = _useState10[1];\n\n  var model = {};\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalSendMail = _useState12[0],\n      setModalSendMail = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sentStatus = _useState14[0],\n      setSentStatus = _useState14[1];\n\n  var handleSendMail = function handleSendMail() {\n    setModalSendMail(!modalSendMail);\n    setSentStatus(\"success\");\n  };\n\n  var _useState15 = useState(2),\n      _useState16 = _slicedToArray(_useState15, 2),\n      outlet = _useState16[0],\n      setoutlet = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      droplistOutlet = _useState18[0],\n      setDroplistOutlet = _useState18[1];\n\n  var onchangeOutlet = function onchangeOutlet(data) {\n    return _regeneratorRuntime.async(function onchangeOutlet$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setoutlet(data);\n            setDroplistOutlet(data);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      totalRevenues = _useState20[0],\n      setTotalRevenues = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      totalQuantities = _useState22[0],\n      setTotalQuantities = _useState22[1];\n\n  var _useState23 = useState(0),\n      _useState24 = _slicedToArray(_useState23, 2),\n      totalProfit = _useState24[0],\n      setProfit = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      dataRevenue = _useState26[0],\n      setRevenue = _useState26[1];\n\n  var _useState27 = useState(true),\n      _useState28 = _slicedToArray(_useState27, 2),\n      quantitySort = _useState28[0],\n      setQuantitySort = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      profitSort = _useState30[0],\n      setProfitSort = _useState30[1];\n\n  var loadRevenue = function loadRevenue(dateTimeFrom) {\n    var res, result, totalNetCostEach, totalQuantity, _totalProfit;\n\n    return _regeneratorRuntime.async(function loadRevenue$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsLoading(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ReportService.getRevenueManagementItem(dateTimeFrom));\n\n          case 3:\n            res = _context2.sent;\n\n            if (res.isSuccess == 1) {\n              result = [];\n              totalNetCostEach = 0;\n              totalQuantity = 0;\n              _totalProfit = 0;\n              res.data.map(function (item) {\n                if (item.name !== 'O- COMMENT') {\n                  result.push(item);\n                  totalQuantity += item.totalQuantity;\n                  totalNetCostEach += item.totalNetCostEach;\n                  _totalProfit += item.totalProfit;\n                }\n              });\n              setRevenue(result);\n              setTotalRevenues(totalNetCostEach);\n              setTotalQuantities(totalQuantity);\n              setProfit(_totalProfit);\n            }\n\n            setIsLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var OnchangeFromDateTime = function OnchangeFromDateTime(date) {\n    var dateTime = new Date(date);\n    var fromDate = moment(dateTime).format(\"YYYY-MM-DD 00:00\");\n    var toDate = moment(new Date(new Date(dateTime).setDate(dateTime.getDate() + 6))).format(\"YYYY-MM-DD 23:59\");\n    var arrDays = getDaysArray(dateTime, new Date(new Date(dateTime).setDate(dateTime.getDate() + 6)));\n    setFromDateTime(fromDate);\n    setEndDateTime(toDate);\n    setWeekDays(arrDays);\n    setDaySelect(arrDays[0]);\n  };\n\n  useEffect(function () {\n    loadRevenue(moment(new Date(daySelect.value)).format(\"YYYY-MM-DD 00:00:01\"));\n  }, [daySelect.value]);\n  useEffect(function () {\n    var data = _toConsumableArray(dataRevenue);\n\n    data.map(function (item) {\n      if (quantitySort) {\n        item.data.sort(function (a, b) {\n          return parseFloat(a.totalProdQuantity) - parseFloat(b.totalProdQuantity);\n        });\n      } else {\n        item.data.sort(function (a, b) {\n          return parseFloat(b.totalProdQuantity) - parseFloat(a.totalProdQuantity);\n        });\n      }\n    });\n    setRevenue(data);\n  }, [quantitySort]);\n  useEffect(function () {\n    var data = _toConsumableArray(dataRevenue);\n\n    data.map(function (item) {\n      if (profitSort) {\n        item.data.sort(function (a, b) {\n          return parseFloat(a.totalProdProfit) - parseFloat(b.totalProdProfit);\n        });\n      } else {\n        item.data.sort(function (a, b) {\n          return parseFloat(b.totalProdProfit) - parseFloat(a.totalProdProfit);\n        });\n      }\n    });\n    setRevenue(data);\n  }, [profitSort]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, React.createElement(PickerModel, {\n    defaultValue: \"Ola Restaurant\",\n    onSelectedValue: function onSelectedValue(value) {\n      onchangeOutlet(value.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginLeft: 15,\n      fontStyle: \"normal\",\n      fontWeight: \"600\",\n      fontSize: 12,\n      lineHeight: 18,\n      color: \"#A4A4A4\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Weekly Display - Choose a day to start\")), React.createElement(DateTimePicker, {\n    onSubmitFromDate: function onSubmitFromDate(date) {\n      return OnchangeFromDateTime(date);\n    },\n    onSubmitEndDate: function onSubmitEndDate(date) {},\n    isShowTime: false,\n    checkkNotEndDate: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingHorizontal: 15,\n      zIndex: 2,\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, React.createElement(DropDown, {\n    data: weekDays,\n    onSelected: function onSelected(value) {\n      setDaySelect(value);\n    },\n    backgroundColor: {\n      backgroundColor: \"#414141\"\n    },\n    value: daySelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  })), isLoading ? React.createElement(DialogAwait, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }) : React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingVertical: 15,\n      paddingHorizontal: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"#414141\",\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, React.createElement(Table, {\n    style: {\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [{\n      flexDirection: \"row\",\n      height: 50,\n      paddingLeft: 10,\n      backgroundColor: \"#878787\"\n    }, {\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, React.createElement(Cell, {\n    data: 'Item',\n    style: {\n      width: 150\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }), React.createElement(Cell, {\n    data: 'Revenue',\n    style: {\n      width: 100\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }), React.createElement(Cell, {\n    data: React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setQuantitySort(!quantitySort);\n      },\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 27\n      }\n    }, \"Quantity\"), React.createElement(SvgUri, {\n      source: Icons.iconSoft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 27\n      }\n    })),\n    style: {\n      width: 100\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }), React.createElement(Cell, {\n    data: React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setProfitSort(!profitSort);\n      },\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 27\n      }\n    }, \"Profit\"), React.createElement(SvgUri, {\n      source: Icons.iconSoft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 27\n      }\n    })),\n    style: {\n      width: 100\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  })), dataRevenue.map(function (item, indexTable) {\n    var _item$data;\n\n    return React.createElement(View, {\n      key: indexTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, React.createElement(Row, {\n      data: [item.reporName],\n      style: [styles.styleRowTable, {\n        backgroundColor: \"#17151C\"\n      }, {\n        paddingLeft: 10\n      }],\n      flexArr: [1],\n      textStyle: [styles.text600, {\n        backgroundColor: \"#ff0\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }), React.createElement(Table, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }, (_item$data = item.data) == null ? void 0 : _item$data.map(function (row, index2) {\n      return React.createElement(View, {\n        key: index2,\n        style: [{\n          flexDirection: \"row\",\n          height: 50,\n          paddingLeft: 10\n        }, index2 % 2 == 0 ? {\n          backgroundColor: \"#8D7550\"\n        } : {}],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }\n      }, React.createElement(Cell, {\n        key: 0,\n        data: row.prodName ? row.prodName : \"---\",\n        style: {\n          width: 150\n        },\n        textStyle: styles.textRowTable,\n        numberOfLines: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 31\n        }\n      }), React.createElement(Cell, {\n        key: 1,\n        data: Money(row.totalProdNetCostEach),\n        style: {\n          width: 100\n        },\n        textStyle: styles.textRowTable,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 31\n        }\n      }), React.createElement(Cell, {\n        key: 2,\n        data: row.totalProdQuantity ? Money(row.totalProdQuantity) : 0,\n        style: {\n          width: 100\n        },\n        textStyle: styles.textRowTable,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 31\n        }\n      }), React.createElement(Cell, {\n        key: 3,\n        data: Money(row.totalProdProfit),\n        style: {\n          width: 100\n        },\n        textStyle: styles.textRowTable,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 31\n        }\n      }));\n    })), React.createElement(Table, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        height: 50,\n        paddingLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 27\n      }\n    }, React.createElement(Cell, {\n      key: 0,\n      data: \"Total\",\n      style: {\n        width: 150\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }), React.createElement(Cell, {\n      key: 1,\n      data: item.totalNetCostEach ? Money(item.totalNetCostEach) : 0,\n      style: {\n        width: 100\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }), React.createElement(Cell, {\n      key: 2,\n      data: item.totalQuantity ? Money(item.totalQuantity) : 0,\n      style: {\n        width: 100\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 29\n      }\n    }), React.createElement(Cell, {\n      key: 3,\n      data: Money(item.totalProfit),\n      style: {\n        width: 100\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }))));\n  }), React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      height: 50,\n      backgroundColor: \"#8D7550\",\n      paddingLeft: 10,\n      borderBottomLeftRadius: 4,\n      borderBottomRightRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, React.createElement(Cell, {\n    key: 0,\n    data: \"Total sale\",\n    style: {\n      width: 150\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 23\n    }\n  }), React.createElement(Cell, {\n    key: 1,\n    data: Money(totalRevenues),\n    style: {\n      width: 100\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 23\n    }\n  }), React.createElement(Cell, {\n    key: 2,\n    data: totalQuantities ? Money(totalQuantities) : 0,\n    style: {\n      width: 100\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 23\n    }\n  }), React.createElement(Cell, {\n    key: 3,\n    data: Money(totalProfit),\n    style: {\n      width: 100\n    },\n    textStyle: styles.textRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 23\n    }\n  }))))))), React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingVertical: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, React.createElement(LinearGradient, {\n    style: styles.buttonSubmit,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      setModalSendMail(!modalSendMail);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 36,\n      width: 150,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      textAlign: \"center\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }, \"Send\"))))), React.createElement(ModalSendEmail, {\n    title: \"Revenue Management (Item)\",\n    visible: modalSendMail,\n    isPickType: true,\n    dateTime: fromDateTime,\n    onRequestClose: function onRequestClose() {\n      setModalSendMail(!modalSendMail);\n    },\n    onRequestSend: function onRequestSend() {\n      handleSendMail();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }), React.createElement(SendSuccess, {\n    visible: sentStatus === \"success\",\n    onRequestClose: function onRequestClose() {\n      return setSentStatus(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }), React.createElement(SendFail, {\n    visible: sentStatus === \"fail\",\n    onRequestClose: function onRequestClose() {\n      return setSentStatus(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  buttonSubmit: {\n    height: 36,\n    width: 150,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: colors.white\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: \"400\",\n    color: colors.white\n  },\n  text600: {\n    fontSize: 14,\n    fontWeight: \"600\",\n    color: colors.white\n  },\n  styleRowTable: {\n    height: 36\n  },\n  textRowTable: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: \"400\"\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/Tabreport/revenue.tsx"],"names":["React","useEffect","useState","moment","colors","LinearGradient","DateTimePicker","PickerModel","ModalSendEmail","SendSuccess","SendFail","Table","Row","Cell","getMonday","ReportService","Money","DialogAwait","DropDown","SvgUri","Icons","getDaysArray","start","end","arr","dt","Date","setDate","getDate","push","value","label","format","toDate","WEEKDAYS","revenue","isLoading","setIsLoading","fromDateTime","setFromDateTime","endDateTime","setEndDateTime","weekDays","setWeekDays","daySelect","setDaySelect","model","modalSendMail","setModalSendMail","sentStatus","setSentStatus","handleSendMail","outlet","setoutlet","droplistOutlet","setDroplistOutlet","onchangeOutlet","data","totalRevenues","setTotalRevenues","totalQuantities","setTotalQuantities","totalProfit","setProfit","dataRevenue","setRevenue","quantitySort","setQuantitySort","profitSort","setProfitSort","loadRevenue","dateTimeFrom","getRevenueManagementItem","res","isSuccess","result","totalNetCostEach","totalQuantity","map","item","name","OnchangeFromDateTime","date","dateTime","fromDate","arrDays","sort","a","b","parseFloat","totalProdQuantity","totalProdProfit","styles","container","marginLeft","fontStyle","fontWeight","fontSize","lineHeight","color","line","paddingHorizontal","zIndex","marginTop","backgroundColor","flex","paddingVertical","borderRadius","flexDirection","height","paddingLeft","borderTopLeftRadius","borderTopRightRadius","width","textRowTable","alignItems","iconSoft","indexTable","reporName","styleRowTable","text600","row","index2","prodName","totalProdNetCostEach","borderBottomLeftRadius","borderBottomRightRadius","justifyContent","buttonSubmit","yellowishbrown","title","textAlign","StyleSheet","create","backgroundApp","backgroundTab","white","text"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, View, Text, ScrollView, TouchableHighlight, TouchableOpacity } from \"react-native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport DateTimePicker from \"../../../components/datetimepicker\";\r\nimport PickerModel from \"../../../components/picker/PickerModel\";\r\nimport ModalSendEmail from \"../../../components/management/items/modalSendEmail\";\r\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\r\nimport SendFail from \"../../../components/modalNotification/SendFail\";\r\nimport { Table, Row, Cell } from \"react-native-table-component\";\r\nimport { getMonday } from \"../../../components/generalConvert/conVertMonDay\";\r\nimport { FilterViewModel } from \"../../../models/filterViewModel\";\r\nimport { ReportService } from \"../../../netWorking/SpeedposService\";\r\nimport { TableRevenue } from \"../../../models/tablerevenue\";\r\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\r\nimport DialogAwait from \"../../../components/dialogs/Loading\";\r\nimport MoneyText from \"../../../components/Money\";\r\nimport DropDown from \"../../../components/dropDown/DropDown\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport { Icons } from \"../../../assets\";\r\n\r\nfunction getDaysArray(start: Date, end: Date) {\r\n  let arr = [];\r\n  for (let dt = start; new Date(dt) <= end; dt.setDate(dt.getDate() + 1)) {\r\n    arr.push({ value: +new Date(dt), label: moment(new Date(dt)).format(\"dddd (DD-MM-YYYY)\") });\r\n  }\r\n  return arr;\r\n}\r\n\r\nconst toDate = new Date();\r\nconst WEEKDAYS = getDaysArray(getMonday(toDate), new Date(new Date(getMonday(toDate)).setDate(getMonday(toDate).getDate() + 6)));\r\nexport default function revenue() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fromDateTime, setFromDateTime] = useState(moment(getMonday(toDate)).format(\"YYYY-MM-DD 00:00\"));\r\n  const [endDateTime, setEndDateTime] = useState(\r\n    moment(new Date().setDate(getMonday(toDate).getDate() + 6)).format(\"YYYY-MM-DD 23:59\")\r\n  );\r\n  const [weekDays, setWeekDays] = useState(WEEKDAYS);\r\n  const [daySelect, setDaySelect] = useState({\r\n    value: +getMonday(toDate),\r\n    label: moment(getMonday(toDate)).format(\"dddd (DD-MM-YYYY)\"),\r\n  });\r\n\r\n  let model: FilterViewModel = {};\r\n\r\n  const [modalSendMail, setModalSendMail] = useState(false);\r\n  const [sentStatus, setSentStatus] = useState(\"\");\r\n\r\n  const handleSendMail = () => {\r\n    setModalSendMail(!modalSendMail);\r\n    setSentStatus(\"success\");\r\n  };\r\n  const [outlet, setoutlet] = useState(2);\r\n  const [droplistOutlet, setDroplistOutlet] = useState(\"\");\r\n  const onchangeOutlet = async (data: any) => {\r\n    setoutlet(data);\r\n    setDroplistOutlet(data);\r\n  };\r\n  //\r\n  const [totalRevenues, setTotalRevenues] = useState(0);\r\n  const [totalQuantities, setTotalQuantities] = useState(0);\r\n  const [totalProfit, setProfit] = useState(0);\r\n  //\r\n  const [dataRevenue, setRevenue] = useState([]);\r\n\r\n  const [quantitySort, setQuantitySort] = useState(true);\r\n  const [profitSort, setProfitSort] = useState(false);\r\n\r\n  const loadRevenue = async dateTimeFrom => {\r\n    setIsLoading(true);\r\n    const res = await ReportService.getRevenueManagementItem(dateTimeFrom);\r\n    if (res.isSuccess == 1) {\r\n      let result = [];\r\n      let totalNetCostEach = 0;\r\n      let totalQuantity = 0;\r\n      let totalProfit = 0;\r\n      res.data.map(item => {\r\n        if (item.name !== 'O- COMMENT') {\r\n          result.push(item);\r\n          // result.push({\r\n          //   name: item.name,\r\n          //   total: item.total,\r\n          //   totalQuantity: totalQuantity,\r\n          //   reportNo: item.reportNo,\r\n          //   data: prodData.sort(function (a, b) {\r\n          //     return a.countProdNum - b.countProdNum;\r\n          //   }),\r\n          // });\r\n          totalQuantity += item.totalQuantity;\r\n          totalNetCostEach += item.totalNetCostEach;\r\n          totalProfit += item.totalProfit;\r\n        }\r\n\r\n      });\r\n      setRevenue(result);\r\n      setTotalRevenues(totalNetCostEach);\r\n      setTotalQuantities(totalQuantity);\r\n      setProfit(totalProfit);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n\r\n  const OnchangeFromDateTime = (date: any) => {\r\n    const dateTime = new Date(date);\r\n    const fromDate = moment(dateTime).format(\"YYYY-MM-DD 00:00\");\r\n    const toDate = moment(new Date(new Date(dateTime).setDate(dateTime.getDate() + 6))).format(\"YYYY-MM-DD 23:59\");\r\n    const arrDays = getDaysArray(dateTime, new Date(new Date(dateTime).setDate(dateTime.getDate() + 6)));\r\n    setFromDateTime(fromDate);\r\n    setEndDateTime(toDate);\r\n    setWeekDays(arrDays);\r\n    setDaySelect(arrDays[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRevenue(moment(new Date(daySelect.value)).format(\"YYYY-MM-DD 00:00:01\"));\r\n  }, [daySelect.value]);\r\n  useEffect(() => {\r\n    let data = [...dataRevenue]\r\n    data.map(item => {\r\n      if (quantitySort) {\r\n        item.data.sort((a, b) => parseFloat(a.totalProdQuantity) - parseFloat(b.totalProdQuantity))\r\n      } else {\r\n        item.data.sort((a, b) => parseFloat(b.totalProdQuantity) - parseFloat(a.totalProdQuantity))\r\n      }\r\n    })\r\n    setRevenue(data)\r\n  }, [quantitySort]);\r\n  useEffect(() => {\r\n    let data = [...dataRevenue]\r\n    data.map(item => {\r\n      if (profitSort) {\r\n        item.data.sort((a, b) => parseFloat(a.totalProdProfit) - parseFloat(b.totalProdProfit))\r\n      } else {\r\n        item.data.sort((a, b) => parseFloat(b.totalProdProfit) - parseFloat(a.totalProdProfit))\r\n      }\r\n    })\r\n    setRevenue(data)\r\n  }, [profitSort]);\r\n  return (\r\n    <View style={styles.container}>\r\n      <PickerModel\r\n        defaultValue=\"Ola Restaurant\"\r\n        onSelectedValue={value => {\r\n          onchangeOutlet(value.value);\r\n        }}\r\n      ></PickerModel>\r\n      <View>\r\n        <Text style={{ marginLeft: 15, fontStyle: \"normal\", fontWeight: \"600\", fontSize: 12, lineHeight: 18, color: \"#A4A4A4\" }}>\r\n          Weekly Display - Choose a day to start\r\n        </Text>\r\n      </View>\r\n      <DateTimePicker\r\n        onSubmitFromDate={date => OnchangeFromDateTime(date)}\r\n        onSubmitEndDate={date => { }}\r\n        isShowTime={false}\r\n        checkkNotEndDate={false}\r\n      ></DateTimePicker><View style={styles.line}></View>\r\n      <View style={{ paddingHorizontal: 15, zIndex: 2, marginTop: 4 }}>\r\n        <DropDown\r\n          data={weekDays}\r\n          onSelected={value => {\r\n            setDaySelect(value);\r\n          }}\r\n          backgroundColor={{ backgroundColor: \"#414141\" }}\r\n          value={daySelect}\r\n        ></DropDown>\r\n      </View>\r\n      {isLoading ? (\r\n        <DialogAwait></DialogAwait>\r\n      ) : (\r\n        <ScrollView>\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              paddingVertical: 15,\r\n              paddingHorizontal: 15,\r\n            }}\r\n          >\r\n            <ScrollView horizontal={true}>\r\n              <View style={{ backgroundColor: \"#414141\", borderRadius: 4 }}>\r\n                <Table style={{ borderRadius: 4 }}>\r\n                  {/* <Row\r\n                  data={dataTable.tableHead}\r\n                  style={{\r\n                    borderTopLeftRadius: 4,\r\n                    borderTopRightRadius: 4,\r\n                    height: 58,\r\n                    backgroundColor: \"#878787\",\r\n                    paddingLeft: 10,\r\n                  }}\r\n                  flexArr={[1,1,1,1]}\r\n                  textStyle={[styles.text, {}]}\r\n                /> */}\r\n                  <View\r\n                    style={[\r\n                      { flexDirection: \"row\", height: 50, paddingLeft: 10, backgroundColor: \"#878787\", },\r\n                      { borderTopLeftRadius: 4, borderTopRightRadius: 4 }\r\n                    ]}\r\n                  >\r\n                    <Cell\r\n                      data={'Item'}\r\n                      style={{ width: 150 }}\r\n                      textStyle={styles.textRowTable}\r\n                    />\r\n                    <Cell\r\n                      data={'Revenue'\r\n\r\n                      }\r\n                      style={{ width: 100 }}\r\n                      textStyle={styles.textRowTable}\r\n                    />\r\n                    <Cell\r\n                      data={\r\n                        <TouchableOpacity onPress={() => { setQuantitySort(!quantitySort) }} style={{ flex: 1, alignItems: 'center', flexDirection: 'row' }}>\r\n                          <Text style={styles.textRowTable}>Quantity</Text>\r\n                          <SvgUri source={Icons.iconSoft} />\r\n                        </TouchableOpacity>}\r\n                      style={{ width: 100 }}\r\n                      textStyle={styles.textRowTable}\r\n                    />\r\n                    <Cell\r\n                      data={\r\n                        <TouchableOpacity onPress={() => { setProfitSort(!profitSort) }} style={{ flex: 1, alignItems: 'center', flexDirection: 'row' }}>\r\n                          <Text style={styles.textRowTable}>Profit</Text>\r\n                          <SvgUri source={Icons.iconSoft} />\r\n                        </TouchableOpacity>}\r\n                      style={{ width: 100 }}\r\n                      textStyle={styles.textRowTable}\r\n                    />\r\n                  </View>\r\n                  {dataRevenue.map((item, indexTable) => {\r\n                    return (\r\n                      <View key={indexTable}>\r\n                        <Row\r\n                          data={[item.reporName]}\r\n                          style={[styles.styleRowTable, { backgroundColor: \"#17151C\" }, { paddingLeft: 10 }]}\r\n                          flexArr={[1]}\r\n                          textStyle={[styles.text600, { backgroundColor: \"#ff0\" }]}\r\n                        />\r\n                        <Table>\r\n                          {item.data?.map((row, index2) => (\r\n                            <View\r\n                              key={index2}\r\n                              style={[\r\n                                { flexDirection: \"row\", height: 50, paddingLeft: 10 },\r\n                                index2 % 2 == 0 ? { backgroundColor: \"#8D7550\" } : {},\r\n                              ]}\r\n                            >\r\n                              <Cell\r\n                                key={0}\r\n                                data={row.prodName ? row.prodName : \"---\"}\r\n                                style={{ width: 150 }}\r\n                                textStyle={styles.textRowTable}\r\n                                numberOfLines={1}\r\n                              />\r\n                              <Cell\r\n                                key={1}\r\n                                data={Money(row.totalProdNetCostEach)}\r\n                                // data={\r\n                                //   <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n                                //     <MoneyText data={row.totalProdNetCostEach} style={styles.text} />\r\n                                //   </View>\r\n                                // }\r\n                                style={{ width: 100 }}\r\n                                textStyle={styles.textRowTable}\r\n                              />\r\n                              <Cell\r\n                                key={2}\r\n                                data={row.totalProdQuantity ? Money(row.totalProdQuantity) : 0}\r\n                                style={{ width: 100 }}\r\n                                textStyle={styles.textRowTable}\r\n                              />\r\n                              <Cell\r\n                                key={3}\r\n                                data={Money(row.totalProdProfit)}\r\n                                // data={<View style={{ flex: 1, justifyContent: \"center\" }}>\r\n                                //   <MoneyText data={row.totalProdProfit} style={styles.text} />\r\n                                // </View>}\r\n                                style={{ width: 100 }}\r\n                                textStyle={styles.textRowTable}\r\n                              />\r\n                            </View>\r\n                          ))}\r\n                        </Table>\r\n                        <Table>\r\n                          <View style={{ flexDirection: \"row\", height: 50, paddingLeft: 10 }}>\r\n                            <Cell key={0} data={\"Total\"} style={{ width: 150 }} textStyle={styles.textRowTable} />\r\n                            <Cell\r\n                              key={1}\r\n                              data={item.totalNetCostEach ? Money(item.totalNetCostEach) : 0}\r\n                              // data={\r\n                              //   <View style={{ flex: 3, justifyContent: \"center\" }}>\r\n                              //     <MoneyText data={item.totalNetCostEach} style={styles.text} />\r\n                              //   </View>\r\n                              // }\r\n                              style={{ width: 100 }}\r\n                              textStyle={styles.textRowTable}\r\n                            />\r\n                            <Cell\r\n                              key={2}\r\n                              data={item.totalQuantity ? Money(item.totalQuantity) : 0}\r\n                              style={{ width: 100 }}\r\n                              textStyle={styles.textRowTable}\r\n                            />\r\n                            <Cell\r\n                              key={3}\r\n                              data={Money(item.totalProfit)}\r\n                              // data={\r\n                              //   <View style={{ flex: 3, justifyContent: \"center\" }}>\r\n                              //     <MoneyText data={item.totalProfit} style={styles.text} />\r\n                              //   </View>\r\n                              // }\r\n                              style={{ width: 100 }}\r\n                              textStyle={styles.textRowTable}\r\n                            />\r\n                          </View>\r\n                        </Table>\r\n                      </View>\r\n                    );\r\n                  })}\r\n                  <Table>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        height: 50,\r\n                        backgroundColor: \"#8D7550\",\r\n                        paddingLeft: 10,\r\n                        borderBottomLeftRadius: 4,\r\n                        borderBottomRightRadius: 4,\r\n                      }}\r\n                    >\r\n                      <Cell key={0} data={\"Total sale\"} style={{ width: 150 }} textStyle={styles.textRowTable} />\r\n                      <Cell\r\n                        key={1}\r\n                        data={Money(totalRevenues)}\r\n                        // data={\r\n                        //   <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n                        //     <MoneyText data={totalRevenues} style={styles.text} />\r\n                        //   </View>\r\n                        // }\r\n                        style={{ width: 100 }}\r\n                        textStyle={styles.textRowTable}\r\n                      />\r\n                      <Cell\r\n                        key={2}\r\n                        data={totalQuantities ? Money(totalQuantities) : 0}\r\n                        style={{ width: 100 }}\r\n                        textStyle={styles.textRowTable}\r\n                      />\r\n                      <Cell\r\n                        key={3}\r\n                        data={Money(totalProfit)}\r\n                        // data={\r\n                        //   <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n                        //     <MoneyText data={totalProfit} style={styles.text} />\r\n                        //   </View>\r\n                        // }\r\n                        style={{ width: 100 }}\r\n                        textStyle={styles.textRowTable}\r\n                      />\r\n                    </View>\r\n                  </Table>\r\n                </Table>\r\n              </View>\r\n            </ScrollView>\r\n          </View>\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              paddingVertical: 32,\r\n            }}\r\n          >\r\n            <LinearGradient style={styles.buttonSubmit} colors={[\"#DAB451\", \"#988050\"]}>\r\n              <TouchableHighlight\r\n                underlayColor={colors.yellowishbrown}\r\n                onPress={() => {\r\n                  setModalSendMail(!modalSendMail);\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    height: 36,\r\n                    width: 150,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Text style={[styles.title, { textAlign: \"center\" }]}>Send</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </LinearGradient>\r\n          </View>\r\n          <ModalSendEmail\r\n            title={\"Revenue Management (Item)\"}\r\n            visible={modalSendMail}\r\n            isPickType={true}\r\n            dateTime={fromDateTime}\r\n            onRequestClose={() => {\r\n              setModalSendMail(!modalSendMail);\r\n            }}\r\n            onRequestSend={() => {\r\n              handleSendMail();\r\n            }}\r\n          ></ModalSendEmail>\r\n          <SendSuccess visible={sentStatus === \"success\"} onRequestClose={() => setSentStatus(\"\")}></SendSuccess>\r\n          <SendFail visible={sentStatus === \"fail\"} onRequestClose={() => setSentStatus(\"\")}></SendFail>\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundApp,\r\n  },\r\n  line: {\r\n    height: 10,\r\n    backgroundColor: colors.backgroundTab,\r\n  },\r\n  buttonSubmit: {\r\n    height: 36,\r\n    width: 150,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n    color: colors.white,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n    color: colors.white,\r\n  },\r\n  text600: {\r\n    fontSize: 14,\r\n    fontWeight: \"600\",\r\n    color: colors.white,\r\n  },\r\n  styleRowTable: {\r\n    height: 36,\r\n  },\r\n  textRowTable: {\r\n    color: colors.white,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}