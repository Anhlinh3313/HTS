{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\components\\\\TimePickerStaff\\\\index.tsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport HandleTime from \"../../components/management/TimePicker/HandleTime\";\nimport { useSelector } from \"react-redux\";\n\nvar index = function index(_ref) {\n  var data = _ref.data,\n      onChangeTime = _ref.onChangeTime;\n  var workingTimes = useSelector(function (state) {\n    return state.staff.workingTimes;\n  });\n  var InitTime = {\n    hour: 0,\n    minute: 0,\n    period: 'am'\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeFrom = _useState2[0],\n      setTimeFrom = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timeTo = _useState4[0],\n      setTimeTo = _useState4[1];\n\n  var _useState5 = useState(InitTime),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeFromObj = _useState6[0],\n      setTimeFromObj = _useState6[1];\n\n  var _useState7 = useState(InitTime),\n      _useState8 = _slicedToArray(_useState7, 2),\n      timeToObj = _useState8[0],\n      setTimeToObj = _useState8[1];\n\n  useEffect(function () {\n    var idFromTime = timeFromObj.hour * 2 + (timeFromObj.minute === 0 ? 1 : 2);\n    var idToTime = timeToObj.hour * 2 + (timeToObj.minute === 0 ? 0 : 1);\n    var workingTimeId = Array.from({\n      length: idToTime - idFromTime + 1\n    }, function (_, i) {\n      return idFromTime + i;\n    });\n    onChangeTime(workingTimeId);\n  }, [timeFromObj, timeToObj]);\n  return React.createElement(View, {\n    style: [styles.dateTimeContainer, {}],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(HandleTime, {\n    value: data.length > 0 ? workingTimes.find(function (item) {\n      return item.id === data[0];\n    }).timeRange.slice(0, 5) : '',\n    title: \"From\",\n    onChange: function onChange(time) {\n      setTimeFrom(time);\n    },\n    onChangeOBJ: function onChangeOBJ(time) {\n      setTimeFromObj(time);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), React.createElement(HandleTime, {\n    value: data.length > 0 ? workingTimes.find(function (item) {\n      return item.id === data[data.length - 1];\n    }).timeRange.slice(8, 13) : '',\n    title: \"To\",\n    onChange: function onChange(time) {\n      setTimeTo(time);\n    },\n    onChangeOBJ: function onChangeOBJ(time) {\n      setTimeToObj(time);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default index;\nvar styles = StyleSheet.create({\n  dateTimeContainer: {\n    width: \"100%\",\n    alignSelf: \"center\",\n    backgroundColor: \"#414141\",\n    marginTop: 8\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/components/TimePickerStaff/index.tsx"],"names":["React","useState","useEffect","HandleTime","useSelector","index","data","onChangeTime","workingTimes","state","staff","InitTime","hour","minute","period","timeFrom","setTimeFrom","timeTo","setTimeTo","timeFromObj","setTimeFromObj","timeToObj","setTimeToObj","idFromTime","idToTime","workingTimeId","Array","from","length","_","i","styles","dateTimeContainer","find","item","id","timeRange","slice","time","StyleSheet","create","width","alignSelf","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, Alert } from \"react-native\";\r\n\r\nimport moment from \"moment\";\r\nimport { colors } from \"../../utils/Colors\";\r\nimport HandleTime from \"../../components/management/TimePicker/HandleTime\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nconst index = ({\r\n  data,\r\n  onChangeTime,\r\n}: {\r\n  data?: number[];\r\n  onChangeTime?: (times:number[]) => void;\r\n}) => {\r\n  \r\n  const workingTimes = useSelector((state: RootState) => state.staff.workingTimes);\r\n  interface ITime {\r\n    hour: number;\r\n    minute: number;\r\n    period: string;\r\n  }\r\n  const InitTime= {\r\n    hour: 0,\r\n    minute: 0,\r\n    period: 'am',\r\n  }\r\n\r\n  const [timeFrom, setTimeFrom] = useState(\"\");\r\n  const [timeTo, setTimeTo] = useState(\"\");\r\n  const [timeFromObj, setTimeFromObj] = useState<ITime>(InitTime);\r\n  const [timeToObj, setTimeToObj] = useState<ITime>(InitTime);\r\n  useEffect(() => {\r\n    const idFromTime = timeFromObj.hour * 2 + (timeFromObj.minute === 0 ? 1 : 2);\r\n    const idToTime = timeToObj.hour * 2 + (timeToObj.minute === 0 ? 0 : 1);\r\n    const workingTimeId = Array.from({ length: idToTime - idFromTime + 1 }, (_, i) => idFromTime + i);\r\n    onChangeTime(workingTimeId)\r\n  }, [timeFromObj,timeToObj])\r\n  \r\n  return (\r\n        <View style={[styles.dateTimeContainer, {}]}>\r\n          <HandleTime\r\n            value={data.length>0?workingTimes.find(item=>item.id===data[0]).timeRange.slice(0, 5):''}\r\n            title=\"From\"\r\n            onChange={time => {\r\n              setTimeFrom(time);\r\n            }}\r\n            onChangeOBJ={time => {\r\n              setTimeFromObj(time);\r\n            }}\r\n          ></HandleTime>\r\n          <HandleTime\r\n            value={data.length>0?workingTimes.find(item=>item.id===data[data.length-1]).timeRange.slice(8,13):''}\r\n            title=\"To\"\r\n            onChange={time => {\r\n              setTimeTo(time);\r\n            }}\r\n            onChangeOBJ={time => {\r\n              setTimeToObj(time);\r\n            }}\r\n          ></HandleTime>\r\n        </View>\r\n  );\r\n};\r\n\r\nexport default index;\r\n\r\nconst styles = StyleSheet.create({\r\n  dateTimeContainer: {\r\n    width: \"100%\",\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"#414141\",\r\n    marginTop:8\r\n  },\r\n  \r\n});\r\n"]},"metadata":{},"sourceType":"module"}