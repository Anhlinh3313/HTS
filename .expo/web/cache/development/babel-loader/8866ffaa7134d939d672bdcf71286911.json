{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\components\\\\picker\\\\PickerModel.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { colors } from \"../../utils/Colors\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { SystemService } from \"../../netWorking/systemInfo\";\nimport { _getUserId } from \"../../netWorking/authService\";\nimport { useDispatch } from \"react-redux\";\n\nvar PickerModel = function PickerModel(_ref) {\n  var data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      onSelectedValue = _ref.onSelectedValue;\n  var dispatch = useDispatch();\n  var dimensions = Dimensions.get('window');\n  var windowHeight = dimensions.height;\n  var windowWidth = dimensions.width;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(defaultValue),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickerValue = _useState4[0],\n      setPickerValue = _useState4[1];\n\n  var handleConfirm = function handleConfirm(value) {\n    dispatch({\n      type: \"PICK_WORKPLACE\",\n      payload: value\n    });\n    onSelectedValue(value);\n    setPickerValue(value.label);\n    setModalVisible(false);\n  };\n\n  var dataPicker = [];\n\n  var _useState5 = useState(dataPicker),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataModel = _useState6[0],\n      setDataModel = _useState6[1];\n\n  function loadDataStore() {\n    var _dataPicker$0$label, _dataPicker$;\n\n    var id, res, dataStoreProduct;\n    return _regeneratorRuntime.async(function loadDataStore$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(_getUserId());\n\n          case 2:\n            id = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(SystemService.getWorkplaceByUserId(+id));\n\n          case 5:\n            res = _context.sent;\n\n            if (res.isSuccess == 1) {\n              dataStoreProduct = res.data;\n              dataStoreProduct.map(function (map, index) {\n                dataPicker.push({\n                  label: map.workplace,\n                  value: map.id\n                });\n              });\n            }\n\n            setDataModel(dataPicker);\n            onSelectedValue(dataPicker[0]);\n            setPickerValue((_dataPicker$0$label = (_dataPicker$ = dataPicker[0]) == null ? void 0 : _dataPicker$.label) != null ? _dataPicker$0$label : '');\n            dispatch({\n              type: \"PICK_WORKPLACE\",\n              payload: dataPicker[0]\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadDataStore();\n  }, [defaultValue]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.viewPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.pickerModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, pickerValue)), React.createElement(Ionicons, {\n    style: styles.iconDown,\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  })))), React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4,\n      height: windowHeight\n    },\n    onPressIn: function onPressIn() {\n      setModalVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.centeredView, {\n      height: windowHeight,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: [styles.modalView, {\n      width: windowWidth - 30\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: colors.white,\n      textAlign: 'center',\n      fontWeight: 'bold'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \"Choose Outlet\")), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, dataModel.map(function (data, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }, React.createElement(TouchableHighlight, {\n      style: {\n        padding: 10\n      },\n      underlayColor: 'rgba(0, 0, 0, 0.2)',\n      onPress: function onPress() {\n        handleConfirm(data);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }, React.createElement(Text, {\n      style: [styles.textItem, {\n        color: colors.white\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 49\n      }\n    }, data.label)));\n  })))))));\n};\n\nexport default PickerModel;\nvar styles = StyleSheet.create({\n  containerPicker: {\n    marginTop: 10,\n    backgroundColor: colors.backgroundApp,\n    paddingBottom: 15\n  },\n  text: {\n    color: colors.white,\n    fontSize: 16,\n    fontWeight: '500',\n    lineHeight: 24\n  },\n  viewPicker: {\n    marginLeft: 15,\n    marginRight: 15,\n    paddingLeft: 15,\n    backgroundColor: colors.grayLight,\n    borderRadius: 4\n  },\n  pickerModal: {\n    height: 46,\n    borderRadius: 4,\n    justifyContent: 'center',\n    backgroundColor: colors.grayLight,\n    color: '#fff',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  },\n  iconDown: {\n    justifyContent: 'center',\n    position: 'absolute',\n    right: 10,\n    bottom: 12,\n    zIndex: 4\n  },\n  centeredView: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  modalView: {\n    backgroundColor: colors.grayLight,\n    width: 380,\n    height: 135,\n    marginLeft: 15,\n    marginRight: 15,\n    borderRadius: 4,\n    paddingBottom: 20,\n    justifyContent: 'flex-start',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '600',\n    lineHeight: 24,\n    color: colors.white\n  },\n  textItem: {\n    color: colors.white,\n    fontWeight: '400',\n    fontSize: 16,\n    lineHeight: 24\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/components/picker/PickerModel.tsx"],"names":["React","useEffect","useState","colors","Ionicons","SystemService","_getUserId","useDispatch","PickerModel","data","defaultValue","onSelectedValue","dispatch","dimensions","Dimensions","get","windowHeight","height","windowWidth","width","modalVisible","setModalVisible","pickerValue","setPickerValue","handleConfirm","value","type","payload","label","dataPicker","dataModel","setDataModel","loadDataStore","id","getWorkplaceByUserId","res","isSuccess","dataStoreProduct","map","index","push","workplace","styles","containerPicker","viewPicker","pickerModal","text","iconDown","borderRadius","centeredView","backgroundColor","modalView","marginTop","title","color","white","textAlign","fontWeight","padding","textItem","StyleSheet","create","backgroundApp","paddingBottom","fontSize","lineHeight","marginLeft","marginRight","paddingLeft","grayLight","justifyContent","shadowColor","shadowOffset","position","right","bottom","zIndex","alignItems","paddingRight","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Modal,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TouchableWithoutFeedback\r\n} from \"react-native\";\r\nimport { Imodel } from \"../../models/Imodel\";\r\nimport { colors } from \"../../utils/Colors\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { getAllSore } from \"../../netWorking/storeService\";\r\nimport { SystemService } from \"../../netWorking/systemInfo\";\r\nimport { _getUserId } from \"../../netWorking/authService\";\r\nimport { StoreModel } from \"../../models/storeModel\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nconst PickerModel = ({\r\n    data,\r\n    defaultValue,\r\n    onSelectedValue,\r\n}: {\r\n    data?: Imodel[],\r\n    defaultValue?: string,\r\n    onSelectedValue: (val: Imodel) => void;\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    const dimensions = Dimensions.get('window');\r\n    const windowHeight = dimensions.height;\r\n    const windowWidth = dimensions.width;\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [pickerValue, setPickerValue] = useState<any>(defaultValue);\r\n    const handleConfirm = (value: Imodel) => {\r\n        dispatch({ type: \"PICK_WORKPLACE\", payload: value });\r\n        onSelectedValue(value);\r\n        setPickerValue(value.label);\r\n        setModalVisible(false)\r\n    }\r\n    let dataPicker: Imodel[] = [];\r\n    const [dataModel, setDataModel] = useState(dataPicker);\r\n\r\n    async function loadDataStore() {\r\n        // const res = await getAllSore();\r\n        // let dataStoreProduct = res.data as StoreModel[];\r\n        const id= await _getUserId()\r\n        const res= await SystemService.getWorkplaceByUserId(+id)\r\n        if(res.isSuccess==1){\r\n            let dataStoreProduct = res.data\r\n            dataStoreProduct.map((map, index) => {\r\n            dataPicker.push({ label: map.workplace, value: map.id });\r\n        })\r\n        }\r\n        setDataModel(dataPicker)\r\n        onSelectedValue(dataPicker[0]);\r\n        setPickerValue(dataPicker[0]?.label??'');\r\n        dispatch({ type: \"PICK_WORKPLACE\", payload: dataPicker[0] });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadDataStore();\r\n    }, [defaultValue])\r\n\r\n    return (\r\n        <View>\r\n            <View style={styles.containerPicker}>\r\n                <TouchableWithoutFeedback\r\n                    onPress={\r\n                        () => {\r\n                            setModalVisible(true);\r\n                        }\r\n                    }\r\n                >\r\n                    <View style={styles.viewPicker}>\r\n                        <View style={styles.pickerModal}>\r\n                            <Text style={styles.text}>{pickerValue}</Text>\r\n                        </View>\r\n                        <Ionicons style={styles.iconDown} name=\"caret-down\" size={20} color=\"#fff\"\r\n                            onPress={() => {\r\n                                setModalVisible(true);\r\n                            }} />\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n\r\n            <Modal\r\n                animationType=\"fade\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n            >\r\n                <TouchableHighlight\r\n                    style={{ borderRadius: 4, height: windowHeight }}\r\n                    onPressIn={() => {\r\n                        setModalVisible(false)\r\n                    }}\r\n                >\r\n                    <View style={[styles.centeredView, { height: windowHeight, backgroundColor: 'rgba(0, 0, 0, 0.5)' }]}>\r\n                        <View style={[styles.modalView, { width: windowWidth - 30 }]}>\r\n                            <View style={{ marginTop: 10 }}>\r\n                                <Text style={[styles.title, { color: colors.white, textAlign: 'center', fontWeight: 'bold' }]}>Choose Outlet</Text>\r\n                            </View>\r\n                            <ScrollView>\r\n                                {\r\n                                    dataModel.map((data, index) => (\r\n                                        <View key={index}>\r\n                                            <TouchableHighlight\r\n                                                style={{ padding: 10 }}\r\n                                                underlayColor={'rgba(0, 0, 0, 0.2)'}\r\n                                                onPress={() => {\r\n                                                    handleConfirm(data)\r\n                                                }}\r\n                                            >\r\n                                                <Text style={[styles.textItem, { color: colors.white }]}>{data.label}</Text>\r\n                                            </TouchableHighlight>\r\n                                        </View>\r\n                                    ))\r\n                                }\r\n                            </ScrollView>\r\n                        </View>\r\n                    </View>\r\n                </TouchableHighlight>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default PickerModel;\r\n\r\nconst styles = StyleSheet.create({\r\n    containerPicker: {\r\n        marginTop: 10,\r\n        backgroundColor: colors.backgroundApp,\r\n        paddingBottom: 15\r\n    },\r\n    text: {\r\n        color: colors.white,\r\n        fontSize: 16,\r\n        fontWeight: '500',\r\n        lineHeight: 24\r\n    },\r\n    viewPicker: {\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        paddingLeft: 15,\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4\r\n    },\r\n    pickerModal: {\r\n        height: 46,\r\n        borderRadius: 4,\r\n        justifyContent: 'center',\r\n        backgroundColor: colors.grayLight,\r\n        color: '#fff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3,\r\n        },\r\n    },\r\n    iconDown: {\r\n        justifyContent: 'center',\r\n        position: 'absolute',\r\n        right: 10,\r\n        bottom: 12,\r\n        zIndex: 4\r\n    },\r\n    centeredView: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n    },\r\n    modalView: {\r\n        backgroundColor: colors.grayLight,\r\n        width: 380,\r\n        height: 135,\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        borderRadius: 4,\r\n        paddingBottom: 20,\r\n        justifyContent: 'flex-start',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n        lineHeight: 24,\r\n        color: colors.white\r\n    },\r\n    textItem: {\r\n        color: colors.white,\r\n        fontWeight: '400',\r\n        fontSize: 16,\r\n        lineHeight: 24\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}