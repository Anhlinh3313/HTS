{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Environment } from \"../environment\";\nimport { _getToken } from \"./authService\";\nvar url = Environment.apiPost;\nexport var updatePrice = function updatePrice(_itemCode, _maxPrice, _minPrice) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function updatePrice$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Price/UpdatePrice', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              itemCode: _itemCode,\n              maxPrice: _maxPrice,\n              minPrice: _minPrice\n            })\n          }));\n\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](3);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/priceService.tsx"],"names":["Environment","_getToken","url","apiPost","updatePrice","_itemCode","_maxPrice","_minPrice","token","fetch","method","headers","body","JSON","stringify","itemCode","maxPrice","minPrice","response","json","console","error"],"mappings":";AAAA,SAASA,WAAT;AACA,SAASC,SAAT;AAEA,IAAIC,GAAG,GAAGF,WAAW,CAACG,OAAtB;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,SAAP,EAAuBC,SAAvB,EAAuCC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHN,SAAS,EADN;;AAAA;AACjBO,UAAAA,KADiB;AAAA;AAAA;AAAA,2CAGEC,KAAK,CAACP,GAAG,GAAG,wBAAP,EAAiC;AACvDQ,YAAAA,MAAM,EAAE,MAD+C;AAEvDC,YAAAA,OAAO,EAAE;AACL,wBAAU,kBADL;AAEL,8BAAgB,kBAFX;AAGL,+BAAiBH,KAAK,eAAaA,KAAb,GAAuB;AAHxC,aAF8C;AAOvDI,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,cAAAA,QAAQ,EAAEV,SADO;AAEjBW,cAAAA,QAAQ,EAAEV,SAFO;AAGjBW,cAAAA,QAAQ,EAAEV;AAHO,aAAf;AAPiD,WAAjC,CAHP;;AAAA;AAGfW,UAAAA,QAHe;AAAA;AAAA,2CAgBFA,QAAQ,CAACC,IAAT,EAhBE;;AAAA;AAgBfA,UAAAA,IAhBe;AAAA,2CAiBZA,IAjBY;;AAAA;AAAA;AAAA;AAmBnBC,UAAAA,OAAO,CAACC,KAAR;AAnBmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import { Environment } from \"../environment\";\r\nimport { _getToken } from \"./authService\";\r\n\r\nlet url = Environment.apiPost;\r\nexport const updatePrice = async (_itemCode: any, _maxPrice: any, _minPrice: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Price/UpdatePrice', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                itemCode: _itemCode,\r\n                maxPrice: _maxPrice,\r\n                minPrice: _minPrice,\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}