{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Environment } from \"../environment\";\nimport { _getToken } from \"./authService\";\nvar url = Environment.apiPost;\nexport var getTransactionDetail = function getTransactionDetail(StringDateFrom, StringDateTo, MemCode, Transact) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getTransactionDetail$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + \"/api/Speedpos/TransactionDetail\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? \"Bearer \" + token : \"\"\n            },\n            body: JSON.stringify({\n              StringDateFrom: StringDateFrom,\n              StringDateTo: StringDateTo,\n              MemCode: MemCode,\n              Transact: Transact\n            })\n          }));\n\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](3);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getTransactionPayment = function getTransactionPayment(StringDateFrom, StringDateTo, MemCode, Transact) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getTransactionPayment$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context2.sent;\n          _context2.prev = 3;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + \"/api/Speedpos/TransactionPayment\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? \"Bearer \" + token : \"\"\n            },\n            body: JSON.stringify({\n              StringDateFrom: StringDateFrom,\n              StringDateTo: StringDateTo,\n              MemCode: MemCode,\n              Transact: Transact\n            })\n          }));\n\n        case 6:\n          response = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context2.sent;\n          return _context2.abrupt(\"return\", json);\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](3);\n          console.error(_context2.t0);\n          return _context2.abrupt(\"return\", _context2.t0);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/transactionService.ts"],"names":["Environment","_getToken","url","apiPost","getTransactionDetail","StringDateFrom","StringDateTo","MemCode","Transact","token","fetch","method","headers","Accept","Authorization","body","JSON","stringify","response","json","console","error","getTransactionPayment"],"mappings":";AAAA,SAASA,WAAT;AACA,SAASC,SAAT;AACA,IAAIC,GAAG,GAAGF,WAAW,CAACG,OAAtB;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAOC,cAAP,EAA4BC,YAA5B,EAA+CC,OAA/C,EAA6DC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACdP,SAAS,EADK;;AAAA;AAC5BQ,UAAAA,KAD4B;AAAA;AAAA;AAAA,2CAGXC,KAAK,CAACR,GAAG,GAAG,iCAAP,EAA0C;AAClES,YAAAA,MAAM,EAAE,MAD0D;AAElEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,kBADD;AAEP,8BAAgB,kBAFT;AAGPC,cAAAA,aAAa,EAAEL,KAAK,eAAaA,KAAb,GAAuB;AAHpC,aAFyD;AAOlEM,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBZ,cAAAA,cAAc,EAAdA,cADmB;AAEnBC,cAAAA,YAAY,EAAZA,YAFmB;AAGnBC,cAAAA,OAAO,EAAPA,OAHmB;AAInBC,cAAAA,QAAQ,EAARA;AAJmB,aAAf;AAP4D,WAA1C,CAHM;;AAAA;AAG5BU,UAAAA,QAH4B;AAAA;AAAA,2CAiBfA,QAAQ,CAACC,IAAT,EAjBe;;AAAA;AAiB5BA,UAAAA,IAjB4B;AAAA,2CAkBzBA,IAlByB;;AAAA;AAAA;AAAA;AAoBhCC,UAAAA,OAAO,CAACC,KAAR;AApBgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAwBP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAOjB,cAAP,EAA4BC,YAA5B,EAA+CC,OAA/C,EAA6DC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACfP,SAAS,EADM;;AAAA;AAC7BQ,UAAAA,KAD6B;AAAA;AAAA;AAAA,2CAGZC,KAAK,CAACR,GAAG,GAAG,kCAAP,EAA2C;AACnES,YAAAA,MAAM,EAAE,MAD2D;AAEnEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,kBADD;AAEP,8BAAgB,kBAFT;AAGPC,cAAAA,aAAa,EAAEL,KAAK,eAAaA,KAAb,GAAuB;AAHpC,aAF0D;AAOnEM,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBZ,cAAAA,cAAc,EAAdA,cADmB;AAEnBC,cAAAA,YAAY,EAAZA,YAFmB;AAGnBC,cAAAA,OAAO,EAAPA,OAHmB;AAInBC,cAAAA,QAAQ,EAARA;AAJmB,aAAf;AAP6D,WAA3C,CAHO;;AAAA;AAG7BU,UAAAA,QAH6B;AAAA;AAAA,2CAiBhBA,QAAQ,CAACC,IAAT,EAjBgB;;AAAA;AAiB7BA,UAAAA,IAjB6B;AAAA,4CAkB1BA,IAlB0B;;AAAA;AAAA;AAAA;AAoBjCC,UAAAA,OAAO,CAACC,KAAR;AApBiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B","sourcesContent":["import { Environment } from \"../environment\";\r\nimport { _getToken } from \"./authService\";\r\nlet url = Environment.apiPost;\r\nexport const getTransactionDetail = async (StringDateFrom: any, StringDateTo: any, MemCode: any, Transact: any) => {\r\n  const token = await _getToken();\r\n  try {\r\n    let response = await fetch(url + \"/api/Speedpos/TransactionDetail\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n      body: JSON.stringify({\r\n        StringDateFrom,\r\n        StringDateTo,\r\n        MemCode,\r\n        Transact,\r\n      }),\r\n    });\r\n    let json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error;\r\n  }\r\n};\r\nexport const getTransactionPayment = async (StringDateFrom: any, StringDateTo: any, MemCode: any, Transact: any) => {\r\n  const token = await _getToken();\r\n  try {\r\n    let response = await fetch(url + \"/api/Speedpos/TransactionPayment\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n      body: JSON.stringify({\r\n        StringDateFrom,\r\n        StringDateTo,\r\n        MemCode,\r\n        Transact,\r\n      }),\r\n    });\r\n    let json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}