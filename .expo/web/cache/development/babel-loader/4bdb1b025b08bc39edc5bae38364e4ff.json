{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\login\\\\ChangePassword.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { colors } from \"../../../utils/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { UserService } from \"../../../netWorking/userService\";\nimport { _getUserId, _getItem } from \"../../../netWorking/authService\";\nimport Loading from \"../../../components/dialogs/Loading\";\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\nimport SendFail from \"../../../components/modalNotification/SendFail\";\n\nvar ChangePassword = function ChangePassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sent = _useState4[0],\n      setSent = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      statusSent = _useState6[0],\n      setStatusSent = _useState6[1];\n\n  var _statusInput = {\n    password: {\n      isShowPass: false,\n      error: \"\"\n    },\n    newPassword: {\n      isShowPass: false,\n      error: \"\"\n    },\n    confirmPassword: {\n      isShowPass: false,\n      error: \"\"\n    }\n  };\n  var _input = {\n    password: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  };\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isSubmit = _useState8[0],\n      setIssubmit = _useState8[1];\n\n  var _useState9 = useState(_input),\n      _useState10 = _slicedToArray(_useState9, 2),\n      input = _useState10[0],\n      setInput = _useState10[1];\n\n  var _useState11 = useState(_statusInput),\n      _useState12 = _slicedToArray(_useState11, 2),\n      statusInput = _useState12[0],\n      setStatusInput = _useState12[1];\n\n  var handleInput = function handleInput(key, value) {\n    setInput(_objectSpread(_objectSpread({}, input), {}, _defineProperty({}, key, value)));\n  };\n\n  var onSubmit = function onSubmit() {\n    var validate, pass, id, res;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(validateForm());\n\n          case 2:\n            validate = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(_getItem(\"password\"));\n\n          case 5:\n            pass = _context.sent;\n\n            if (!(input.password != pass)) {\n              _context.next = 9;\n              break;\n            }\n\n            alert(\"Wrong password!\");\n            return _context.abrupt(\"return\");\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(_getUserId());\n\n          case 11:\n            id = _context.sent;\n            setIsLoading(true);\n\n            if (!validate) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(UserService.changePassword({\n              userId: +id,\n              currentPassWord: input.password,\n              newPassWord: input.newPassword\n            }));\n\n          case 16:\n            res = _context.sent;\n\n            if (res.isSuccess === 1) {\n              setSent(\"success\");\n              setStatusSent(\"Change password success!\");\n            } else {\n              setSent(\"fail\");\n              setStatusSent(\"Change password fail!\");\n            }\n\n          case 18:\n            setIsLoading(false);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var validateForm = function validateForm() {\n    if (input.password == \"\") {\n      alert(\"Password cannot be blank!\");\n      return false;\n    }\n\n    if (input.newPassword == \"\") {\n      alert(\"New Password cannot be blank!\");\n      return false;\n    }\n\n    if (input.confirmPassword == \"\") {\n      alert(\"Confirm Password cannot be blank!\");\n      return false;\n    }\n\n    if (input.newPassword != input.confirmPassword) {\n      alert(\"Confirm password must be equal to password!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  var handleShowPass = function handleShowPass(type) {\n    var data = statusInput;\n    data[type].isShowPass = !data[type].isShowPass;\n    setStatusInput(_objectSpread(_objectSpread({}, statusInput), data));\n  };\n\n  var ViewInput = function ViewInput(type, valueInput, placeholder) {\n    return React.createElement(View, {\n      style: {\n        height: 56,\n        marginTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        height: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, statusInput[type].error == \"\" ? React.createElement(React.Fragment, null) : React.createElement(Text, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 52\n      }\n    }, statusInput[type].error)), React.createElement(View, {\n      style: [styles.viewInput, {\n        borderColor: statusInput[type].error == \"\" ? colors.black : \"red\",\n        borderWidth: 1\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, React.createElement(TextInput, {\n      style: styles.textInput,\n      value: valueInput,\n      onChangeText: function onChangeText(text) {\n        return handleInput(type, text);\n      },\n      placeholder: placeholder,\n      placeholderTextColor: \"#BDBDBD\",\n      secureTextEntry: !statusInput[type].isShowPass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: styles.showPass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, React.createElement(Ionicons, {\n      name: statusInput[type].isShowPass ? \"eye\" : \"eye-off\",\n      size: 20,\n      color: \"#fff\",\n      onPress: function onPress() {\n        handleShowPass(type);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return React.createElement(TouchableNativeFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, isSubmit ? React.createElement(View, {\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#988050\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.rowlogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formlogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, ViewInput(\"password\", input.password, \"Password\"), ViewInput(\"newPassword\", input.newPassword, \"New Password\"), ViewInput(\"confirmPassword\", input.confirmPassword, \"Confirm Password\"), React.createElement(LinearGradient, {\n    style: styles.button,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      onSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Complete\"))))), React.createElement(SendSuccess, {\n    title: statusSent,\n    visible: sent === \"success\",\n    onRequestClose: function onRequestClose() {\n      setSent(\"\");\n      props.navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), React.createElement(SendFail, {\n    title: statusSent,\n    visible: sent === \"fail\",\n    onRequestClose: function onRequestClose() {\n      setSent(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), isLoading && React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default ChangePassword;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundLogin\n  },\n  title: {\n    color: colors.gray,\n    fontSize: 14,\n    textAlign: \"center\",\n    marginBottom: 30,\n    fontWeight: \"400\"\n  },\n  textButton: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 17\n  },\n  rowlogin: {\n    flex: 7,\n    justifyContent: \"space-between\",\n    paddingTop: 60,\n    paddingBottom: 0\n  },\n  formlogin: {\n    justifyContent: \"flex-start\",\n    paddingRight: 30,\n    paddingLeft: 30\n  },\n  viewInput: {\n    flexDirection: \"row\",\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\n    height: 46,\n    borderRadius: 4,\n    zIndex: 1\n  },\n  textInput: {\n    color: \"white\",\n    opacity: 1,\n    zIndex: 3,\n    width: \"100%\",\n    paddingLeft: 15,\n    fontSize: 14,\n    fontWeight: \"400\"\n  },\n  button: {\n    marginTop: 32,\n    borderRadius: 4,\n    height: 46,\n    justifyContent: \"center\"\n  },\n  errorText: {\n    color: colors.red,\n    marginLeft: 5,\n    fontWeight: \"500\",\n    fontSize: 12,\n    marginStart: 15\n  },\n  showPass: {\n    justifyContent: \"center\",\n    position: \"absolute\",\n    right: 0,\n    zIndex: 4,\n    width: 40,\n    height: 50,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/login/ChangePassword.tsx"],"names":["React","useState","colors","LinearGradient","Ionicons","UserService","_getUserId","_getItem","Loading","SendSuccess","SendFail","ChangePassword","props","isLoading","setIsLoading","sent","setSent","statusSent","setStatusSent","_statusInput","password","isShowPass","error","newPassword","confirmPassword","_input","isSubmit","setIssubmit","input","setInput","statusInput","setStatusInput","handleInput","key","value","onSubmit","validateForm","validate","pass","alert","id","changePassword","userId","currentPassWord","newPassWord","res","isSuccess","handleShowPass","type","data","ViewInput","valueInput","placeholder","height","marginTop","styles","errorText","viewInput","borderColor","black","borderWidth","textInput","text","showPass","Keyboard","dismiss","container","justifyContent","rowlogin","formlogin","button","textButton","navigation","goBack","StyleSheet","create","flex","backgroundColor","backgroundLogin","title","color","gray","fontSize","textAlign","marginBottom","fontWeight","paddingTop","paddingBottom","paddingRight","paddingLeft","flexDirection","borderRadius","zIndex","opacity","width","red","marginLeft","marginStart","position","right","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Keyboard,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { AuthorStackParamList } from \"../../../types\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { UserService } from \"../../../netWorking/userService\";\r\nimport { _getUserId, _getItem } from \"../../../netWorking/authService\";\r\nimport Loading from \"../../../components/dialogs/Loading\";\r\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\r\nimport SendFail from \"../../../components/modalNotification/SendFail\";\r\ninterface Props {\r\n  navigation: StackNavigationProp<AuthorStackParamList>;\r\n}\r\n\r\nconst ChangePassword = (props: Props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [sent, setSent] = useState(\"\");\r\n  const [statusSent, setStatusSent] = useState(\"\");\r\n  interface IStatus {\r\n    isShowPass: boolean;\r\n    error: string;\r\n  }\r\n  interface IInput {\r\n    password: IStatus;\r\n    newPassword: IStatus;\r\n    confirmPassword: IStatus;\r\n  }\r\n  const _statusInput = {\r\n    password: { isShowPass: false, error: \"\" },\r\n    newPassword: { isShowPass: false, error: \"\" },\r\n    confirmPassword: { isShowPass: false, error: \"\" },\r\n  };\r\n  const _input = {\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  const [isSubmit, setIssubmit] = useState(false);\r\n\r\n  const [input, setInput] = useState<IPassword>(_input);\r\n  const [statusInput, setStatusInput] = useState(_statusInput);\r\n\r\n  const handleInput = (key: string, value: any) => {\r\n    setInput({ ...input, [key]: value });\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    let validate = await validateForm();\r\n    let pass = await _getItem(\"password\");\r\n    if (input.password != pass) {\r\n      alert(\"Wrong password!\");\r\n      return;\r\n    }\r\n    let id = await _getUserId();\r\n    setIsLoading(true);\r\n    if (validate) {\r\n      const res = await UserService.changePassword({\r\n        userId: +id,\r\n        currentPassWord: input.password,\r\n        newPassWord: input.newPassword,\r\n      });\r\n      if (res.isSuccess === 1) {\r\n        setSent(\"success\");\r\n        setStatusSent(\"Change password success!\");\r\n      } else {\r\n        setSent(\"fail\");\r\n        setStatusSent(\"Change password fail!\");\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const validateForm = () => {\r\n    if (input.password == \"\") {\r\n      alert(\"Password cannot be blank!\");\r\n      return false;\r\n    }\r\n\r\n    if (input.newPassword == \"\") {\r\n      alert(\"New Password cannot be blank!\");\r\n      return false;\r\n    }\r\n\r\n    if (input.confirmPassword == \"\") {\r\n      alert(\"Confirm Password cannot be blank!\");\r\n      return false;\r\n    }\r\n    if (input.newPassword != input.confirmPassword) {\r\n      alert(\"Confirm password must be equal to password!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const handleShowPass = (type: keyof IInput) => {\r\n    let data = statusInput;\r\n    data[type].isShowPass = !data[type].isShowPass;\r\n    setStatusInput({ ...statusInput, ...data });\r\n  };\r\n  const ViewInput = (type: keyof IInput, valueInput: string | undefined, placeholder: string) => {\r\n    return (\r\n      <View style={{ height: 56, marginTop: 5 }}>\r\n        <View style={{ height: 15 }}>\r\n          {statusInput[type].error == \"\" ? <></> : <Text style={styles.errorText}>{statusInput[type].error}</Text>}\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.viewInput,\r\n            {\r\n              borderColor: statusInput[type].error == \"\" ? colors.black : \"red\",\r\n              borderWidth: 1,\r\n            },\r\n          ]}\r\n        >\r\n          <TextInput\r\n            style={styles.textInput}\r\n            value={valueInput}\r\n            onChangeText={text => handleInput(type, text)}\r\n            placeholder={placeholder}\r\n            placeholderTextColor=\"#BDBDBD\"\r\n            secureTextEntry={!statusInput[type].isShowPass}\r\n          ></TextInput>\r\n          <TouchableOpacity style={styles.showPass}>\r\n            <Ionicons\r\n              name={statusInput[type].isShowPass ? \"eye\" : \"eye-off\"}\r\n              size={20}\r\n              color=\"#fff\"\r\n              onPress={() => {\r\n                handleShowPass(type);\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TouchableNativeFeedback onPress={Keyboard.dismiss}>\r\n      <View style={styles.container}>\r\n        {isSubmit ? (\r\n          <View style={{ justifyContent: \"center\" }}>\r\n            <ActivityIndicator size=\"large\" color=\"#988050\" />\r\n          </View>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <View style={styles.rowlogin}>\r\n          <View style={styles.formlogin}>\r\n            {ViewInput(\"password\", input.password, \"Password\")}\r\n            {ViewInput(\"newPassword\", input.newPassword, \"New Password\")}\r\n            {ViewInput(\"confirmPassword\", input.confirmPassword, \"Confirm Password\")}\r\n            <LinearGradient style={styles.button} colors={[\"#DAB451\", \"#988050\"]}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  onSubmit();\r\n                }}\r\n              >\r\n                <Text style={styles.textButton}>Complete</Text>\r\n              </TouchableOpacity>\r\n            </LinearGradient>\r\n          </View>\r\n        </View>\r\n\r\n        <SendSuccess\r\n          title={statusSent}\r\n          visible={sent === \"success\"}\r\n          onRequestClose={() => {\r\n            setSent(\"\");\r\n            props.navigation.goBack();\r\n          }}\r\n        ></SendSuccess>\r\n        <SendFail\r\n          title={statusSent}\r\n          visible={sent === \"fail\"}\r\n          onRequestClose={() => {\r\n            setSent(\"\");\r\n          }}\r\n        ></SendFail>\r\n        {isLoading && <Loading />}\r\n      </View>\r\n    </TouchableNativeFeedback>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.backgroundLogin,\r\n  },\r\n  title: {\r\n    color: colors.gray,\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n    fontWeight: \"400\",\r\n  },\r\n  textButton: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 17,\r\n  },\r\n  rowlogin: {\r\n    flex: 7,\r\n    justifyContent: \"space-between\",\r\n    paddingTop: 60,\r\n    paddingBottom: 0,\r\n  },\r\n  formlogin: {\r\n    justifyContent: \"flex-start\",\r\n    paddingRight: 30,\r\n    paddingLeft: 30,\r\n  },\r\n  viewInput: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"rgba(242, 243, 245, 0.2)\",\r\n    height: 46,\r\n    borderRadius: 4,\r\n    // marginBottom: 20,\r\n    zIndex: 1,\r\n  },\r\n  textInput: {\r\n    color: \"white\",\r\n    opacity: 1,\r\n    zIndex: 3,\r\n    width: \"100%\",\r\n    paddingLeft: 15,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n  button: {\r\n    marginTop: 32,\r\n    borderRadius: 4,\r\n    height: 46,\r\n    justifyContent: \"center\",\r\n  },\r\n  errorText: {\r\n    color: colors.red,\r\n    marginLeft: 5,\r\n    fontWeight: \"500\",\r\n    fontSize: 12,\r\n    marginStart: 15,\r\n  },\r\n\r\n  showPass: {\r\n    justifyContent: \"center\",\r\n    position: \"absolute\",\r\n    right: 0,\r\n    zIndex: 4,\r\n    width: 40,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}