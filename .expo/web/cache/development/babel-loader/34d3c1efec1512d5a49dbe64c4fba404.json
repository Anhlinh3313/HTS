{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\components\\\\ModalSendEmail\\\\index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { colors } from \"../../utils/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { ValidateEmail } from \"../management/utils\";\nimport SvgUri from \"react-native-svg-uri\";\nimport { Icons } from \"../../assets\";\nexport default function modalSendEmail(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"Weekly Crew Schedule & OT Forecast Sample\" : _ref$title,\n      visible = _ref.visible,\n      _onRequestClose = _ref.onRequestClose,\n      onChangeText = _ref.onChangeText,\n      onRequestSend = _ref.onRequestSend,\n      _ref$isPickType = _ref.isPickType,\n      isPickType = _ref$isPickType === void 0 ? false : _ref$isPickType,\n      _ref$isVisibleEmail = _ref.isVisibleEmail,\n      isVisibleEmail = _ref$isVisibleEmail === void 0 ? true : _ref$isVisibleEmail;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"excel\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valueRadioButton = _useState6[0],\n      setValueRadioButton = _useState6[1];\n\n  var handleSend = function handleSend() {\n    return _regeneratorRuntime.async(function handleSend$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isVisibleEmail) {\n              _context.next = 7;\n              break;\n            }\n\n            if (!(email === \"\")) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"Email cannot be blank!\");\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (ValidateEmail(email)) {\n              _context.next = 7;\n              break;\n            }\n\n            alert(\"Email invalid!\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            onRequestSend(description, email);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    statusBarTranslucent: true,\n    onRequestClose: function onRequestClose() {\n      _onRequestClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: [styles.containerModal],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, title)), React.createElement(View, {\n    style: styles.bodyInputModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.textTitleModal],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Description\"), React.createElement(TextInput, {\n    multiline: true,\n    style: [styles.inputModal, {\n      height: 180,\n      textAlignVertical: \"top\"\n    }],\n    placeholder: \"Enter Text\",\n    placeholderTextColor: colors.gray,\n    value: description,\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), isVisibleEmail && React.createElement(View, {\n    style: styles.bodyInputModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Send to email\"), React.createElement(TextInput, {\n    style: styles.inputModal,\n    placeholder: \"Enter email\",\n    placeholderTextColor: colors.gray,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), isPickType && React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setValueRadioButton(\"excel\");\n    },\n    style: styles.radioButtonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    source: valueRadioButton === \"excel\" ? Icons.iconRadioButton : Icons.iconRadioButtonOff,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: [styles.textButton, {\n      marginLeft: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Excel\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setValueRadioButton(\"pdf\");\n    },\n    style: styles.radioButtonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    source: valueRadioButton === \"pdf\" ? Icons.iconRadioButton : Icons.iconRadioButtonOff,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: [styles.textButton, {\n      marginLeft: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"PDF\"))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginTop: 20,\n      marginBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      _onRequestClose();\n    },\n    style: [styles.buttonSend, {\n      backgroundColor: \"#636363\",\n      flex: 1,\n      marginRight: 8\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Close\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      handleSend();\n    },\n    style: {\n      flex: 1,\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(LinearGradient, {\n    style: styles.buttonSend,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Send\")))))));\n}\nvar styles = StyleSheet.create({\n  containerModal: {\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modal: {\n    backgroundColor: \"#414141\",\n    borderRadius: 4,\n    padding: 15,\n    width: \"90%\"\n  },\n  headerModal: {\n    borderBottomWidth: 0.5,\n    borderBottomColor: colors.colorLine,\n    paddingBottom: 15,\n    alignItems: \"center\"\n  },\n  textMain: {\n    color: \"#DAB451\",\n    fontWeight: \"500\",\n    alignItems: \"center\"\n  },\n  bodyInputModal: {\n    marginTop: 15\n  },\n  textTitleModal: {\n    fontWeight: \"600\",\n    color: colors.gray,\n    fontSize: 12,\n    marginBottom: 4\n  },\n  inputModal: {\n    borderRadius: 4,\n    backgroundColor: \"#303030\",\n    paddingHorizontal: 10,\n    color: colors.colorText,\n    paddingVertical: 8,\n    fontStyle: \"italic\",\n    fontWeight: \"300\"\n  },\n  textButton: {\n    fontSize: 16,\n    color: colors.colorText\n  },\n  buttonSend: {\n    height: 36,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4\n  },\n  radioButtonStyle: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/components/ModalSendEmail/index.tsx"],"names":["React","useState","colors","LinearGradient","ValidateEmail","SvgUri","Icons","modalSendEmail","title","visible","onRequestClose","onChangeText","onRequestSend","isPickType","isVisibleEmail","description","setDescription","email","setEmail","valueRadioButton","setValueRadioButton","handleSend","alert","Platform","OS","styles","containerModal","modal","headerModal","textMain","bodyInputModal","textTitleModal","inputModal","height","textAlignVertical","gray","text","flexDirection","marginTop","radioButtonStyle","iconRadioButton","iconRadioButtonOff","textButton","marginLeft","marginBottom","buttonSend","backgroundColor","flex","marginRight","StyleSheet","create","justifyContent","alignItems","borderRadius","padding","width","borderBottomWidth","borderBottomColor","colorLine","paddingBottom","color","fontWeight","fontSize","paddingHorizontal","colorText","paddingVertical","fontStyle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;AAGA,SAASC,MAAT;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,aAAT;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,KAAT;AAEA,eAAe,SAASC,cAAT,OAiBZ;AAAA,wBAhBDC,KAgBC;AAAA,MAhBDA,KAgBC,2BAhBO,2CAgBP;AAAA,MAfDC,OAeC,QAfDA,OAeC;AAAA,MAdDC,eAcC,QAdDA,cAcC;AAAA,MAbDC,YAaC,QAbDA,YAaC;AAAA,MAZDC,aAYC,QAZDA,aAYC;AAAA,6BAXDC,UAWC;AAAA,MAXDA,UAWC,gCAXY,KAWZ;AAAA,iCAVDC,cAUC;AAAA,MAVDA,cAUC,oCAVgB,IAUhB;;AACD,kBAAsCb,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOc,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA0Bf,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOgB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgDjB,QAAQ,CAAC,OAAD,CAAxD;AAAA;AAAA,MAAOkB,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA,iBACbP,cADa;AAAA;AAAA;AAAA;;AAAA,kBAEXG,KAAK,KAAK,EAFC;AAAA;AAAA;AAAA;;AAGbK,YAAAA,KAAK,CAAC,wBAAD,CAAL;AAHa;;AAAA;AAAA,gBAMVlB,aAAa,CAACa,KAAD,CANH;AAAA;AAAA;AAAA;;AAObK,YAAAA,KAAK,CAAC,gBAAD,CAAL;AAPa;;AAAA;AAWjBV,YAAAA,aAAa,CAACG,WAAD,EAAcE,KAAd,CAAb;;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAaA,SACE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAER,OAHX;AAIE,IAAA,oBAAoB,EAAE,IAJxB;AAKE,IAAA,cAAc,EAAE,0BAAM;AACpBC,MAAAA,eAAc;AACf,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAEa,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QAApE;AAA8E,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,cAAR,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BrB,KAA/B,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACL,MAAM,CAACM,cAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAE,CAACN,MAAM,CAACO,UAAR,EAAoB;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,iBAAiB,EAAE;AAAlC,KAApB,CAFT;AAGE,IAAA,WAAW,EAAE,YAHf;AAIE,IAAA,oBAAoB,EAAEhC,MAAM,CAACiC,IAJ/B;AAKE,IAAA,KAAK,EAAEpB,WALT;AAME,IAAA,YAAY,EAAE,sBAAAqB,IAAI;AAAA,aAAIpB,cAAc,CAACoB,IAAD,CAAlB;AAAA,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,EAeGtB,cAAc,IACb,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEN,MAAM,CAACO,UADhB;AAEE,IAAA,WAAW,EAAE,aAFf;AAGE,IAAA,oBAAoB,EAAE9B,MAAM,CAACiC,IAH/B;AAIE,IAAA,KAAK,EAAElB,KAJT;AAKE,IAAA,YAAY,EAAE,sBAAAmB,IAAI;AAAA,aAAIlB,QAAQ,CAACkB,IAAD,CAAZ;AAAA,KALpB;AAME,IAAA,YAAY,EAAE,eANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhBJ,EA8BGvB,UAAU,IACT,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwB,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACblB,MAAAA,mBAAmB,CAAC,OAAD,CAAnB;AACD,KAHH;AAIE,IAAA,KAAK,EAAEK,MAAM,CAACc,gBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEpB,gBAAgB,KAAK,OAArB,GAA+Bb,KAAK,CAACkC,eAArC,GAAuDlC,KAAK,CAACmC,kBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAChB,MAAM,CAACiB,UAAR,EAAoB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,EAUE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbvB,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAHH;AAIE,IAAA,KAAK,EAAEK,MAAM,CAACc,gBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEpB,gBAAgB,KAAK,KAArB,GAA6Bb,KAAK,CAACkC,eAAnC,GAAqDlC,KAAK,CAACmC,kBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAChB,MAAM,CAACiB,UAAR,EAAoB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CAVF,CA/BJ,EAsDE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEN,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,SAAS,EAAE,EAAnC;AAAuCM,MAAAA,YAAY,EAAE;AAArD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACblC,MAAAA,eAAc;AACf,KAHH;AAIE,IAAA,KAAK,EAAE,CAACe,MAAM,CAACoB,UAAR,EAAoB;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,IAAI,EAAE,CAApC;AAAuCC,MAAAA,WAAW,EAAE;AAApD,KAApB,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACiB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF,EASE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbrB,MAAAA,UAAU;AACX,KAHH;AAIE,IAAA,KAAK,EAAE;AAAE0B,MAAAA,IAAI,EAAE,CAAR;AAAWJ,MAAAA,UAAU,EAAE;AAAvB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAElB,MAAM,CAACoB,UAA9B;AAA0C,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACiB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CANF,CATF,CAtDF,CADF,CATF,CADF;AAyFD;AAED,IAAMjB,MAAM,GAAGwB,UAAU,CAACC,MAAX,CAAkB;AAC/BxB,EAAAA,cAAc,EAAE;AACdoB,IAAAA,eAAe,EAAE,oBADH;AAEdC,IAAAA,IAAI,EAAE,CAFQ;AAGdI,IAAAA,cAAc,EAAE,QAHF;AAIdC,IAAAA,UAAU,EAAE;AAJE,GADe;AAO/BzB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,eAAe,EAAE,SADZ;AAELO,IAAAA,YAAY,EAAE,CAFT;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,KAAK,EAAE;AAJF,GAPwB;AAa/B3B,EAAAA,WAAW,EAAE;AACX4B,IAAAA,iBAAiB,EAAE,GADR;AAEXC,IAAAA,iBAAiB,EAAEvD,MAAM,CAACwD,SAFf;AAGXC,IAAAA,aAAa,EAAE,EAHJ;AAIXP,IAAAA,UAAU,EAAE;AAJD,GAbkB;AAmB/BvB,EAAAA,QAAQ,EAAE;AACR+B,IAAAA,KAAK,EAAE,SADC;AAERC,IAAAA,UAAU,EAAE,KAFJ;AAGRT,IAAAA,UAAU,EAAE;AAHJ,GAnBqB;AAwB/BtB,EAAAA,cAAc,EAAE;AACdQ,IAAAA,SAAS,EAAE;AADG,GAxBe;AA2B/BP,EAAAA,cAAc,EAAE;AACd8B,IAAAA,UAAU,EAAE,KADE;AAEdD,IAAAA,KAAK,EAAE1D,MAAM,CAACiC,IAFA;AAGd2B,IAAAA,QAAQ,EAAE,EAHI;AAIdlB,IAAAA,YAAY,EAAE;AAJA,GA3Be;AAiC/BZ,EAAAA,UAAU,EAAE;AACVqB,IAAAA,YAAY,EAAE,CADJ;AAEVP,IAAAA,eAAe,EAAE,SAFP;AAGViB,IAAAA,iBAAiB,EAAE,EAHT;AAIVH,IAAAA,KAAK,EAAE1D,MAAM,CAAC8D,SAJJ;AAKVC,IAAAA,eAAe,EAAE,CALP;AAMVC,IAAAA,SAAS,EAAE,QAND;AAOVL,IAAAA,UAAU,EAAE;AAPF,GAjCmB;AA2C/BnB,EAAAA,UAAU,EAAE;AACVoB,IAAAA,QAAQ,EAAE,EADA;AAGVF,IAAAA,KAAK,EAAE1D,MAAM,CAAC8D;AAHJ,GA3CmB;AAgD/BnB,EAAAA,UAAU,EAAE;AACVZ,IAAAA,MAAM,EAAE,EADE;AAEVkB,IAAAA,cAAc,EAAE,QAFN;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,YAAY,EAAE;AAJJ,GAhDmB;AAsD/Bd,EAAAA,gBAAgB,EAAE;AAChBQ,IAAAA,IAAI,EAAE,CADU;AAEhBV,IAAAA,aAAa,EAAE,KAFC;AAGhBe,IAAAA,UAAU,EAAE,QAHI;AAIhBR,IAAAA,YAAY,EAAE;AAJE;AAtDa,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, TextInput, Modal, TouchableOpacity, KeyboardAvoidingView, Platform } from \"react-native\";\r\n\r\nimport { colors } from \"../../utils/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { ValidateEmail } from \"../management/utils\";\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport { Icons } from \"../../assets\";\r\nimport { _getUserId } from \"../../netWorking/authService\";\r\nexport default function modalSendEmail({\r\n  title = \"Weekly Crew Schedule & OT Forecast Sample\",\r\n  visible,\r\n  onRequestClose,\r\n  onChangeText,\r\n  onRequestSend,\r\n  isPickType = false,\r\n  isVisibleEmail = true,\r\n}: {\r\n  title?: string;\r\n  dateTime?: string;\r\n  visible: boolean;\r\n  isPickType?: boolean;\r\n  onRequestClose: () => void;\r\n  onRequestSend?: (description, email) => void;\r\n  onChangeText?: (isVisible: boolean) => void;\r\n  isVisibleEmail?: boolean;\r\n}) {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [valueRadioButton, setValueRadioButton] = useState(\"excel\");\r\n  const handleSend = async () => {\r\n    if (isVisibleEmail) {\r\n      if (email === \"\") {\r\n        alert(\"Email cannot be blank!\");\r\n        return;\r\n      }\r\n      if (!ValidateEmail(email)) {\r\n        alert(\"Email invalid!\");\r\n        return;\r\n      }\r\n    }\r\n    onRequestSend(description, email);\r\n  };\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={visible}\r\n      statusBarTranslucent={true}\r\n      onRequestClose={() => {\r\n        onRequestClose();\r\n      }}\r\n    >\r\n      <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style={[styles.containerModal]}>\r\n        <View style={styles.modal}>\r\n          <View style={styles.headerModal}>\r\n            <Text style={styles.textMain}>{title}</Text>\r\n          </View>\r\n          <View style={styles.bodyInputModal}>\r\n            <Text style={[styles.textTitleModal]}>Description</Text>\r\n            <TextInput\r\n              multiline\r\n              style={[styles.inputModal, { height: 180, textAlignVertical: \"top\" }]}\r\n              placeholder={\"Enter Text\"}\r\n              placeholderTextColor={colors.gray}\r\n              value={description}\r\n              onChangeText={text => setDescription(text)}\r\n            ></TextInput>\r\n          </View>\r\n          {isVisibleEmail && (\r\n            <View style={styles.bodyInputModal}>\r\n              <Text style={styles.textTitleModal}>Send to email</Text>\r\n              <TextInput\r\n                style={styles.inputModal}\r\n                placeholder={\"Enter email\"}\r\n                placeholderTextColor={colors.gray}\r\n                value={email}\r\n                onChangeText={text => setEmail(text)}\r\n                keyboardType={\"email-address\"}\r\n              ></TextInput>\r\n            </View>\r\n          )}\r\n\r\n          {/* RadioButton */}\r\n          {isPickType && (\r\n            <View style={{ flexDirection: \"row\", marginTop: 15 }}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setValueRadioButton(\"excel\");\r\n                }}\r\n                style={styles.radioButtonStyle}\r\n              >\r\n                <SvgUri source={valueRadioButton === \"excel\" ? Icons.iconRadioButton : Icons.iconRadioButtonOff} />\r\n                <Text style={[styles.textButton, { marginLeft: 10 }]}>Excel</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setValueRadioButton(\"pdf\");\r\n                }}\r\n                style={styles.radioButtonStyle}\r\n              >\r\n                <SvgUri source={valueRadioButton === \"pdf\" ? Icons.iconRadioButton : Icons.iconRadioButtonOff} />\r\n                <Text style={[styles.textButton, { marginLeft: 10 }]}>PDF</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n\r\n          {/* Button */}\r\n          <View style={{ flexDirection: \"row\", marginTop: 20, marginBottom: 5 }}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                onRequestClose();\r\n              }}\r\n              style={[styles.buttonSend, { backgroundColor: \"#636363\", flex: 1, marginRight: 8 }]}\r\n            >\r\n              <Text style={styles.textButton}>Close</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                handleSend();\r\n              }}\r\n              style={{ flex: 1, marginLeft: 8 }}\r\n            >\r\n              <LinearGradient style={styles.buttonSend} colors={[\"#DAB451\", \"#988050\"]}>\r\n                <Text style={styles.textButton}>Send</Text>\r\n              </LinearGradient>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  containerModal: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modal: {\r\n    backgroundColor: \"#414141\",\r\n    borderRadius: 4,\r\n    padding: 15,\r\n    width: \"90%\",\r\n  },\r\n  headerModal: {\r\n    borderBottomWidth: 0.5,\r\n    borderBottomColor: colors.colorLine,\r\n    paddingBottom: 15,\r\n    alignItems: \"center\",\r\n  },\r\n  textMain: {\r\n    color: \"#DAB451\",\r\n    fontWeight: \"500\",\r\n    alignItems: \"center\",\r\n  },\r\n  bodyInputModal: {\r\n    marginTop: 15,\r\n  },\r\n  textTitleModal: {\r\n    fontWeight: \"600\",\r\n    color: colors.gray,\r\n    fontSize: 12,\r\n    marginBottom: 4,\r\n  },\r\n  inputModal: {\r\n    borderRadius: 4,\r\n    backgroundColor: \"#303030\",\r\n    paddingHorizontal: 10,\r\n    color: colors.colorText,\r\n    paddingVertical: 8,\r\n    fontStyle: \"italic\",\r\n    fontWeight: \"300\",\r\n  },\r\n\r\n  textButton: {\r\n    fontSize: 16,\r\n\r\n    color: colors.colorText,\r\n  },\r\n  buttonSend: {\r\n    height: 36,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n  radioButtonStyle: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}