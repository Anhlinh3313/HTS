{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\components\\\\DropDownPickerLine\\\\index.tsx\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { colors } from \"../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { TouchableHighlight } from \"react-native-gesture-handler\";\n\nvar DropDownPicker = function DropDownPicker(_ref) {\n  var data = _ref.data,\n      itemSelected = _ref.itemSelected,\n      onSelected = _ref.onSelected;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShow = _useState2[0],\n      setIsShow = _useState2[1];\n\n  var onSelectedItem = function onSelectedItem(val) {\n    onSelected(val);\n    setIsShow(!isShow);\n  };\n\n  return React.createElement(View, {\n    style: {\n      marginTop: 15,\n      paddingHorizontal: 15,\n      zIndex: 999\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    underlayColor: \"transparent\",\n    onPress: function onPress() {\n      setIsShow(!isShow);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.viewPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textMain,\n    numberOfLines: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, itemSelected.label), React.createElement(Ionicons, {\n    style: styles.iconDown,\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    onPress: Platform.OS === \"ios\" ? function () {\n      setIsShow(!isShow);\n    } : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))), isShow && React.createElement(View, {\n    style: styles.viewPickCategory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, data.map(function (item, index) {\n    return React.createElement(TouchableHighlight, {\n      key: index,\n      underlayColor: \"#675E50\",\n      onPress: function onPress() {\n        return onSelectedItem(item);\n      },\n      style: styles.itemPicker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [styles.text, {\n        width: \"95%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, item.label));\n  })));\n};\n\nexport default DropDownPicker;\nvar styles = StyleSheet.create({\n  viewPicker: {\n    justifyContent: \"center\",\n    paddingBottom: 10,\n    borderBottomColor: colors.colorLine,\n    borderBottomWidth: 1\n  },\n  textMain: {\n    color: colors.colorLine,\n    fontSize: 14,\n    fontWeight: \"500\",\n    width: \"90%\"\n  },\n  text: {\n    color: colors.colorText,\n    fontSize: 16,\n    fontWeight: \"500\"\n  },\n  iconDown: {\n    position: \"absolute\",\n    top: -2,\n    right: 0,\n    zIndex: 4\n  },\n  viewPickCategory: {\n    backgroundColor: \"#414141\",\n    borderRadius: 4,\n    paddingVertical: 10,\n    marginHorizontal: 15,\n    position: \"absolute\",\n    right: 0,\n    left: 0,\n    top: 33,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  itemPicker: {\n    paddingHorizontal: 15,\n    paddingVertical: 8\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/components/DropDownPickerLine/index.tsx"],"names":["React","useState","colors","Ionicons","TouchableHighlight","DropDownPicker","data","itemSelected","onSelected","isShow","setIsShow","onSelectedItem","val","marginTop","paddingHorizontal","zIndex","styles","viewPicker","textMain","label","iconDown","Platform","OS","undefined","viewPickCategory","map","item","index","itemPicker","text","width","StyleSheet","create","justifyContent","paddingBottom","borderBottomColor","colorLine","borderBottomWidth","color","fontSize","fontWeight","colorText","position","top","right","backgroundColor","borderRadius","paddingVertical","marginHorizontal","left","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, ScrollView, Platform } from \"react-native\";\r\nimport { IModalPicker } from \"../../models/Imodel\";\r\nimport { colors } from \"../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport {\r\n  TouchableHighlight,\r\n  TouchableOpacity,\r\n} from \"react-native-gesture-handler\";\r\nconst DropDownPicker = ({\r\n  data,\r\n  itemSelected,\r\n  onSelected,\r\n}: {\r\n  data: IModalPicker[];\r\n  itemSelected: IModalPicker;\r\n  onSelected: (values: IModalPicker) => void;\r\n}) => {\r\n  const [isShow, setIsShow] = useState(false);\r\n  const onSelectedItem = (val: IModalPicker) => {\r\n    onSelected(val);\r\n    setIsShow(!isShow);\r\n  };\r\n  return (\r\n    <View style={{ marginTop: 15, paddingHorizontal: 15, zIndex: 999 }}>\r\n      <TouchableHighlight\r\n        underlayColor={\"transparent\"}\r\n        onPress={() => {\r\n          setIsShow(!isShow);\r\n        }}\r\n      >\r\n        <View style={styles.viewPicker}>\r\n          <Text style={styles.textMain} numberOfLines={1}>\r\n            {itemSelected.label}\r\n          </Text>\r\n          <Ionicons\r\n            style={styles.iconDown}\r\n            name=\"caret-down\"\r\n            size={20}\r\n            color=\"#fff\"\r\n            onPress={\r\n              Platform.OS === \"ios\"\r\n                ? () => {\r\n                    setIsShow(!isShow);\r\n                  }\r\n                : undefined\r\n            }\r\n          />\r\n        </View>\r\n      </TouchableHighlight>\r\n      {isShow && (\r\n        <View style={styles.viewPickCategory}>\r\n          {data.map((item, index) => (\r\n            <TouchableHighlight\r\n              key={index}\r\n              underlayColor={\"#675E50\"}\r\n              onPress={() => onSelectedItem(item)}\r\n              style={styles.itemPicker}\r\n            >\r\n              <Text style={[styles.text, { width: \"95%\" }]}>{item.label}</Text>\r\n            </TouchableHighlight>\r\n          ))}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DropDownPicker;\r\n\r\nconst styles = StyleSheet.create({\r\n  viewPicker: {\r\n    justifyContent: \"center\",\r\n    paddingBottom: 10,\r\n    borderBottomColor: colors.colorLine,\r\n    borderBottomWidth: 1,\r\n  },\r\n  textMain: {\r\n    color: colors.colorLine,\r\n    fontSize: 14,\r\n    fontWeight: \"500\",\r\n    width: \"90%\",\r\n  },\r\n  text: {\r\n    color: colors.colorText,\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n  },\r\n  iconDown: {\r\n    position: \"absolute\",\r\n    top: -2,\r\n    right: 0,\r\n    zIndex: 4,\r\n  },\r\n  viewPickCategory: {\r\n    backgroundColor: \"#414141\",\r\n    borderRadius: 4,\r\n    paddingVertical: 10,\r\n    marginHorizontal: 15,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    left: 0,\r\n    top: 33,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,elevation: 5\r\n  },\r\n  itemPicker: {\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 8,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}