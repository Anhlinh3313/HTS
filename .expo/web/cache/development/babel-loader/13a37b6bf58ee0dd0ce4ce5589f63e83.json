{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\productItemListScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { colors } from \"../../../utils/Colors\";\nimport { Ionicons } from '@expo/vector-icons';\nimport SelectMultiple from 'react-native-select-multiple';\nimport { Table, Row, Cell } from 'react-native-table-component';\nimport SvgUri from \"react-native-svg-uri\";\nimport { Icons } from \"../../../assets\";\nimport PickerModel from \"../../../components/picker/PickerModel\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { CategoryService, updateCategory } from \"../../../netWorking/categoryService\";\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\nimport { ProductService } from \"../../../netWorking/productService\";\nimport DropDown from \"../../../components/dropDown/DropDown\";\nimport { DataTable } from 'react-native-paper';\nimport ModalDropdown from \"react-native-modal-dropdown\";\nimport Loading from \"../../../components/dialogs/Loading\";\nexport default function ProductItemListScreen(props) {\n  var _this = this,\n      _productModel$prodNum,\n      _productModel$priceA,\n      _productModel$foodCos;\n\n  var dataModel = [];\n  var modalNull = {\n    isShow: false,\n    title: '',\n    isEdit: false\n  };\n  var dimensions = Dimensions.get('window');\n  var windowHeight = dimensions.height;\n  var windowWidth = dimensions.width;\n  var headerTitle = {\n    tableHead: [' ', 'Product Name', 'Product Num', 'RefCode', 'Sales Price', 'Food Cost (VND)', 'Food Cost (%)', 'Recipe Management'],\n    widthArr: [40, 150, 150, 150, 150, 150, 150, 150]\n  };\n\n  var _useState = useState(10),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemsPerPage = _useState2[0],\n      setItemsPerPage = _useState2[1];\n\n  var dataPageSize = [\"10\", \"20\", \"50\", \"100\"];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataCount = _useState4[0],\n      setDataCount = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var from = page * itemsPerPage;\n  var to = (page + 1) * itemsPerPage;\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      categoryModel = _useState8[0],\n      setCategoryModel = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      outLetId = _useState10[0],\n      setOutLetId = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      listCategory = _useState12[0],\n      setListCategory = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isSubmit = _useState14[0],\n      setIssubmit = _useState14[1];\n\n  var iProductModel = [];\n\n  var _useState15 = useState(iProductModel),\n      _useState16 = _slicedToArray(_useState15, 2),\n      listProductItem = _useState16[0],\n      setListProductItem = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      modalCategoryVisible = _useState18[0],\n      setModalCategoryVisible = _useState18[1];\n\n  var _useState19 = useState(modalNull),\n      _useState20 = _slicedToArray(_useState19, 2),\n      modalCategory = _useState20[0],\n      setModalCategory = _useState20[1];\n\n  var _useState21 = useState(modalNull),\n      _useState22 = _slicedToArray(_useState21, 2),\n      modalItem = _useState22[0],\n      setModalItem = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      productModel = _useState24[0],\n      setproductModel = _useState24[1];\n\n  var _useState25 = useState(),\n      _useState26 = _slicedToArray(_useState25, 2),\n      categorySelectedLabel = _useState26[0],\n      setCategorySelectedLabel = _useState26[1];\n\n  var _useState27 = useState(dataModel),\n      _useState28 = _slicedToArray(_useState27, 2),\n      selectedCategory = _useState28[0],\n      setselectedCategoryValue = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      modalTypeCreate = _useState30[0],\n      setModalTypeCreate = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      categoryName = _useState32[0],\n      setCategoryName = _useState32[1];\n\n  var model = {};\n  var modelProductItem = {};\n\n  var _useState33 = useState(1),\n      _useState34 = _slicedToArray(_useState33, 2),\n      pageNum = _useState34[0],\n      setPageNum = _useState34[1];\n\n  var _useState35 = useState(10),\n      _useState36 = _slicedToArray(_useState35, 2),\n      pageSize = _useState36[0],\n      setPageSize = _useState36[1];\n\n  var listValueCategory = Array();\n\n  var _useState37 = useState(listValueCategory),\n      _useState38 = _slicedToArray(_useState37, 2),\n      dataListValueCategory = _useState38[0],\n      setListValueCategory = _useState38[1];\n\n  var _useState39 = useState(true),\n      _useState40 = _slicedToArray(_useState39, 2),\n      checkLoadDefault = _useState40[0],\n      setCheckLoadDefault = _useState40[1];\n\n  var getDataCategory = function getDataCategory() {\n    var res, _dataModel;\n\n    return _regeneratorRuntime.async(function getDataCategory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIssubmit(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(CategoryService.getAllCategory());\n\n          case 3:\n            res = _context.sent;\n            setIssubmit(false);\n\n            if (res) {\n              setListCategory(res);\n              _dataModel = [];\n\n              _dataModel.push({\n                label: 'Select All',\n                value: 0\n              });\n\n              res.map(function (map) {\n                _dataModel.push({\n                  label: map.reportName,\n                  value: map.reportNo\n                });\n              });\n              setCategoryModel(_dataModel);\n              setselectedCategoryValue(_dataModel);\n              setCategorySelectedLabel(\"All\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getDataProduct = function getDataProduct() {\n    var pageNumber,\n        pageSize,\n        categoryIds,\n        model,\n        res,\n        _args2 = arguments;\n    return _regeneratorRuntime.async(function getDataProduct$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            pageNumber = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 1;\n            pageSize = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 10;\n            categoryIds = [];\n            selectedCategory.map(function (map) {\n              categoryIds.push(map.value);\n            });\n            setIssubmit(true);\n            model = {\n              \"ListReportNo\": categoryIds.toString(),\n              \"PageNum\": pageNumber,\n              \"PageSize\": pageSize\n            };\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ProductService.getProductItemList(model));\n\n          case 8:\n            res = _context2.sent;\n            setIssubmit(false);\n\n            if (res) {\n              if (res.length !== 0) {\n                setDataCount(res[0].totalCount);\n              } else setDataCount(0);\n\n              setListProductItem(res);\n            }\n\n            setCheckLoadDefault(false);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createCategory = function createCategory() {\n    var res;\n    return _regeneratorRuntime.async(function createCategory$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            model.storeId = outLetId;\n            model.name = categoryName;\n            setIssubmit(true);\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(CategoryService.cteateCategory(model));\n\n          case 5:\n            res = _context3.sent;\n\n            if (res) {\n              getDataCategory();\n              setCategoryName('');\n              alert('Add Category Successful');\n            }\n\n            setIssubmit(false);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateCategoryProductItemList = function updateCategoryProductItemList() {\n    return _regeneratorRuntime.async(function updateCategoryProductItemList$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setIssubmit(true);\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(selectedCategory.map(function _callee(map) {\n              var categoryName, categoryId, res;\n              return _regeneratorRuntime.async(function _callee$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      categoryName = map.label;\n                      categoryId = map.value;\n                      _context4.next = 4;\n                      return _regeneratorRuntime.awrap(updateCategory(categoryId, categoryName));\n\n                    case 4:\n                      res = _context4.sent;\n\n                      if (res.isSuccess == 1) {\n                        setListValueCategory(null);\n                      }\n\n                    case 6:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 3:\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(getDataCategory());\n\n          case 5:\n            _context5.next = 7;\n            return _regeneratorRuntime.awrap(resetCategory());\n\n          case 7:\n            alert('Update Category Successful');\n            setIssubmit(false);\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var resetCategory = function resetCategory() {\n    return _regeneratorRuntime.async(function resetCategory$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setCategorySelectedLabel(\"Choose Category\");\n            setselectedCategoryValue(dataModel);\n            getDataProduct();\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createProducItem = function createProducItem() {\n    var res;\n    return _regeneratorRuntime.async(function createProducItem$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            setIssubmit(true);\n\n            if (!productModel) {\n              _context7.next = 9;\n              break;\n            }\n\n            productModel.prodNum = 2313;\n            productModel.foodCost = 300000;\n            setproductModel(productModel);\n            _context7.next = 7;\n            return _regeneratorRuntime.awrap(ProductService.create(productModel));\n\n          case 7:\n            res = _context7.sent;\n\n            if (res) {\n              setproductModel(modelProductItem);\n              setModalItem({\n                isShow: false\n              });\n              alert('Add Produc Item Successful');\n              getDataProduct();\n            }\n\n          case 9:\n            setIssubmit(false);\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateProducItem = function updateProducItem() {\n    var res;\n    return _regeneratorRuntime.async(function updateProducItem$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            setIssubmit(true);\n\n            if (!productModel) {\n              _context8.next = 6;\n              break;\n            }\n\n            _context8.next = 4;\n            return _regeneratorRuntime.awrap(ProductService.update(productModel));\n\n          case 4:\n            res = _context8.sent;\n\n            if (res) {\n              setproductModel(modelProductItem);\n              setModalItem({\n                isShow: false\n              });\n              alert('Update Produc Item Successful');\n              getDataProduct();\n            }\n\n          case 6:\n            setIssubmit(false);\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSelectionsChange = function onSelectionsChange(data, item) {\n    var selectedAll;\n    return _regeneratorRuntime.async(function onSelectionsChange$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            selectedAll = data.find(function (x) {\n              return x.value == 0;\n            });\n\n            if (selectedAll && item.value == 0) {\n              setselectedCategoryValue(categoryModel);\n              setCategorySelectedLabel(\"All\");\n              categoryModel.map(function (data) {\n                listValueCategory.push(data.value);\n              });\n              setListValueCategory(listValueCategory);\n            } else {\n              setListValueCategory([]);\n              setselectedCategoryValue(dataModel);\n              setCategorySelectedLabel(\"Choose Category\");\n            }\n\n            if (item.value != 0) {\n              Promise.all(data).then(function (res) {\n                if (!selectedAll && data.length == categoryModel.length - 1) {\n                  setselectedCategoryValue(categoryModel);\n                  categoryModel.map(function (data) {\n                    listValueCategory.push(data.value);\n                  });\n                  setListValueCategory(listValueCategory);\n                } else {\n                  var indexAll = selectedCategory.findIndex(function (x) {\n                    return x.value == 0;\n                  });\n\n                  if (indexAll >= 0) {\n                    data.splice(indexAll, 1);\n                  }\n\n                  setselectedCategoryValue(data);\n                  data.map(function (x) {\n                    listValueCategory.push(x.value);\n                  });\n                  setListValueCategory(listValueCategory);\n                }\n\n                var labelSeleted = \"\";\n                res.map(function (map, index) {\n                  if (map.value != 0) labelSeleted += index != data.length - 1 ? map.label + \",\" : \"\" + map.label;\n                });\n                setCategorySelectedLabel(labelSeleted);\n              });\n            }\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onchangeModalCategory = function onchangeModalCategory(isShow, title, isEdit) {\n    setModalCategory({\n      isShow: isShow,\n      title: title,\n      isEdit: isEdit\n    });\n  };\n\n  useEffect(function () {\n    if (checkLoadDefault) {\n      getDataCategory();\n      getDataProduct();\n    }\n  }, []);\n\n  var buttonEdit = function buttonEdit(data) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setModalItem({\n          isShow: true,\n          title: 'Change Item',\n          isEdit: true\n        });\n        setproductModel(data);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, React.createElement(SvgUri, {\n      source: Icons.iconEdit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  var viewItem = function viewItem(data) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        if (props.route.params.callBackRecipe) {\n          props.route.params.callBackRecipe(data);\n          props.navigation.goBack();\n        } else {\n          props.navigation.navigate(\"RecipeManagementScreen\", {\n            title: \"BACK OFFICE - RECIPE MANAGEMENT\",\n            product: data\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, React.createElement(SvgUri, {\n      source: Icons.iconEye,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, React.createElement(PickerModel, {\n    defaultValue: \"Outlet\",\n    onSelectedValue: function onSelectedValue(data) {\n      setOutLetId(data.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      zIndex: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.containerPicker, {\n      paddingBottom: 0,\n      flex: 6\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setModalCategoryVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.viewPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.pickerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: [styles.title, {\n      width: '85%'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 33\n    }\n  }, categorySelectedLabel != null ? categorySelectedLabel : 'Choose Category')), React.createElement(Ionicons, {\n    style: styles.iconDown,\n    name: \"caret-down\",\n    size: 20,\n    color: \"#fff\",\n    onPress: function onPress() {\n      setModalCategoryVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  })))), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      paddingTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }), modalTypeCreate && React.createElement(View, {\n    style: {\n      backgroundColor: '#414141',\n      borderRadius: 4,\n      padding: 18,\n      position: 'absolute',\n      zIndex: 9,\n      right: 23,\n      top: 58\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalCategory({\n        isShow: true,\n        title: 'Create Category',\n        isEdit: false\n      });\n      setModalTypeCreate(!modalTypeCreate);\n    },\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.iconCirclePlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: [styles.textRowTable, {\n      marginLeft: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 33\n    }\n  }, \"Create category\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalItem({\n        isShow: true,\n        title: 'Create New Item',\n        isEdit: false\n      });\n      setproductModel(modelProductItem);\n      setModalTypeCreate(!modalTypeCreate);\n    },\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 29\n    }\n  }, React.createElement(SvgUri, {\n    source: Icons.iconCirclePlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: [styles.textRowTable, {\n      marginLeft: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  }, \"Create new item\"))))), React.createElement(ScrollView, {\n    horizontal: true,\n    style: {\n      borderTopRightRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.tableProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 25\n    }\n  }, React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 29\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }\n  }, React.createElement(Row, {\n    data: headerTitle.tableHead,\n    widthArr: headerTitle.widthArr,\n    style: styles.rowheaderTable,\n    textStyle: styles.textRowHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 37\n    }\n  }), listProductItem.map(function (rowData, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [{\n        flexDirection: 'row',\n        height: 36\n      }, index % 2 == 0 ? {\n        backgroundColor: '#8D7550'\n      } : {}],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 45\n      }\n    }, React.createElement(Cell, {\n      key: 1,\n      style: {\n        width: headerTitle.widthArr[0]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 49\n      }\n    }), React.createElement(Cell, {\n      key: 2,\n      data: rowData.prodName,\n      style: {\n        width: headerTitle.widthArr[1]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 49\n      }\n    }), React.createElement(Cell, {\n      key: 3,\n      data: rowData.prodNum,\n      style: {\n        width: headerTitle.widthArr[1]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 49\n      }\n    }), React.createElement(Cell, {\n      key: 4,\n      data: rowData.refCost,\n      style: {\n        width: headerTitle.widthArr[2]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 49\n      }\n    }), React.createElement(Cell, {\n      key: 5,\n      data: rowData.priceA ? Money(rowData.priceA) : 0,\n      style: {\n        width: headerTitle.widthArr[3]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 49\n      }\n    }), React.createElement(Cell, {\n      key: 6,\n      data: rowData.foodPrice ? Money(rowData.foodPrice) : 0,\n      style: {\n        width: headerTitle.widthArr[1]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 49\n      }\n    }), React.createElement(Cell, {\n      key: 7,\n      data: rowData.foodPrice && rowData.priceA ? Math.round(rowData.foodPrice * 100 / rowData.priceA) : 0,\n      style: {\n        width: headerTitle.widthArr[2]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 49\n      }\n    }), React.createElement(Cell, {\n      key: 8,\n      data: viewItem(rowData),\n      style: {\n        width: headerTitle.widthArr[3]\n      },\n      textStyle: styles.textRowTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 49\n      }\n    }));\n  }))))), React.createElement(View, {\n    style: styles.rowFooterTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: colors.black05\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 29\n    }\n  }, \"Rows:\")), React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      marginLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 25\n    }\n  }, React.createElement(ModalDropdown, {\n    defaultValue: \"10\",\n    dropdownStyle: {\n      backgroundColor: \"#303030\",\n      borderWidth: 0,\n      width: 50,\n      height: 100,\n      borderRadius: 4\n    },\n    textStyle: [{\n      fontSize: 14,\n      color: colors.black,\n      width: 40\n    }],\n    dropdownTextStyle: {\n      color: colors.gray,\n      backgroundColor: \"#303030\",\n      fontSize: 12\n    },\n    dropdownTextHighlightStyle: {\n      color: colors.white\n    },\n    showsVerticalScrollIndicator: true,\n    options: dataPageSize,\n    renderRightComponent: function renderRightComponent() {\n      return React.createElement(Ionicons, {\n        name: \"chevron-down\",\n        size: 20,\n        color: colors.black,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 37\n        }\n      });\n    },\n    onSelect: function onSelect(index, value) {\n      setPage(1);\n      setItemsPerPage(value);\n      getDataProduct(1, value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 25\n    }\n  }, React.createElement(DataTable.Pagination, {\n    page: page,\n    style: {\n      justifyContent: 'flex-start'\n    },\n    numberOfPages: Math.floor(dataCount / itemsPerPage) + 1,\n    showFastPaginationControls: true,\n    onPageChange: function onPageChange(page) {\n      setPage(page);\n      getDataProduct(page + 1, itemsPerPage);\n    },\n    label: dataCount > 0 ? from + 1 + \"-\" + to + \" of \" + dataCount : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 29\n    }\n  }))))), React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalCategoryVisible,\n    onRequestClose: function onRequestClose() {\n      setModalCategoryVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4,\n      height: windowHeight\n    },\n    onPressIn: function onPressIn() {\n      setModalCategoryVisible(false);\n      getDataProduct();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.centeredView, styles.modelCategory, {\n      height: windowHeight\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: [styles.modalView, {\n      backgroundColor: \"#414141\",\n      marginTop: 0,\n      paddingBottom: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 29\n    }\n  }, React.createElement(SelectMultiple, {\n    style: {\n      borderRadius: 4\n    },\n    rowStyle: {\n      backgroundColor: colors.grayLight,\n      borderBottomWidth: 0\n    },\n    labelStyle: {\n      color: colors.white,\n      fontSize: 16\n    },\n    checkboxStyle: {\n      tintColor: colors.white\n    },\n    selectedCheckboxStyle: {\n      tintColor: colors.white\n    },\n    selectedCheckboxSource: Icons.iconChecked,\n    items: categoryModel,\n    selectedItems: selectedCategory,\n    onSelectionsChange: onSelectionsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 33\n    }\n  })))))), React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalCategory.isShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.centeredView, styles.modelCategory, {\n      justifyContent: 'flex-start',\n      paddingTop: 200,\n      height: windowHeight\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableNativeFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: [styles.modalForm, {\n      backgroundColor: \"#414141\",\n      paddingLeft: 15,\n      paddingRight: 15\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 25\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.titleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: colors.mainColor\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 37\n    }\n  }, modalCategory.title)), modalCategory.isEdit == false ? React.createElement(View, {\n    style: {\n      paddingTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: colors.gray,\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 41\n    }\n  }, \"Category\"), React.createElement(TextInput, {\n    placeholder: \"Description\",\n    placeholderTextColor: colors.gray,\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setCategoryName(text);\n    },\n    value: categoryName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 41\n    }\n  })) : React.createElement(View, {\n    style: {\n      paddingTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 37\n    }\n  }, selectedCategory.map(function (map, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 45\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: colors.gray,\n        fontWeight: '600'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 49\n      }\n    }, \"Category\"), React.createElement(TextInput, {\n      placeholder: \"Description\",\n      placeholderTextColor: colors.gray,\n      style: styles.textInput,\n      onChangeText: function onChangeText(text) {\n        map.label = text;\n        setselectedCategoryValue(_toConsumableArray(selectedCategory));\n      },\n      value: map.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 49\n      }\n    }));\n  })), React.createElement(View, {\n    style: {\n      marginTop: 20,\n      marginBottom: 0,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles.rowButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 37\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4\n    },\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      setModalCategory({\n        isShow: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: styles.buttonClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 49\n    }\n  }, \"Close\"))), React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4\n    },\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      if (modalCategory.isEdit) {\n        updateCategoryProductItemList();\n      } else {\n        createCategory();\n      }\n\n      setModalCategory({\n        isShow: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: styles.buttonSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 49\n    }\n  }, \"Confirm\")))))))))), React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalItem.isShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.centeredView, {\n      justifyContent: 'flex-start',\n      height: windowHeight\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.modalForm, {\n      marginTop: 115,\n      backgroundColor: \"#414141\",\n      justifyContent: 'space-between',\n      paddingLeft: 15,\n      paddingRight: 15\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 21\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.titleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: colors.mainColor\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 37\n    }\n  }, modalItem.title)), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 10,\n      zIndex: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.titleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 45\n    }\n  }, \"Category\")), React.createElement(DropDown, {\n    data: categoryModel,\n    defaultLabel: productModel == null ? void 0 : productModel.categoryName,\n    onSelected: function onSelected(data) {\n      if (productModel) {\n        productModel.reportNo = Number(data.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 41\n    }\n  })), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.titleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 45\n    }\n  }, \"Name\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 41\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Description\",\n    placeholderTextColor: colors.gray,\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setproductModel(_objectSpread(_objectSpread({}, productModel), {}, {\n        prodName: text\n      }));\n    },\n    value: productModel == null ? void 0 : productModel.prodName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 45\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.titleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 45\n    }\n  }, \"Number\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 41\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Updated on POS automatically\",\n    editable: modalItem.isEdit,\n    keyboardType: \"numeric\",\n    placeholderTextColor: colors.gray,\n    style: [styles.textInput, !modalItem.isEdit && {\n      backgroundColor: '#8C8C8C'\n    }],\n    onChangeText: function onChangeText(text) {\n      if (productModel) productModel.prodNum = new Number(text);\n    },\n    value: productModel == null ? void 0 : (_productModel$prodNum = productModel.prodNum) == null ? void 0 : _productModel$prodNum.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 45\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.titleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 45\n    }\n  }, \"RefCode\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 41\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Number\",\n    placeholderTextColor: colors.gray,\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      if (productModel) productModel.refCost = text;\n    },\n    value: productModel == null ? void 0 : productModel.refCost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 45\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.titleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 45\n    }\n  }, \"Sales Price\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 41\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Number\",\n    keyboardType: \"numeric\",\n    placeholderTextColor: colors.gray,\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      if (productModel) productModel.priceA = Number(text);\n    },\n    value: Money(productModel == null ? void 0 : (_productModel$priceA = productModel.priceA) == null ? void 0 : _productModel$priceA.toString()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 45\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.titleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 45\n    }\n  }, \"Food Cost (Performance in FAST and POS)\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 41\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"API Fast\",\n    placeholderTextColor: colors.gray,\n    editable: modalItem.isEdit,\n    style: [styles.textInput, !modalItem.isEdit && {\n      backgroundColor: '#8C8C8C'\n    }],\n    onChangeText: function onChangeText(text) {\n      if (productModel) productModel.foodCost = new Number(text);\n    },\n    value: productModel == null ? void 0 : (_productModel$foodCos = productModel.foodCost) == null ? void 0 : _productModel$foodCos.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 45\n    }\n  }))), modalItem.isEdit ? React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: styles.titleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 53\n    }\n  }, \"Reason For change\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 49\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Reason\",\n    placeholderTextColor: colors.gray,\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      if (productModel) productModel.reason = text;\n    },\n    value: productModel == null ? void 0 : productModel.reason,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 53\n    }\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 45\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginTop: 20,\n      marginBottom: 0,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.rowButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4\n    },\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      setproductModel(modelProductItem);\n      setModalItem({\n        isShow: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.buttonClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 45\n    }\n  }, \"Close\"))), React.createElement(TouchableHighlight, {\n    style: {\n      borderRadius: 4\n    },\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      if (!modalItem.isEdit) {\n        createProducItem();\n      } else {\n        updateProducItem();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.buttonSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 45\n    }\n  }, \"Confirm\"))))))))), isSubmit && React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 24\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '600',\n    lineHeight: 24,\n    color: colors.white\n  },\n  titleInput: {\n    fontSize: 12,\n    color: colors.gray,\n    fontWeight: '600'\n  },\n  text: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  textItem: {\n    color: colors.white,\n    fontWeight: '500',\n    fontSize: 16\n  },\n  textInput: {\n    marginTop: 5,\n    fontSize: 14,\n    paddingLeft: 11,\n    height: 40,\n    borderRadius: 4,\n    backgroundColor: '#303030',\n    color: colors.white\n  },\n  containerPicker: {\n    marginTop: 10,\n    backgroundColor: colors.backgroundApp,\n    paddingBottom: 15\n  },\n  viewPicker: {\n    marginLeft: 15,\n    marginRight: 15,\n    paddingLeft: 15,\n    backgroundColor: colors.grayLight,\n    borderRadius: 4\n  },\n  viewPickCategory: {\n    marginTop: 5,\n    backgroundColor: '#303030',\n    borderRadius: 4\n  },\n  pickerModal: {\n    height: 46,\n    borderRadius: 4,\n    justifyContent: 'center',\n    backgroundColor: colors.grayLight,\n    color: '#fff',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  },\n  iconDown: {\n    justifyContent: 'center',\n    position: 'absolute',\n    right: 10,\n    bottom: 12,\n    zIndex: 4\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  centeredView: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingLeft: 15,\n    paddingRight: 15,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modelCategory: {\n    zIndex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'flex-start',\n    paddingTop: 190\n  },\n  modalView: {\n    backgroundColor: colors.white,\n    width: 360,\n    maxHeight: 230,\n    marginLeft: 15,\n    marginRight: 15,\n    borderRadius: 4,\n    paddingBottom: 15,\n    paddingTop: 5,\n    justifyContent: 'flex-start',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalForm: {\n    width: 360,\n    marginBottom: 95,\n    backgroundColor: \"#414141\",\n    marginLeft: 15,\n    marginRight: 15,\n    borderRadius: 4,\n    paddingBottom: 20,\n    justifyContent: 'flex-start',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  checkbox: {\n    alignSelf: \"center\"\n  },\n  tableProduct: {\n    marginTop: 10,\n    marginLeft: 15,\n    marginRight: 15,\n    borderRadius: 4,\n    backgroundColor: colors.grayLight\n  },\n  hedertable: {\n    marginTop: 15,\n    backgroundColor: colors.backgroundLogin\n  },\n  rowTable: {\n    flexDirection: 'row',\n    height: 36\n  },\n  textRowTable: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: '400',\n    textAlign: 'center'\n  },\n  textRowHeader: {\n    color: '#DFDFDF',\n    fontSize: 12,\n    fontWeight: '400',\n    lineHeight: 18,\n    textAlign: 'center'\n  },\n  rowheaderTable: {\n    height: 36,\n    backgroundColor: '#878787',\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4\n  },\n  rowPagginTable: {\n    backgroundColor: '#878787',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4\n  },\n  rowFooterTable: {\n    backgroundColor: '#878787',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    borderTopWidth: 1,\n    borderBottomColor: colors.black05,\n    marginHorizontal: 15,\n    flexDirection: 'row',\n    paddingHorizontal: 15\n  },\n  buttonCreate: {\n    height: 36,\n    width: 150,\n    borderRadius: 4,\n    justifyContent: 'center',\n    backgroundColor: colors.mainColor\n  },\n  titleModal: {\n    borderBottomWidth: 1,\n    borderBottomColor: colors.gray,\n    alignItems: 'center',\n    padding: 15\n  },\n  rowButton: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  buttonClose: {\n    height: 36,\n    width: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#636363',\n    borderRadius: 4\n  },\n  buttonSend: {\n    height: 36,\n    width: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#DAB451',\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/productItemListScreen.tsx"],"names":["React","useEffect","useState","colors","Ionicons","SelectMultiple","Table","Row","Cell","SvgUri","Icons","PickerModel","TouchableOpacity","CategoryService","updateCategory","Money","ProductService","DropDown","DataTable","ModalDropdown","Loading","ProductItemListScreen","props","dataModel","modalNull","isShow","title","isEdit","dimensions","Dimensions","get","windowHeight","height","windowWidth","width","headerTitle","tableHead","widthArr","itemsPerPage","setItemsPerPage","dataPageSize","dataCount","setDataCount","page","setPage","from","to","categoryModel","setCategoryModel","outLetId","setOutLetId","listCategory","setListCategory","isSubmit","setIssubmit","iProductModel","listProductItem","setListProductItem","modalCategoryVisible","setModalCategoryVisible","modalCategory","setModalCategory","modalItem","setModalItem","productModel","setproductModel","categorySelectedLabel","setCategorySelectedLabel","selectedCategory","setselectedCategoryValue","modalTypeCreate","setModalTypeCreate","categoryName","setCategoryName","model","modelProductItem","pageNum","setPageNum","pageSize","setPageSize","listValueCategory","Array","dataListValueCategory","setListValueCategory","checkLoadDefault","setCheckLoadDefault","getDataCategory","getAllCategory","res","push","label","value","map","reportName","reportNo","getDataProduct","pageNumber","categoryIds","toString","getProductItemList","length","totalCount","createCategory","storeId","name","cteateCategory","alert","updateCategoryProductItemList","categoryId","isSuccess","resetCategory","createProducItem","prodNum","foodCost","create","updateProducItem","update","onSelectionsChange","data","item","selectedAll","find","x","Promise","all","then","indexAll","findIndex","splice","labelSeleted","index","onchangeModalCategory","buttonEdit","alignItems","iconEdit","viewItem","route","params","callBackRecipe","navigation","goBack","navigate","product","iconEye","styles","container","line","flexDirection","zIndex","containerPicker","paddingBottom","flex","viewPicker","pickerModal","iconDown","justifyContent","paddingTop","backgroundColor","borderRadius","padding","position","right","top","iconCirclePlus","textRowTable","marginLeft","marginTop","borderTopRightRadius","marginBottom","tableProduct","rowheaderTable","textRowHeader","rowData","prodName","refCost","priceA","foodPrice","Math","round","rowFooterTable","fontSize","color","black05","borderWidth","black","gray","white","floor","centeredView","modelCategory","modalView","grayLight","borderBottomWidth","tintColor","iconChecked","Keyboard","dismiss","modalForm","paddingLeft","paddingRight","titleModal","mainColor","fontWeight","textInput","text","rowButton","yellowishbrown","buttonClose","buttonSend","titleInput","Number","reason","StyleSheet","backgroundApp","lineHeight","textItem","marginRight","viewPickCategory","shadowColor","shadowOffset","bottom","backgroundTab","maxHeight","shadowOpacity","shadowRadius","elevation","checkbox","alignSelf","hedertable","backgroundLogin","rowTable","textAlign","borderTopLeftRadius","rowPagginTable","borderBottomLeftRadius","borderBottomRightRadius","borderTopWidth","borderBottomColor","marginHorizontal","paddingHorizontal","buttonCreate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    TouchableWithoutFeedback,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    Modal,\r\n    FlatList,\r\n    Dimensions,\r\n    TouchableNativeFeedback,\r\n    Keyboard,\r\n    TextInput,\r\n} from \"react-native\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport SelectMultiple from 'react-native-select-multiple'\r\nimport {\r\n    Table,\r\n    Row,\r\n    TableWrapper,\r\n    Cell\r\n} from 'react-native-table-component';\r\nimport SvgUri from \"react-native-svg-uri\";\r\nimport {\r\n    Icons,\r\n    Images\r\n} from \"../../../assets\";\r\nimport { TabManageParamList } from \"../../../types\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport PickerModel from \"../../../components/picker/PickerModel\";\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport {\r\n    CategoryService,\r\n    getAllCategory,\r\n    updateCategory\r\n} from \"../../../netWorking/categoryService\";\r\nimport { Imodel } from \"../../../models/Imodel\";\r\nimport { IModal } from \"../../../models/Imodal\";\r\nimport { ICategoryModel } from \"../../../models/IcategoryModel\";\r\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\r\nimport { IProductModel } from \"../../../models/IproductModel\";\r\nimport {\r\n    ProductService\r\n} from \"../../../netWorking/productService\";\r\nimport DialogAwait from \"../../../components/dialogs/dialogAwait\";\r\nimport DropDown from \"../../../components/dropDown/DropDown\";\r\nimport { CategoryModel } from \"../../../models/categoryModel\";\r\nimport { DataTable } from 'react-native-paper'\r\nimport ModalDropdown from \"react-native-modal-dropdown\";\r\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\r\nimport Loading from \"../../../components/dialogs/Loading\";\r\n\r\nexport interface Props {\r\n    route: RouteProp<TabManageParamList, \"ProductItemListScreen\">;\r\n    navigation: StackNavigationProp<TabManageParamList>\r\n}\r\n\r\nexport default function ProductItemListScreen(props: Props) {\r\n    const dataModel: Imodel[] = [];\r\n    const modalNull: IModal = { isShow: false, title: '', isEdit: false };\r\n    const dimensions = Dimensions.get('window');\r\n    const windowHeight = dimensions.height;\r\n    const windowWidth = dimensions.width;\r\n    const headerTitle = {\r\n        tableHead: [' ', 'Product Name', 'Product Num', 'RefCode', 'Sales Price', 'Food Cost (VND)', 'Food Cost (%)', 'Recipe Management'],\r\n        widthArr: [40, 150, 150, 150, 150, 150, 150, 150]\r\n    }\r\n    const [itemsPerPage, setItemsPerPage] = useState(10);\r\n    const dataPageSize = [\"10\", \"20\", \"50\", \"100\"];\r\n    const [dataCount, setDataCount] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const from = page * itemsPerPage;\r\n    const to = (page + 1) * itemsPerPage;\r\n\r\n    const [categoryModel, setCategoryModel] = useState<Imodel[]>([]);\r\n    const [outLetId, setOutLetId] = useState<any>();\r\n    const [listCategory, setListCategory] = useState<ICategoryModel[]>([]);\r\n    const [isSubmit, setIssubmit] = useState(false);\r\n\r\n    const iProductModel: IProductModel[] = [];\r\n    const [listProductItem, setListProductItem] = useState(iProductModel)\r\n    const [modalCategoryVisible, setModalCategoryVisible] = useState(false);\r\n    const [modalCategory, setModalCategory] = useState(modalNull);\r\n    const [modalItem, setModalItem] = useState(modalNull);\r\n    const [productModel, setproductModel] = useState<IProductModel>();\r\n    const [categorySelectedLabel, setCategorySelectedLabel] = useState<string>();\r\n    const [selectedCategory, setselectedCategoryValue] = useState(dataModel);\r\n    const [modalTypeCreate, setModalTypeCreate] = useState(false);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    let model: ICategoryModel = {};\r\n    let modelProductItem: IProductModel = {};\r\n    //\r\n    const [pageNum, setPageNum] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    //\r\n    const listValueCategory = Array();\r\n    const [dataListValueCategory, setListValueCategory] = useState(listValueCategory);\r\n    //\r\n    const [checkLoadDefault, setCheckLoadDefault] = useState(true);\r\n\r\n    const getDataCategory = async () => {\r\n        setIssubmit(true);\r\n        const res = await CategoryService.getAllCategory();\r\n        setIssubmit(false);\r\n        if (res) {\r\n            setListCategory(res);\r\n            let dataModel: Imodel[] = [];\r\n            dataModel.push({ label: 'Select All', value: 0 },)\r\n            res.map(map => {\r\n                dataModel.push({ label: map.reportName, value: map.reportNo });\r\n            })\r\n            setCategoryModel(dataModel);\r\n            setselectedCategoryValue(dataModel)\r\n            setCategorySelectedLabel(\"All\");\r\n        }\r\n    }\r\n\r\n    const getDataProduct = async (pageNumber: number = 1, pageSize: number = 10) => {\r\n        \r\n        let categoryIds = [];\r\n        selectedCategory.map(map => {\r\n            categoryIds.push(map.value);\r\n        })\r\n        setIssubmit(true);\r\n        let model: any = {\r\n            \"ListReportNo\": categoryIds.toString(),\r\n            \"PageNum\": pageNumber,\r\n            \"PageSize\": pageSize\r\n        }\r\n        const res = await ProductService.getProductItemList(model);\r\n        setIssubmit(false);\r\n        if (res) {\r\n            if (res.length !== 0) {\r\n                setDataCount(res[0].totalCount);\r\n            }else setDataCount(0);\r\n            setListProductItem(res)\r\n        }\r\n        setCheckLoadDefault(false);\r\n    }\r\n\r\n    const createCategory = async () => {\r\n        model.storeId = outLetId;\r\n        model.name = categoryName;\r\n        setIssubmit(true);\r\n        const res = await CategoryService.cteateCategory(model);\r\n        if (res) {\r\n            getDataCategory();\r\n            setCategoryName('');\r\n            alert('Add Category Successful');\r\n        }\r\n        setIssubmit(false);\r\n    }\r\n\r\n    const updateCategoryProductItemList = async () => {\r\n        setIssubmit(true);\r\n        await selectedCategory.map(async (map) => {\r\n            const categoryName = map.label;\r\n            const categoryId = map.value;\r\n            const res = await updateCategory(categoryId, categoryName);\r\n            if (res.isSuccess == 1) {\r\n                setListValueCategory(null);\r\n            }\r\n        })\r\n        await getDataCategory();\r\n        await resetCategory();\r\n        alert('Update Category Successful');\r\n        setIssubmit(false);\r\n    }\r\n    const resetCategory = async () => {\r\n        setCategorySelectedLabel(\"Choose Category\");\r\n        setselectedCategoryValue(dataModel);\r\n        getDataProduct();\r\n\r\n    }\r\n\r\n    const createProducItem = async () => {\r\n        setIssubmit(true);\r\n        if (productModel) {\r\n            productModel.prodNum = 2313;\r\n            productModel.foodCost = 300000;\r\n            setproductModel(productModel);\r\n            const res = await ProductService.create(productModel);\r\n            if (res) {\r\n                setproductModel(modelProductItem);\r\n                setModalItem({ isShow: false });\r\n                alert('Add Produc Item Successful');\r\n                getDataProduct();\r\n            }\r\n        }\r\n        setIssubmit(false);\r\n    }\r\n\r\n    const updateProducItem = async () => {\r\n        setIssubmit(true);\r\n        if (productModel) {\r\n            const res = await ProductService.update(productModel);\r\n            if (res) {\r\n                setproductModel(modelProductItem);\r\n                setModalItem({ isShow: false });\r\n                alert('Update Produc Item Successful');\r\n                getDataProduct();\r\n            }\r\n        }\r\n        setIssubmit(false);\r\n    }\r\n    // onchange select category\r\n    const onSelectionsChange = async (data: Imodel[], item: Imodel) => {\r\n        let selectedAll = data.find(x => x.value == 0);\r\n        if (selectedAll && item.value == 0) {\r\n            setselectedCategoryValue(categoryModel);\r\n            setCategorySelectedLabel(\"All\");\r\n            categoryModel.map(data => {\r\n                listValueCategory.push(data.value)\r\n            })\r\n            setListValueCategory(listValueCategory)\r\n        }\r\n        else {\r\n            setListValueCategory([])\r\n            setselectedCategoryValue(dataModel);\r\n            setCategorySelectedLabel(\"Choose Category\");\r\n        }\r\n        if (item.value != 0) {\r\n            Promise.all(data).then(res => {\r\n                if (!selectedAll && data.length == categoryModel.length - 1) {\r\n                    setselectedCategoryValue(categoryModel);\r\n                    categoryModel.map(data => {\r\n                        listValueCategory.push(data.value);\r\n                    })\r\n                    setListValueCategory(listValueCategory);\r\n                }\r\n                else {\r\n                    let indexAll = selectedCategory.findIndex(x => x.value == 0);\r\n                    if (indexAll >= 0) {\r\n                        data.splice(indexAll, 1);\r\n                    }\r\n                    setselectedCategoryValue(data);\r\n                    data.map(x => {\r\n                        listValueCategory.push(x.value);\r\n                    })\r\n                    setListValueCategory(listValueCategory)\r\n                }\r\n                let labelSeleted = \"\";\r\n                res.map((map, index) => {\r\n                    if (map.value != 0)\r\n                        labelSeleted += index != (data.length - 1) ? `${map.label},` : `${map.label}`;\r\n                })\r\n                setCategorySelectedLabel(labelSeleted);\r\n            });\r\n        }\r\n    }\r\n    // load data setModalCategory\r\n    const onchangeModalCategory = (isShow: any, title: any, isEdit: any) => {\r\n        setModalCategory({ isShow: isShow, title: title, isEdit: isEdit });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (checkLoadDefault) {\r\n            getDataCategory();\r\n            getDataProduct();\r\n        }\r\n    }, [])\r\n    const buttonEdit = (data: IProductModel) => (\r\n        <TouchableOpacity\r\n            onPress={() => {\r\n                setModalItem({ isShow: true, title: 'Change Item', isEdit: true })\r\n                setproductModel(data);\r\n            }}>\r\n            <View style={{ alignItems: 'center' }}>\r\n                <SvgUri source={Icons.iconEdit} />\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n    const viewItem = (data: IProductModel) => (\r\n        <TouchableOpacity\r\n            onPress={() => {\r\n                if (props.route.params.callBackRecipe) {\r\n                    props.route.params.callBackRecipe(data)\r\n                    props.navigation.goBack();\r\n                }\r\n                else {\r\n                    props.navigation.navigate(\"RecipeManagementScreen\", {\r\n                        title: \"BACK OFFICE - RECIPE MANAGEMENT\",\r\n                        product: data,\r\n                    })\r\n                }\r\n            }}>\r\n            <View style={{ alignItems: 'center' }}>\r\n                <SvgUri source={Icons.iconEye} />\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n    return (\r\n        <View style={styles.container}>\r\n            <PickerModel\r\n                defaultValue=\"Outlet\"\r\n                onSelectedValue={data => {\r\n                    setOutLetId(data.value);\r\n                }}\r\n            ></PickerModel>\r\n            <View style={styles.line}></View>\r\n            <View style={{ flexDirection: 'row', zIndex: 8 }}>\r\n                <View style={[styles.containerPicker, { paddingBottom: 0, flex: 6 }]}>\r\n                    <TouchableWithoutFeedback\r\n                        onPress={\r\n                            () => {\r\n                                setModalCategoryVisible(true);\r\n                            }\r\n                        }\r\n                    >\r\n                        <View style={styles.viewPicker}>\r\n                            <View style={styles.pickerModal}>\r\n                                <Text numberOfLines={1} style={[styles.title,{width:'85%'}]}>{categorySelectedLabel ?? 'Choose Category'}</Text>\r\n                            </View>\r\n                            <Ionicons style={styles.iconDown} name=\"caret-down\" size={20} color=\"#fff\"\r\n\r\n                                onPress={() => {\r\n                                    setModalCategoryVisible(true);\r\n                                }} />\r\n                        </View>\r\n                    </TouchableWithoutFeedback>\r\n                </View>\r\n                <View style={{ flex: 1, justifyContent: 'center' }}>\r\n                    {/* ẩn theo yêu cầu của BA(http://redmine.rnt.vn/issues/7733) */}\r\n                    {/* <TouchableOpacity\r\n                        onPress={() => {\r\n                            // edit category\r\n                            if (selectedCategory.length > 0) {\r\n                                onchangeModalCategory(true, 'Change Category', true);\r\n                            }\r\n                            else {\r\n                                alert(\"Please choose Category!\")\r\n                            }\r\n                        }}\r\n                    >\r\n                        <SvgUri height=\"28\" width=\"28\" source={Icons.iconEditMedium} />\r\n                    </TouchableOpacity> */}\r\n                </View>\r\n                <View style={{ flex: 1, justifyContent: 'center', paddingTop: 5 }}>\r\n                    {/* ẩn theo yêu cầu của BA(http://redmine.rnt.vn/issues/7733) */}\r\n                    {/* <TouchableOpacity\r\n                    onPress={() => { setModalTypeCreate(!modalTypeCreate) }}\r\n                    >\r\n                        <SvgUri source={Icons.iconAdd} />\r\n                    </TouchableOpacity> */}\r\n                </View>\r\n                {modalTypeCreate &&\r\n                    <View style={{ backgroundColor: '#414141', borderRadius: 4, padding: 18, position: 'absolute', zIndex: 9, right: 23, top: 58 }}>\r\n                        <View>\r\n                            <TouchableOpacity\r\n                                onPress={() => {\r\n                                    setModalCategory({ isShow: true, title: 'Create Category', isEdit: false });\r\n                                    setModalTypeCreate(!modalTypeCreate)\r\n                                }}\r\n                                style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                                <SvgUri source={Icons.iconCirclePlus}></SvgUri>\r\n                                <Text style={[styles.textRowTable, { marginLeft: 10 }]}>Create category</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity\r\n                                onPress={() => {\r\n                                    setModalItem({ isShow: true, title: 'Create New Item', isEdit: false });\r\n                                    setproductModel(modelProductItem);\r\n                                    setModalTypeCreate(!modalTypeCreate)\r\n                                }}\r\n                                style={{ flexDirection: 'row', alignItems: 'center', marginTop: 20 }}>\r\n                                <SvgUri source={Icons.iconCirclePlus}></SvgUri>\r\n                                <Text style={[styles.textRowTable, { marginLeft: 10 }]}>Create new item</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                }\r\n            </View>\r\n            <ScrollView horizontal={true} style={{ borderTopRightRadius: 4 }}>\r\n                <View style={{ marginBottom: 60 }}>\r\n                    <View style={styles.tableProduct}>\r\n                        <View>\r\n                            <Table>\r\n                                <ScrollView>\r\n                                    <Row data={headerTitle.tableHead} widthArr={headerTitle.widthArr} style={styles.rowheaderTable} textStyle={styles.textRowHeader} />\r\n                                    {\r\n                                        listProductItem.map((rowData, index) => (\r\n                                            <View key={index} style={[{ flexDirection: 'row', height: 36 }, index % 2 == 0 ? { backgroundColor: '#8D7550' } : {}]}>\r\n                                                <Cell key={1}\r\n                                                    // ẩn theo yêu cầu của BA(http://redmine.rnt.vn/issues/7733)\r\n                                                    // data={buttonEdit(rowData)}\r\n                                                    style={{ width: headerTitle.widthArr[0] }}\r\n                                                    textStyle={styles.textRowTable} />\r\n\r\n                                                <Cell key={2}\r\n                                                    data={rowData.prodName}\r\n                                                    style={{ width: headerTitle.widthArr[1] }}\r\n                                                    textStyle={styles.textRowTable} />\r\n\r\n                                                <Cell key={3}\r\n                                                    data={rowData.prodNum}\r\n                                                    style={{ width: headerTitle.widthArr[1] }}\r\n                                                    textStyle={styles.textRowTable} />\r\n\r\n                                                <Cell key={4}\r\n                                                    data={rowData.refCost}\r\n                                                    style={{ width: headerTitle.widthArr[2] }}\r\n                                                    textStyle={styles.textRowTable} />\r\n                                                <Cell key={5}\r\n                                                    data={rowData.priceA ? Money(rowData.priceA) : 0}\r\n                                                    style={{ width: headerTitle.widthArr[3] }}\r\n                                                    textStyle={styles.textRowTable} />\r\n                                                <Cell key={6}\r\n                                                    data={rowData.foodPrice ? Money(rowData.foodPrice) : 0}\r\n                                                    style={{ width: headerTitle.widthArr[1] }}\r\n                                                    textStyle={styles.textRowTable} />\r\n\r\n                                                <Cell key={7}\r\n                                                    data={rowData.foodPrice && rowData.priceA ? Math.round(rowData.foodPrice * 100 / rowData.priceA): 0}\r\n                                                    style={{ width: headerTitle.widthArr[2] }}\r\n                                                    textStyle={styles.textRowTable} />\r\n                                                <Cell key={8}\r\n                                                    data={viewItem(rowData)}\r\n                                                    style={{ width: headerTitle.widthArr[3] }}\r\n                                                    textStyle={styles.textRowTable} />\r\n\r\n                                            </View>\r\n                                        ))\r\n                                    }\r\n                                </ScrollView>\r\n                            </Table>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.rowFooterTable}>\r\n                        <View style={{ justifyContent: 'center' }}>\r\n                            <Text style={{ fontSize: 12, color: colors.black05 }}>Rows:</Text>\r\n                        </View>\r\n                        <View style={{ justifyContent: 'center', marginLeft: 15 }}>\r\n\r\n                            <ModalDropdown\r\n                                defaultValue={\"10\"}\r\n                                dropdownStyle={{\r\n                                    backgroundColor: \"#303030\",\r\n                                    borderWidth: 0,\r\n                                    width: 50,\r\n                                    height: 100,\r\n                                    borderRadius: 4,\r\n\r\n                                }}\r\n                                textStyle={[{ fontSize: 14, color: colors.black, width: 40, }]}\r\n                                dropdownTextStyle={{\r\n                                    color: colors.gray,\r\n                                    backgroundColor: \"#303030\",\r\n                                    fontSize: 12,\r\n                                }}\r\n\r\n                                dropdownTextHighlightStyle={{ color: colors.white }}\r\n                                showsVerticalScrollIndicator={true}\r\n                                options={dataPageSize}\r\n                                renderRightComponent={() => (\r\n                                    <Ionicons name=\"chevron-down\" size={20} color={colors.black} />\r\n                                )}\r\n                                onSelect={(index, value) => {\r\n                                    setPage(1);\r\n                                    setItemsPerPage(value);\r\n                                    getDataProduct(1, value);\r\n\r\n                                }}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                style={{ justifyContent: 'flex-start' }}\r\n                                numberOfPages={Math.floor(dataCount / itemsPerPage) + 1}\r\n                                showFastPaginationControls\r\n                                onPageChange={page => {\r\n                                    setPage(page)\r\n                                    getDataProduct(page + 1, itemsPerPage)\r\n\r\n                                }}\r\n                                label={dataCount > 0 ? `${from + 1}-${to} of ${dataCount}` : ''}\r\n                            />\r\n                        </View>\r\n\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n\r\n            {/* List Category */}\r\n            <Modal\r\n                animationType=\"fade\"\r\n                transparent={true}\r\n                visible={modalCategoryVisible}\r\n                onRequestClose={() => {\r\n                    setModalCategoryVisible(false);\r\n                }}\r\n            >\r\n                <TouchableHighlight\r\n                    style={{ borderRadius: 4, height: windowHeight }}\r\n                    onPressIn={() => {\r\n                        setModalCategoryVisible(false);\r\n                        getDataProduct();\r\n                    }}\r\n                >\r\n                    <View style={[styles.centeredView, styles.modelCategory, { height: windowHeight, }]}>\r\n                        <View style={[styles.modalView, { backgroundColor: \"#414141\", marginTop: 0, paddingBottom: 5 }]}>\r\n                            <View>\r\n                                <SelectMultiple\r\n                                    style={{ borderRadius: 4 }}\r\n                                    rowStyle={{ backgroundColor: colors.grayLight, borderBottomWidth: 0, }}\r\n                                    labelStyle={{ color: colors.white, fontSize: 16 }}\r\n                                    checkboxStyle={{ tintColor: colors.white }}\r\n                                    selectedCheckboxStyle={{ tintColor: colors.white }}\r\n                                    selectedCheckboxSource={Icons.iconChecked}\r\n                                    items={categoryModel}\r\n                                    selectedItems={selectedCategory}\r\n                                    onSelectionsChange={onSelectionsChange} />\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </TouchableHighlight>\r\n            </Modal>\r\n\r\n            {/* Form edit Category */}\r\n            <Modal\r\n                animationType=\"fade\"\r\n                transparent={true}\r\n                visible={modalCategory.isShow}\r\n            >\r\n                <View style={[styles.centeredView, styles.modelCategory, { justifyContent: 'flex-start', paddingTop: 200, height: windowHeight, }]}>\r\n                    <TouchableNativeFeedback onPress={Keyboard.dismiss}>\r\n                        <View style={[styles.modalForm, { backgroundColor: \"#414141\", paddingLeft: 15, paddingRight: 15 }]}>\r\n                            <ScrollView>\r\n                                <View style={styles.titleModal}>\r\n                                    <Text style={[styles.title, { color: colors.mainColor }]}>{modalCategory.title}</Text>\r\n                                </View>\r\n                                {modalCategory.isEdit == false ?\r\n                                    <View style={{ paddingTop: 15 }}>\r\n                                        <Text style={{ fontSize: 12, color: colors.gray, fontWeight: '600' }}>Category</Text>\r\n                                        <TextInput placeholder=\"Description\"\r\n                                            placeholderTextColor={colors.gray}\r\n                                            style={styles.textInput}\r\n                                            onChangeText={(text) => setCategoryName(text)}\r\n                                            value={categoryName} />\r\n                                    </View>\r\n                                    :\r\n                                    <View style={{ paddingTop: 15 }}>\r\n                                        {selectedCategory.map((map, index) => (\r\n                                            <View key={index}>\r\n                                                <Text style={{ fontSize: 12, color: colors.gray, fontWeight: '600' }}>Category</Text>\r\n                                                <TextInput placeholder=\"Description\"\r\n                                                    placeholderTextColor={colors.gray}\r\n                                                    style={styles.textInput}\r\n                                                    onChangeText={(text) => {\r\n                                                        map.label = text;\r\n                                                        setselectedCategoryValue([...selectedCategory])\r\n                                                    }}\r\n                                                    value={map.label} />\r\n                                            </View>\r\n                                        ))}\r\n                                    </View>\r\n                                }\r\n                                <View style={{ marginTop: 20, marginBottom: 0, flexDirection: 'row', alignItems: 'center' }}>\r\n                                    <View style={styles.rowButton}>\r\n                                        <TouchableHighlight\r\n                                            style={{ borderRadius: 4 }}\r\n                                            underlayColor={colors.yellowishbrown}\r\n                                            onPress={() => {\r\n                                                setModalCategory({ isShow: false });\r\n                                            }}\r\n                                        >\r\n                                            <View style={styles.buttonClose}>\r\n                                                <Text style={styles.text}>Close</Text>\r\n                                            </View>\r\n                                        </TouchableHighlight>\r\n                                        <TouchableHighlight\r\n                                            style={{ borderRadius: 4 }}\r\n                                            underlayColor={colors.yellowishbrown}\r\n                                            onPress={() => {\r\n                                                if (modalCategory.isEdit) {\r\n                                                    updateCategoryProductItemList();\r\n                                                }\r\n                                                else {\r\n                                                    createCategory();\r\n                                                }\r\n                                                setModalCategory({ isShow: false });\r\n                                            }\r\n                                            }\r\n                                        >\r\n                                            <View style={styles.buttonSend}>\r\n                                                <Text style={styles.text}>Confirm</Text>\r\n                                            </View>\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                            </ScrollView>\r\n                        </View>\r\n                    </TouchableNativeFeedback>\r\n                </View>\r\n            </Modal>\r\n\r\n            {/* Form ProducItem */}\r\n            <Modal\r\n                animationType=\"fade\"\r\n                transparent={true}\r\n                visible={modalItem.isShow}\r\n            >\r\n                <View style={[styles.centeredView, { justifyContent: 'flex-start', height: windowHeight, }]}>\r\n                    <View style={[styles.modalForm, { marginTop: 115, backgroundColor: \"#414141\", justifyContent: 'space-between', paddingLeft: 15, paddingRight: 15 }]}>\r\n                        <ScrollView>\r\n                            <View>\r\n                                <View style={styles.titleModal}>\r\n                                    <Text style={[styles.title, { color: colors.mainColor }]}>{modalItem.title}</Text>\r\n                                </View>\r\n\r\n                                <View>\r\n                                    <View style={{ marginTop: 10, zIndex: 10 }}>\r\n                                        <View>\r\n                                            <Text style={styles.titleInput}>Category</Text>\r\n                                        </View>\r\n                                        <DropDown\r\n                                            data={categoryModel}\r\n                                            defaultLabel={productModel?.categoryName}\r\n                                            onSelected={(data) => {\r\n                                                if (productModel) {\r\n                                                    productModel.reportNo = Number(data.value)\r\n                                                }\r\n                                            }}\r\n                                        ></DropDown>\r\n                                    </View>\r\n\r\n                                    <View style={{ marginTop: 10 }}>\r\n                                        <View>\r\n                                            <Text style={styles.titleInput}>Name</Text>\r\n                                        </View>\r\n                                        <View>\r\n                                            <TextInput placeholder=\"Description\"\r\n                                                placeholderTextColor={colors.gray}\r\n                                                style={styles.textInput}\r\n                                                onChangeText={(text) => setproductModel({\r\n                                                    ...productModel,\r\n                                                    prodName: text\r\n                                                })}\r\n                                                value={productModel?.prodName} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ marginTop: 10 }}>\r\n                                        <View>\r\n                                            <Text style={styles.titleInput}>Number</Text>\r\n                                        </View>\r\n                                        <View>\r\n                                            <TextInput placeholder=\"Updated on POS automatically\"\r\n                                                editable={modalItem.isEdit}\r\n                                                keyboardType=\"numeric\"\r\n                                                placeholderTextColor={colors.gray}\r\n                                                style={[styles.textInput, !modalItem.isEdit && { backgroundColor: '#8C8C8C' }]}\r\n                                                onChangeText={(text) => {\r\n                                                    if (productModel)\r\n                                                        productModel.prodNum = new Number(text);\r\n                                                }}\r\n                                                value={productModel?.prodNum?.toString()} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ marginTop: 10 }}>\r\n                                        <View>\r\n                                            <Text style={styles.titleInput}>RefCode</Text>\r\n                                        </View>\r\n                                        <View>\r\n                                            <TextInput placeholder=\"Number\"\r\n                                                placeholderTextColor={colors.gray}\r\n                                                style={styles.textInput}\r\n                                                onChangeText={(text) => {\r\n                                                    if (productModel)\r\n                                                        productModel.refCost = text\r\n                                                }}\r\n\r\n                                                value={productModel?.refCost} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ marginTop: 10 }}>\r\n                                        <View>\r\n                                            <Text style={styles.titleInput}>Sales Price</Text>\r\n                                        </View>\r\n                                        <View>\r\n                                            <TextInput placeholder=\"Number\"\r\n                                                keyboardType=\"numeric\"\r\n                                                placeholderTextColor={colors.gray}\r\n                                                style={styles.textInput}\r\n                                                onChangeText={(text) => {\r\n                                                    if (productModel)\r\n                                                        productModel.priceA = Number(text)\r\n                                                }}\r\n                                                value={Money(productModel?.priceA?.toString())} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ marginTop: 10 }}>\r\n                                        <View>\r\n                                            <Text style={styles.titleInput}>Food Cost (Performance in FAST and POS)</Text>\r\n                                        </View>\r\n                                        <View>\r\n                                            <TextInput placeholder=\"API Fast\"\r\n                                                placeholderTextColor={colors.gray}\r\n                                                editable={modalItem.isEdit}\r\n                                                style={[styles.textInput, !modalItem.isEdit && { backgroundColor: '#8C8C8C' }]}\r\n                                                onChangeText={(text) => {\r\n                                                    if (productModel)\r\n                                                        productModel.foodCost = new Number(text)\r\n                                                }}\r\n                                                value={productModel?.foodCost?.toString()} />\r\n                                        </View>\r\n                                    </View>\r\n                                    {\r\n                                        modalItem.isEdit ?\r\n                                            <View style={{ marginTop: 10 }}>\r\n                                                <View>\r\n                                                    <Text style={styles.titleInput}>Reason For change</Text>\r\n                                                </View>\r\n                                                <View>\r\n                                                    <TextInput placeholder=\"Reason\"\r\n                                                        placeholderTextColor={colors.gray}\r\n                                                        style={styles.textInput}\r\n                                                        onChangeText={(text) => {\r\n                                                            if (productModel)\r\n                                                                productModel.reason = text;\r\n                                                        }}\r\n                                                        value={productModel?.reason} />\r\n                                                </View>\r\n                                            </View>\r\n                                            :\r\n                                            <View></View>\r\n                                    }\r\n                                </View>\r\n                            </View>\r\n                            <View style={{ marginTop: 20, marginBottom: 0, flexDirection: 'row', alignItems: 'center' }}>\r\n                                <View style={styles.rowButton}>\r\n                                    <TouchableHighlight\r\n                                        style={{ borderRadius: 4 }}\r\n                                        underlayColor={colors.yellowishbrown}\r\n                                        onPress={() => {\r\n                                            setproductModel(modelProductItem);\r\n                                            setModalItem({ isShow: false });\r\n                                        }}\r\n                                    >\r\n                                        <View style={styles.buttonClose}>\r\n                                            <Text style={styles.text}>Close</Text>\r\n                                        </View>\r\n                                    </TouchableHighlight>\r\n                                    <TouchableHighlight\r\n                                        style={{ borderRadius: 4 }}\r\n                                        underlayColor={colors.yellowishbrown}\r\n                                        onPress={() => {\r\n                                            if (!modalItem.isEdit) {\r\n\r\n                                                createProducItem();\r\n                                            }\r\n                                            else {\r\n                                                updateProducItem();\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <View style={styles.buttonSend}>\r\n                                            <Text style={styles.text}>Confirm</Text>\r\n                                        </View>\r\n                                    </TouchableHighlight>\r\n                                </View>\r\n                            </View>\r\n                        </ScrollView>\r\n                    </View>\r\n                </View>\r\n            </Modal >\r\n            {/* <DialogAwait\r\n                isShow={isSubmit}\r\n            ></DialogAwait> */}\r\n            {isSubmit&&<Loading></Loading>}\r\n        </View >\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: colors.backgroundApp\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n        lineHeight: 24,\r\n        color: colors.white\r\n    },\r\n    titleInput: {\r\n        fontSize: 12,\r\n        color: colors.gray,\r\n        fontWeight: '600'\r\n    },\r\n    text: {\r\n        color: colors.white,\r\n        fontSize: 14,\r\n        fontWeight: '600'\r\n    },\r\n    textItem: {\r\n        color: colors.white, fontWeight: '500', fontSize: 16\r\n    },\r\n\r\n    textInput: {\r\n        marginTop: 5,\r\n        fontSize: 14,\r\n        paddingLeft: 11,\r\n        height: 40,\r\n        borderRadius: 4,\r\n        backgroundColor: '#303030',\r\n        color: colors.white,\r\n        // fontStyle: 'italic'\r\n    },\r\n\r\n    containerPicker: {\r\n        marginTop: 10,\r\n        backgroundColor: colors.backgroundApp,\r\n        paddingBottom: 15\r\n    },\r\n\r\n    viewPicker: {\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        paddingLeft: 15,\r\n        backgroundColor: colors.grayLight,\r\n        borderRadius: 4\r\n    },\r\n    viewPickCategory: {\r\n        marginTop: 5,\r\n        backgroundColor: '#303030',\r\n        borderRadius: 4\r\n    },\r\n    pickerModal: {\r\n        height: 46,\r\n        borderRadius: 4,\r\n        justifyContent: 'center',\r\n        backgroundColor: colors.grayLight,\r\n        color: '#fff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3,\r\n        },\r\n    },\r\n    iconDown: {\r\n        justifyContent: 'center',\r\n        position: 'absolute',\r\n        right: 10,\r\n        bottom: 12,\r\n        zIndex: 4\r\n    },\r\n    line: {\r\n        height: 10,\r\n        backgroundColor: colors.backgroundTab,\r\n    },\r\n\r\n    centeredView: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n    },\r\n    modelCategory: {\r\n        zIndex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        justifyContent: 'flex-start',\r\n        paddingTop: 190,\r\n    },\r\n    modalView: {\r\n        backgroundColor: colors.white,\r\n        width: 360,\r\n        maxHeight: 230,\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        borderRadius: 4,\r\n        paddingBottom: 15,\r\n        paddingTop: 5,\r\n        justifyContent: 'flex-start',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    },\r\n    modalForm: {\r\n        width: 360,\r\n        marginBottom: 95,\r\n        backgroundColor: \"#414141\",\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        borderRadius: 4,\r\n        paddingBottom: 20,\r\n        justifyContent: 'flex-start',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    },\r\n    checkbox: {\r\n        alignSelf: \"center\",\r\n    },\r\n\r\n    tableProduct: {\r\n        // maxHeight: 400,\r\n        // marginBottom: 200,\r\n        marginTop: 10,\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        borderRadius: 4,\r\n        backgroundColor: colors.grayLight\r\n    },\r\n    hedertable: {\r\n        marginTop: 15,\r\n        backgroundColor: colors.backgroundLogin,\r\n    },\r\n    rowTable: {\r\n        flexDirection: 'row',\r\n        height: 36,\r\n    },\r\n    textRowTable: {\r\n        color: colors.white,\r\n        fontSize: 14,\r\n        fontWeight: '400',\r\n        textAlign: 'center',\r\n    },\r\n    textRowHeader: {\r\n        color: '#DFDFDF',\r\n        fontSize: 12,\r\n        fontWeight: '400',\r\n        lineHeight: 18,\r\n        textAlign: 'center',\r\n    },\r\n    rowheaderTable: {\r\n        height: 36,\r\n        backgroundColor: '#878787',\r\n        borderTopLeftRadius: 4,\r\n        borderTopRightRadius: 4\r\n    },\r\n    rowPagginTable: {\r\n        backgroundColor: '#878787',\r\n        borderBottomLeftRadius: 4,\r\n        borderBottomRightRadius: 4\r\n    },\r\n    rowFooterTable: {\r\n        backgroundColor: '#878787',\r\n        borderBottomLeftRadius: 4,\r\n        borderBottomRightRadius: 4,\r\n        borderTopWidth: 1,\r\n        borderBottomColor: colors.black05,\r\n        marginHorizontal: 15,\r\n        flexDirection: 'row',\r\n        paddingHorizontal: 15\r\n    },\r\n    buttonCreate: {\r\n        height: 36,\r\n        width: 150,\r\n        borderRadius: 4,\r\n        justifyContent: 'center',\r\n        backgroundColor: colors.mainColor\r\n    },\r\n    titleModal: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: colors.gray,\r\n        alignItems: 'center',\r\n        padding: 15\r\n    },\r\n    rowButton: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    buttonClose: {\r\n        height: 36,\r\n        width: 150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#636363',\r\n        borderRadius: 4,\r\n    },\r\n    buttonSend: {\r\n        height: 36,\r\n        width: 150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#DAB451',\r\n        borderRadius: 4,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}