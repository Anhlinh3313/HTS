{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Environment } from \"../environment\";\nimport { _getToken, _getUserId } from \"./authService\";\nimport { fetchAPIPost } from \"./baseService\";\nvar url = Environment.apiPost;\nexport var SalesByPaymentmMethodService = function () {\n  function SalesByPaymentmMethodService() {\n    _classCallCheck(this, SalesByPaymentmMethodService);\n  }\n\n  _createClass(SalesByPaymentmMethodService, null, [{\n    key: \"getSalesCASH\",\n    value: function getSalesCASH(model) {\n      var data;\n      return _regeneratorRuntime.async(function getSalesCASH$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Speedpos/GetSalesCASH\",\n                body: model\n              }));\n\n            case 2:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getSalesDEBT\",\n    value: function getSalesDEBT(model) {\n      var data;\n      return _regeneratorRuntime.async(function getSalesDEBT$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Speedpos/GetSalesDEBT\",\n                body: model\n              }));\n\n            case 2:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return SalesByPaymentmMethodService;\n}();\nexport var ReportService = function () {\n  function ReportService() {\n    _classCallCheck(this, ReportService);\n  }\n\n  _createClass(ReportService, null, [{\n    key: \"getAwareness\",\n    value: function getAwareness(model) {\n      var data;\n      return _regeneratorRuntime.async(function getAwareness$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Speedpos/GetAwarenesDayByWeek\",\n                body: model\n              }));\n\n            case 2:\n              data = _context3.sent;\n              return _context3.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"GetAwarenessWeek\",\n    value: function GetAwarenessWeek(model) {\n      var data;\n      return _regeneratorRuntime.async(function GetAwarenessWeek$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Speedpos/GetAwarenessWeek\",\n                body: model\n              }));\n\n            case 2:\n              data = _context4.sent;\n              return _context4.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getSalesAndTCHour\",\n    value: function getSalesAndTCHour(model) {\n      var data;\n      return _regeneratorRuntime.async(function getSalesAndTCHour$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/GetSalesAndTCHour\",\n                body: model\n              }));\n\n            case 2:\n              data = _context5.sent;\n              return _context5.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getNumberOfTC\",\n    value: function getNumberOfTC(model) {\n      var data;\n      return _regeneratorRuntime.async(function getNumberOfTC$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/GetNumberOfTC\",\n                body: model\n              }));\n\n            case 2:\n              data = _context6.sent;\n              return _context6.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"sendMailAwareness\",\n    value: function sendMailAwareness(model) {\n      var data;\n      return _regeneratorRuntime.async(function sendMailAwareness$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/SendMailAwareness\",\n                body: model\n              }));\n\n            case 2:\n              data = _context7.sent;\n              return _context7.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"sendMailSalesAndTC\",\n    value: function sendMailSalesAndTC(model) {\n      var data;\n      return _regeneratorRuntime.async(function sendMailSalesAndTC$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/SendMailSalesAndTC\",\n                body: model\n              }));\n\n            case 2:\n              data = _context8.sent;\n              return _context8.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"sendMailRevenueManagament\",\n    value: function sendMailRevenueManagament(model) {\n      var data;\n      return _regeneratorRuntime.async(function sendMailRevenueManagament$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/SendMailRevenueManagament\",\n                body: model\n              }));\n\n            case 2:\n              data = _context9.sent;\n              return _context9.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"sendMailNumberOfTC\",\n    value: function sendMailNumberOfTC(model) {\n      var data;\n      return _regeneratorRuntime.async(function sendMailNumberOfTC$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/SendMailNumberOfTC\",\n                body: model\n              }));\n\n            case 2:\n              data = _context10.sent;\n              return _context10.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getRevenueManagement\",\n    value: function getRevenueManagement(DateTime) {\n      var data;\n      return _regeneratorRuntime.async(function getRevenueManagement$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/GetRevenueManagement\",\n                body: {\n                  DateTime: DateTime\n                }\n              }));\n\n            case 2:\n              data = _context11.sent;\n              return _context11.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getRevenueManagementItem\",\n    value: function getRevenueManagementItem(DateTime) {\n      var data;\n      return _regeneratorRuntime.async(function getRevenueManagementItem$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/GetRevenueManagementItem\",\n                body: {\n                  DateTime: DateTime\n                }\n              }));\n\n            case 2:\n              data = _context12.sent;\n              return _context12.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getRevenueSummary\",\n    value: function getRevenueSummary(DateFrom, DateTo, DateTime) {\n      var data;\n      return _regeneratorRuntime.async(function getRevenueSummary$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/GetRevenueSummary\",\n                body: {\n                  DateFrom: DateFrom,\n                  DateTo: DateTo,\n                  DateTime: DateTime\n                }\n              }));\n\n            case 2:\n              data = _context13.sent;\n              return _context13.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"sendRevenueSummary\",\n    value: function sendRevenueSummary(model) {\n      var data;\n      return _regeneratorRuntime.async(function sendRevenueSummary$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Report/SendRevenueSummary\",\n                body: model\n              }));\n\n            case 2:\n              data = _context14.sent;\n              return _context14.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return ReportService;\n}();\nexport var getRevenueBySubCategory = function getRevenueBySubCategory(_stringDateFrom, _stringDateTo) {\n  var token, userId, response, json;\n  return _regeneratorRuntime.async(function getRevenueBySubCategory$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context15.sent;\n          _context15.next = 5;\n          return _regeneratorRuntime.awrap(_getUserId());\n\n        case 5:\n          userId = _context15.sent;\n          _context15.prev = 6;\n          _context15.next = 9;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetRevenueBySubCategory', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              StringDateFrom: _stringDateFrom,\n              StringDateTo: _stringDateTo,\n              UserId: userId\n            })\n          }));\n\n        case 9:\n          response = _context15.sent;\n          _context15.next = 12;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 12:\n          json = _context15.sent;\n          return _context15.abrupt(\"return\", json);\n\n        case 16:\n          _context15.prev = 16;\n          _context15.t0 = _context15[\"catch\"](6);\n          console.error(_context15.t0);\n          return _context15.abrupt(\"return\", _context15.t0);\n\n        case 20:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, [[6, 16]], Promise);\n};\nexport var revenueBySubCategory = function revenueBySubCategory(_stringDateFrom, _stringDateTo, _dateFrom, _dateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function revenueBySubCategory$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context16.sent;\n          _context16.prev = 3;\n          _context16.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/RevenueBySubCategory', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              StringDateFrom: _stringDateFrom,\n              StringDateTo: _stringDateTo,\n              DateFrom: _dateFrom,\n              DateTo: _dateTo\n            })\n          }));\n\n        case 6:\n          response = _context16.sent;\n          _context16.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context16.sent;\n          return _context16.abrupt(\"return\", json);\n\n        case 13:\n          _context16.prev = 13;\n          _context16.t0 = _context16[\"catch\"](3);\n          console.error(_context16.t0);\n          return _context16.abrupt(\"return\", _context16.t0);\n\n        case 17:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getFocAndDiscount = function getFocAndDiscount(_dateFrom, _dateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getFocAndDiscount$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context17.sent;\n          _context17.prev = 3;\n          _context17.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetFocAndDiscount', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              DateFrom: _dateFrom,\n              DateTo: _dateTo\n            })\n          }));\n\n        case 6:\n          response = _context17.sent;\n          _context17.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context17.sent;\n          return _context17.abrupt(\"return\", json);\n\n        case 13:\n          _context17.prev = 13;\n          _context17.t0 = _context17[\"catch\"](3);\n          console.error(_context17.t0);\n          return _context17.abrupt(\"return\", _context17.t0);\n\n        case 17:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getHomeFocAndDiscountDetail = function getHomeFocAndDiscountDetail(_dateFrom, _dateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getHomeFocAndDiscountDetail$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context18.sent;\n          _context18.prev = 3;\n          _context18.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetHomeFocAndDiscountDetail', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              DateFrom: _dateFrom,\n              DateTo: _dateTo\n            })\n          }));\n\n        case 6:\n          response = _context18.sent;\n          _context18.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context18.sent;\n          return _context18.abrupt(\"return\", json);\n\n        case 13:\n          _context18.prev = 13;\n          _context18.t0 = _context18[\"catch\"](3);\n          console.error(_context18.t0);\n          return _context18.abrupt(\"return\", _context18.t0);\n\n        case 17:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getRevenueAndTCPERHour = function getRevenueAndTCPERHour(_dateFrom, _dateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getRevenueAndTCPERHour$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context19.sent;\n          _context19.prev = 3;\n          _context19.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetRevenueAndTCPERHour', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              DateFrom: _dateFrom,\n              DateTo: _dateTo\n            })\n          }));\n\n        case 6:\n          response = _context19.sent;\n          _context19.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context19.sent;\n          return _context19.abrupt(\"return\", json);\n\n        case 13:\n          _context19.prev = 13;\n          _context19.t0 = _context19[\"catch\"](3);\n          console.error(_context19.t0);\n          return _context19.abrupt(\"return\", _context19.t0);\n\n        case 17:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getTopBest = function getTopBest(_top, _dateFrom, _dateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getTopBest$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context20.sent;\n          _context20.prev = 3;\n          _context20.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetTopBest', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              Top: _top,\n              DateFrom: _dateFrom,\n              DateTo: _dateTo\n            })\n          }));\n\n        case 6:\n          response = _context20.sent;\n          _context20.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context20.sent;\n          return _context20.abrupt(\"return\", json);\n\n        case 13:\n          _context20.prev = 13;\n          _context20.t0 = _context20[\"catch\"](3);\n          console.error(_context20.t0);\n          return _context20.abrupt(\"return\", _context20.t0);\n\n        case 17:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getTopWorst = function getTopWorst(_top, _dateFrom, _dateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getTopWorst$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context21.sent;\n          _context21.prev = 3;\n          _context21.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetTopWorst', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              Top: _top,\n              DateFrom: _dateFrom,\n              DateTo: _dateTo\n            })\n          }));\n\n        case 6:\n          response = _context21.sent;\n          _context21.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context21.sent;\n          return _context21.abrupt(\"return\", json);\n\n        case 13:\n          _context21.prev = 13;\n          _context21.t0 = _context21[\"catch\"](3);\n          console.error(_context21.t0);\n          return _context21.abrupt(\"return\", _context21.t0);\n\n        case 17:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getTop = function getTop(_top, _dateFrom, _dateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getTop$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context22.sent;\n          _context22.prev = 3;\n          _context22.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetTop', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              Top: _top,\n              DateFrom: _dateFrom,\n              DateTo: _dateTo\n            })\n          }));\n\n        case 6:\n          response = _context22.sent;\n          _context22.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context22.sent;\n          return _context22.abrupt(\"return\", json);\n\n        case 13:\n          _context22.prev = 13;\n          _context22.t0 = _context22[\"catch\"](3);\n          console.error(_context22.t0);\n          return _context22.abrupt(\"return\", _context22.t0);\n\n        case 17:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getSalesByPaymentmMethod = function getSalesByPaymentmMethod(_dateFrom, _dateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getSalesByPaymentmMethod$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context23.sent;\n          _context23.prev = 3;\n          _context23.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetSalesByPaymentmMethod', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              StringDateFrom: _dateFrom,\n              StringDateTo: _dateTo\n            })\n          }));\n\n        case 6:\n          response = _context23.sent;\n          _context23.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context23.sent;\n          return _context23.abrupt(\"return\", json);\n\n        case 13:\n          _context23.prev = 13;\n          _context23.t0 = _context23[\"catch\"](3);\n          console.error(_context23.t0);\n          return _context23.abrupt(\"return\", _context23.t0);\n\n        case 17:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getTotalRevenueAndQuality = function getTotalRevenueAndQuality(ReportNo, DateFrom, DateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getTotalRevenueAndQuality$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context24.sent;\n          _context24.prev = 3;\n          _context24.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetTotalRevenueAndQuanlity', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              ReportNo: ReportNo,\n              DateFrom: DateFrom,\n              DateTo: DateTo\n            })\n          }));\n\n        case 6:\n          response = _context24.sent;\n          _context24.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context24.sent;\n          return _context24.abrupt(\"return\", json);\n\n        case 13:\n          _context24.prev = 13;\n          _context24.t0 = _context24[\"catch\"](3);\n          console.error(_context24.t0);\n          return _context24.abrupt(\"return\", _context24.t0);\n\n        case 17:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getProductByReportNo = function getProductByReportNo(ReportNo, DateFrom, DateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getProductByReportNo$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context25.sent;\n          _context25.prev = 3;\n          _context25.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetProductByReportNo', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              ReportNo: ReportNo,\n              DateFrom: DateFrom,\n              DateTo: DateTo\n            })\n          }));\n\n        case 6:\n          response = _context25.sent;\n          _context25.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context25.sent;\n          return _context25.abrupt(\"return\", json);\n\n        case 13:\n          _context25.prev = 13;\n          _context25.t0 = _context25[\"catch\"](3);\n          console.error(_context25.t0);\n          return _context25.abrupt(\"return\", _context25.t0);\n\n        case 17:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getNoSalesAtAllByCategory = function getNoSalesAtAllByCategory(ReportNo, DateFrom, DateTo) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getNoSalesAtAllByCategory$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          _context26.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context26.sent;\n          _context26.prev = 3;\n          _context26.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Speedpos/GetNoSalesAtAllByCategory', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              ReportNo: ReportNo,\n              DateFrom: DateFrom,\n              DateTo: DateTo\n            })\n          }));\n\n        case 6:\n          response = _context26.sent;\n          _context26.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context26.sent;\n          return _context26.abrupt(\"return\", json);\n\n        case 13:\n          _context26.prev = 13;\n          _context26.t0 = _context26[\"catch\"](3);\n          console.error(_context26.t0);\n          return _context26.abrupt(\"return\", _context26.t0);\n\n        case 17:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/SpeedposService.tsx"],"names":["Environment","_getToken","_getUserId","fetchAPIPost","url","apiPost","SalesByPaymentmMethodService","model","body","data","ReportService","DateTime","DateFrom","DateTo","getRevenueBySubCategory","_stringDateFrom","_stringDateTo","token","userId","fetch","method","headers","JSON","stringify","StringDateFrom","StringDateTo","UserId","response","json","console","error","revenueBySubCategory","_dateFrom","_dateTo","getFocAndDiscount","getHomeFocAndDiscountDetail","getRevenueAndTCPERHour","getTopBest","_top","Top","getTopWorst","getTop","getSalesByPaymentmMethod","getTotalRevenueAndQuality","ReportNo","getProductByReportNo","getNoSalesAtAllByCategory"],"mappings":"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","sourcesContent":["import { Environment } from \"../environment\";\r\nimport { FilterViewModel } from \"../models/filterViewModel\";\r\nimport { IResponseModel } from \"../models/IResponseModel\";\r\nimport { _getToken, _getUserId } from \"./authService\";\r\nimport { fetchAPIPost } from \"./baseService\";\r\nlet url = Environment.apiPost;\r\n\r\n\r\nexport class SalesByPaymentmMethodService {\r\n\r\n    public static async getSalesCASH(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Speedpos/GetSalesCASH`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n\r\n    public static async getSalesDEBT(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Speedpos/GetSalesDEBT`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport class ReportService {\r\n    public static async getAwareness(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Speedpos/GetAwarenesDayByWeek`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n\r\n    public static async GetAwarenessWeek(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Speedpos/GetAwarenessWeek`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n\r\n    public static async getSalesAndTCHour(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/GetSalesAndTCHour`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n\r\n    public static async getNumberOfTC(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/GetNumberOfTC`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n    public static async sendMailAwareness(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/SendMailAwareness`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n    public static async sendMailSalesAndTC(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/SendMailSalesAndTC`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n\r\n    public static async sendMailRevenueManagament(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/SendMailRevenueManagament`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n\r\n    public static async sendMailNumberOfTC(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/SendMailNumberOfTC`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n    public static async getRevenueManagement(DateTime: string): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/GetRevenueManagement`, body: { DateTime } }) as IResponseModel;\r\n        return data;\r\n    }\r\n    public static async getRevenueManagementItem(DateTime: string): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/GetRevenueManagementItem`, body: { DateTime } }) as IResponseModel;\r\n        return data;\r\n    }\r\n    public static async getRevenueSummary(DateFrom: string, DateTo: string, DateTime: string): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/GetRevenueSummary`, body: {DateFrom, DateTo, DateTime} }) as IResponseModel;\r\n        return data;\r\n    }\r\n    public static async sendRevenueSummary(model: FilterViewModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Report/SendRevenueSummary`, body: model }) as IResponseModel;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport const getRevenueBySubCategory = async (_stringDateFrom: any, _stringDateTo: any) => {\r\n    const token = await _getToken();\r\n    const userId = await _getUserId();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetRevenueBySubCategory', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                StringDateFrom: _stringDateFrom,\r\n                StringDateTo: _stringDateTo,\r\n                UserId: userId\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const revenueBySubCategory = async (_stringDateFrom: any, _stringDateTo: any, _dateFrom: any, _dateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/RevenueBySubCategory', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                StringDateFrom: _stringDateFrom,\r\n                StringDateTo: _stringDateTo,\r\n                DateFrom: _dateFrom,\r\n                DateTo: _dateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const getFocAndDiscount = async (_dateFrom: any, _dateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetFocAndDiscount', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                DateFrom: _dateFrom,\r\n                DateTo: _dateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const getHomeFocAndDiscountDetail = async (_dateFrom: any, _dateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetHomeFocAndDiscountDetail', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                DateFrom: _dateFrom,\r\n                DateTo: _dateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const getRevenueAndTCPERHour = async (_dateFrom: any, _dateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetRevenueAndTCPERHour', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                DateFrom: _dateFrom,\r\n                DateTo: _dateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const getTopBest = async (_top: any, _dateFrom: any, _dateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetTopBest', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                Top: _top,\r\n                DateFrom: _dateFrom,\r\n                DateTo: _dateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\n\r\nexport const getTopWorst = async (_top: any, _dateFrom: any, _dateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetTopWorst', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                Top: _top,\r\n                DateFrom: _dateFrom,\r\n                DateTo: _dateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\nexport const getTop = async (_top: any, _dateFrom: any, _dateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetTop', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                Top: _top,\r\n                DateFrom: _dateFrom,\r\n                DateTo: _dateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const getSalesByPaymentmMethod = async (_dateFrom: any, _dateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetSalesByPaymentmMethod', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                StringDateFrom: _dateFrom,\r\n                StringDateTo: _dateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const getTotalRevenueAndQuality = async (ReportNo: any, DateFrom: any, DateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetTotalRevenueAndQuanlity', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                ReportNo,\r\n                DateFrom,\r\n                DateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const getProductByReportNo = async (ReportNo: any, DateFrom: any, DateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetProductByReportNo', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                ReportNo,\r\n                DateFrom,\r\n                DateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const getNoSalesAtAllByCategory = async (ReportNo: any, DateFrom: any, DateTo: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Speedpos/GetNoSalesAtAllByCategory', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                ReportNo,\r\n                DateFrom,\r\n                DateTo\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}