{"ast":null,"code":"export var getMonday = function getMonday(d) {\n  var date = new Date(d);\n  var day = date.getDay(),\n      diff = date.getDate() - day + (day == 0 ? -6 : 1);\n  return new Date(date.setDate(diff));\n};\nexport function get12HourTime(string) {\n  var date = new Date(\"1/1/2021 \" + string);\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var amPm = hours >= 12 ? \"PM\" : \"AM\";\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n\n  var _hours = hours < 10 ? \"0\" + hours : hours;\n\n  var _minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n  var strTime = _hours + \":\" + _minutes + \" \" + amPm;\n  return strTime;\n}","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/components/generalConvert/conVertMonDay.tsx"],"names":["getMonday","d","date","Date","day","getDay","diff","getDate","setDate","get12HourTime","string","hours","getHours","minutes","getMinutes","amPm","_hours","_minutes","strTime"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,CAAD,EAAsB;AAC7C,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,CAAT,CAAX;AACA,MAAIG,GAAG,GAAGF,IAAI,CAACG,MAAL,EAAV;AAAA,MACEC,IAAI,GAAGJ,IAAI,CAACK,OAAL,KAAiBH,GAAjB,IAAwBA,GAAG,IAAI,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAAxC,CADT;AAEA,SAAO,IAAID,IAAJ,CAASD,IAAI,CAACM,OAAL,CAAaF,IAAb,CAAT,CAAP;AACD,CALM;AAOP,OAAO,SAASG,aAAT,CAAuBC,MAAvB,EAAuC;AAC5C,MAAIR,IAAI,GAAG,IAAIC,IAAJ,CAAS,cAAcO,MAAvB,CAAX;AACA,MAAIC,KAAK,GAAGT,IAAI,CAACU,QAAL,EAAZ;AACA,MAAIC,OAAO,GAAGX,IAAI,CAACY,UAAL,EAAd;AACA,MAAIC,IAAI,GAAGJ,KAAK,IAAI,EAAT,GAAc,IAAd,GAAqB,IAAhC;AACAA,EAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACAA,EAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,EAAxB;;AACA,MAAIK,MAAM,GAAGL,KAAK,GAAG,EAAR,GAAa,MAAMA,KAAnB,GAA2BA,KAAxC;;AACA,MAAIM,QAAQ,GAAGJ,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAA9C;;AACA,MAAIK,OAAO,GAAGF,MAAM,GAAG,GAAT,GAAeC,QAAf,GAA0B,GAA1B,GAAgCF,IAA9C;AACA,SAAOG,OAAP;AACD","sourcesContent":["export const getMonday = (d: Date | number) => {\r\n  let date = new Date(d);\r\n  var day = date.getDay(),\r\n    diff = date.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\r\n  return new Date(date.setDate(diff));\r\n};\r\n\r\nexport function get12HourTime(string: string) {\r\n  var date = new Date(\"1/1/2021 \" + string);\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n  let amPm = hours >= 12 ? \"PM\" : \"AM\";\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  let _hours = hours < 10 ? \"0\" + hours : hours;\r\n  let _minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  let strTime = _hours + \":\" + _minutes + \" \" + amPm;\r\n  return strTime;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}