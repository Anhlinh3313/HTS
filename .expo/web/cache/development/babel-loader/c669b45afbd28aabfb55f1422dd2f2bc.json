{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\components\\\\management\\\\TimePicker\\\\index.tsx\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport moment from \"moment\";\nimport { colors } from \"../../../utils/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport HandleTime from \"./HandleTime\";\nimport { NO_RESTRICTION } from \"../../../models/staffModel\";\nimport { useSelector } from \"react-redux\";\n\nvar index = function index(_ref) {\n  var _data$staffFreeTimeLi, _data$staffFreeTimeLi2, _data$staffFreeTimeLi3, _data$staffFreeTimeLi4;\n\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"\" : _ref$title,\n      data = _ref.data,\n      visible = _ref.visible,\n      _onRequestClose = _ref.onRequestClose,\n      onRequestSend = _ref.onRequestSend;\n  var workingPartTimes = useSelector(function (state) {\n    return state.staff.workingPartTimes;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeFrom = _useState2[0],\n      setTimeFrom = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timeTo = _useState4[0],\n      setTimeTo = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeFromObj = _useState6[0],\n      setTimeFromObj = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      timeToObj = _useState8[0],\n      setTimeToObj = _useState8[1];\n\n  var onDone = function onDone() {\n    var idFromTime = timeFromObj.hour * 2 + (timeFromObj.minute === 0 ? 1 : 2);\n    var idToTime = timeToObj.hour * 2 + (timeToObj.minute === 0 ? 0 : 1);\n    var workingTimeId = Array.from({\n      length: idToTime - idFromTime + 1\n    }, function (_, i) {\n      return idFromTime + i;\n    });\n\n    if (idToTime === idFromTime - 1) {\n      Alert.alert(\"Note\", \"Time From cannot equal to Time To!\");\n      return;\n    }\n\n    if (idToTime < idFromTime) {\n      Alert.alert(\"Note\", \"Time From cannot than more Time To!\");\n      return;\n    }\n\n    if (data.staffFreeTimeList[data.staffFreeTimeList.length - 1].workingTimeId === NO_RESTRICTION) {\n      onRequestSend({\n        FreeDate: data.freeDate,\n        Rank: data.rank,\n        WorkingTimeId: workingTimeId\n      });\n\n      _onRequestClose();\n\n      return;\n    }\n\n    var idFromTimeOld = data.staffFreeTimeList[0].timeOrder;\n    var idToTimeOld = data.staffFreeTimeList[data.staffFreeTimeList.length - 1].timeOrder;\n\n    if (idFromTimeOld > idFromTime || idFromTimeOld > idToTime || idToTimeOld < idToTime || idToTimeOld < idFromTime) {\n      Alert.alert(\"Note\", \"Can only choose the time between \" + data.staffFreeTimeList[0].timeStart + \" and  \" + data.staffFreeTimeList[data.staffFreeTimeList.length - 1].timeEnd);\n      return;\n    }\n\n    onRequestSend({\n      FreeDate: data.freeDate,\n      Rank: data.rank,\n      WorkingTimeId: workingTimeId\n    });\n\n    _onRequestClose();\n  };\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    statusBarTranslucent: true,\n    onRequestClose: function onRequestClose() {\n      _onRequestClose;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.dateTimeModal, {\n      height: \"100%\",\n      justifyContent: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.dateTimeContainer, {}],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 32,\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.dateTimeHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeHeaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, moment(title).format(\"dddd \").toUpperCase()), React.createElement(Text, {\n    style: styles.dateTimeHeaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, moment(title).format(\"(DD/MM/yyyy)\"))))), React.createElement(HandleTime, {\n    value: (_data$staffFreeTimeLi = data == null ? void 0 : (_data$staffFreeTimeLi2 = data.staffFreeTimeList[0]) == null ? void 0 : _data$staffFreeTimeLi2.timeStart) != null ? _data$staffFreeTimeLi : \"\",\n    title: \"From\",\n    onChange: function onChange(time) {\n      setTimeFrom(time);\n    },\n    onChangeOBJ: function onChangeOBJ(time) {\n      setTimeFromObj(time);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), React.createElement(HandleTime, {\n    value: (_data$staffFreeTimeLi3 = data == null ? void 0 : (_data$staffFreeTimeLi4 = data.staffFreeTimeList[(data == null ? void 0 : data.staffFreeTimeList.length) - 1]) == null ? void 0 : _data$staffFreeTimeLi4.timeEnd) != null ? _data$staffFreeTimeLi3 : \"\",\n    title: \"To\",\n    onChange: function onChange(time) {\n      setTimeTo(time);\n    },\n    onChangeOBJ: function onChangeOBJ(time) {\n      setTimeToObj(time);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), React.createElement(LinearGradient, {\n    style: styles.dateTimeButton,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onDone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Done\"))), React.createElement(TouchableOpacity, {\n    style: [styles.dateTimeButton, {\n      marginBottom: 10\n    }],\n    onPress: _onRequestClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.dateTimeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Close\")))));\n};\n\nexport default index;\nvar styles = StyleSheet.create({\n  text: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: \"600\"\n  },\n  text4: {\n    color: colors.white,\n    fontSize: 14,\n    fontWeight: \"400\"\n  },\n  textTime: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingTop: 5,\n    paddingRight: 15,\n    paddingLeft: 15\n  },\n  dateTimeModal: {\n    flex: 1,\n    width: \"100%\",\n    position: \"absolute\",\n    backgroundColor: \" rgba(0, 0, 0, 0.5)\"\n  },\n  dateTimeContainer: {\n    width: \"90%\",\n    alignSelf: \"center\",\n    backgroundColor: \"#414141\",\n    borderRadius: 5\n  },\n  dateTimeHeader: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 14,\n    borderBottomColor: colors.colorLine,\n    borderBottomWidth: 1,\n    paddingBottom: 8\n  },\n  dateTimeHeaderText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontSize: 17\n  },\n  timeContainer: {\n    flexDirection: \"row\",\n    height: 100\n  },\n  timeHourView: {\n    flex: 4,\n    backgroundColor: \"#595959\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  timeArrow: {\n    width: 30,\n    height: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  timeText: {\n    color: \"#fff\",\n    fontSize: 18\n  },\n  timePeriod: {\n    flex: 2,\n    backgroundColor: \"#595959\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  timePeriodDivide: {\n    width: \"33%\",\n    height: 1,\n    backgroundColor: \"#A4A4A4\"\n  },\n  dateTimeButton: {\n    width: \"90%\",\n    height: 40,\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    borderRadius: 4\n  },\n  dateTimeText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontSize: 17\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/components/management/TimePicker/index.tsx"],"names":["React","useState","moment","colors","LinearGradient","HandleTime","NO_RESTRICTION","useSelector","index","title","data","visible","onRequestClose","onRequestSend","workingPartTimes","state","staff","timeFrom","setTimeFrom","timeTo","setTimeTo","timeFromObj","setTimeFromObj","timeToObj","setTimeToObj","onDone","idFromTime","hour","minute","idToTime","workingTimeId","Array","from","length","_","i","Alert","alert","staffFreeTimeList","FreeDate","freeDate","Rank","rank","WorkingTimeId","idFromTimeOld","timeOrder","idToTimeOld","timeStart","timeEnd","styles","dateTimeModal","height","justifyContent","dateTimeContainer","paddingHorizontal","marginBottom","dateTimeHeader","dateTimeHeaderText","format","toUpperCase","time","dateTimeButton","dateTimeText","StyleSheet","create","text","color","white","fontSize","fontWeight","text4","textTime","flex","flexDirection","alignItems","line","backgroundColor","backgroundTab","row","paddingTop","paddingRight","paddingLeft","width","position","alignSelf","borderRadius","marginTop","borderBottomColor","colorLine","borderBottomWidth","paddingBottom","textAlign","timeContainer","timeHourView","timeArrow","timeText","timePeriod","timePeriodDivide"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, Modal, TouchableOpacity, Alert } from \"react-native\";\r\n\r\nimport moment from \"moment\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport HandleTime from \"./HandleTime\";\r\nimport { IUpdateStaffPartTime, NO_RESTRICTION, NO_AVAILABILITY } from \"../../../models/staffModel\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/reducers\";\r\nconst index = ({\r\n  title = \"\",\r\n  data,\r\n  visible,\r\n  onRequestClose,\r\n  onRequestSend,\r\n}: {\r\n  title?: string;\r\n  data: any;\r\n  visible: boolean;\r\n  onRequestClose: () => void;\r\n  onRequestSend?: (data: IUpdateStaffPartTime) => void;\r\n}) => {\r\n  const workingPartTimes = useSelector((state: RootState) => state.staff.workingPartTimes);\r\n  interface ITime {\r\n    hour: number;\r\n    minute: number;\r\n    period: string;\r\n  }\r\n\r\n  const [timeFrom, setTimeFrom] = useState(\"\");\r\n  const [timeTo, setTimeTo] = useState(\"\");\r\n  const [timeFromObj, setTimeFromObj] = useState<ITime>();\r\n  const [timeToObj, setTimeToObj] = useState<ITime>();\r\n  const onDone = () => {\r\n    const idFromTime = timeFromObj.hour * 2 + (timeFromObj.minute === 0 ? 1 : 2);\r\n    const idToTime = timeToObj.hour * 2 + (timeToObj.minute === 0 ? 0 : 1);\r\n    const workingTimeId = Array.from({ length: idToTime - idFromTime + 1 }, (_, i) => idFromTime + i);\r\n\r\n    if (idToTime === idFromTime - 1) {\r\n      Alert.alert(\"Note\", `Time From cannot equal to Time To!`);\r\n      return;\r\n    }\r\n    if (idToTime < idFromTime) {\r\n      Alert.alert(\"Note\", `Time From cannot than more Time To!`);\r\n      return;\r\n    }\r\n\r\n    if (data.staffFreeTimeList[data.staffFreeTimeList.length - 1].workingTimeId === NO_RESTRICTION) {\r\n      onRequestSend({\r\n        FreeDate: data.freeDate,\r\n        Rank: data.rank,\r\n        WorkingTimeId: workingTimeId,\r\n      });\r\n      onRequestClose();\r\n      return;\r\n    }\r\n\r\n    const idFromTimeOld = data.staffFreeTimeList[0].timeOrder;\r\n    const idToTimeOld = data.staffFreeTimeList[data.staffFreeTimeList.length - 1].timeOrder;\r\n    if (idFromTimeOld > idFromTime || idFromTimeOld > idToTime || idToTimeOld < idToTime || idToTimeOld < idFromTime) {\r\n      Alert.alert(\r\n        \"Note\",\r\n        `Can only choose the time between ${data.staffFreeTimeList[0].timeStart} and  ${\r\n          data.staffFreeTimeList[data.staffFreeTimeList.length - 1].timeEnd\r\n        }`\r\n      );\r\n      return;\r\n    }\r\n    onRequestSend({ FreeDate: data.freeDate, Rank: data.rank, WorkingTimeId: workingTimeId });\r\n    onRequestClose();\r\n  };\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={visible}\r\n      statusBarTranslucent={true}\r\n      onRequestClose={() => {\r\n        onRequestClose;\r\n      }}\r\n    >\r\n      <View style={[styles.dateTimeModal, { height: \"100%\", justifyContent: \"center\" }]}>\r\n        <View style={[styles.dateTimeContainer, {}]}>\r\n          <View style={{ paddingHorizontal: 32, marginBottom: 30 }}>\r\n            <View style={styles.dateTimeHeader}>\r\n              <Text style={{}}>\r\n                <Text style={styles.dateTimeHeaderText}>{moment(title).format(\"dddd \").toUpperCase()}</Text>\r\n                <Text style={styles.dateTimeHeaderText}>{moment(title).format(\"(DD/MM/yyyy)\")}</Text>\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          {/* -------------------------------------- */}\r\n          <HandleTime\r\n            value={data?.staffFreeTimeList[0]?.timeStart ?? \"\"}\r\n            title=\"From\"\r\n            onChange={time => {\r\n              setTimeFrom(time);\r\n            }}\r\n            onChangeOBJ={time => {\r\n              setTimeFromObj(time);\r\n            }}\r\n          ></HandleTime>\r\n          <HandleTime\r\n            value={data?.staffFreeTimeList[data?.staffFreeTimeList.length - 1]?.timeEnd ?? \"\"}\r\n            title=\"To\"\r\n            onChange={time => {\r\n              setTimeTo(time);\r\n            }}\r\n            onChangeOBJ={time => {\r\n              setTimeToObj(time);\r\n            }}\r\n          ></HandleTime>\r\n\r\n          {/* -------------Button Confirm------------------------- */}\r\n          <LinearGradient style={styles.dateTimeButton} colors={[\"#DAB451\", \"#988050\"]}>\r\n            <TouchableOpacity onPress={onDone}>\r\n              <Text style={styles.dateTimeText}>Done</Text>\r\n            </TouchableOpacity>\r\n          </LinearGradient>\r\n          <TouchableOpacity style={[styles.dateTimeButton, { marginBottom: 10 }]} onPress={onRequestClose}>\r\n            <Text style={styles.dateTimeText}>Close</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default index;\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    color: colors.white,\r\n    fontSize: 14,\r\n    fontWeight: \"600\",\r\n  },\r\n  text4: {\r\n    color: colors.white,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n  textTime: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  line: {\r\n    height: 10,\r\n    backgroundColor: colors.backgroundTab,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: 5,\r\n    paddingRight: 15,\r\n    paddingLeft: 15,\r\n  },\r\n  dateTimeModal: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \" rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  dateTimeContainer: {\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"#414141\",\r\n    borderRadius: 5,\r\n  },\r\n  dateTimeHeader: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 14,\r\n    borderBottomColor: colors.colorLine,\r\n    borderBottomWidth: 1,\r\n    paddingBottom: 8,\r\n  },\r\n  dateTimeHeaderText: {\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    fontSize: 17,\r\n  },\r\n  timeContainer: {\r\n    flexDirection: \"row\",\r\n    height: 100,\r\n  },\r\n  timeHourView: {\r\n    flex: 4,\r\n    backgroundColor: \"#595959\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  timeArrow: {\r\n    width: 30,\r\n    height: 30,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  timeText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n  },\r\n  timePeriod: {\r\n    flex: 2,\r\n    backgroundColor: \"#595959\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  timePeriodDivide: {\r\n    width: \"33%\",\r\n    height: 1,\r\n    backgroundColor: \"#A4A4A4\",\r\n  },\r\n  dateTimeButton: {\r\n    width: \"90%\",\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    borderRadius: 4,\r\n  },\r\n  dateTimeText: {\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    fontSize: 17,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}