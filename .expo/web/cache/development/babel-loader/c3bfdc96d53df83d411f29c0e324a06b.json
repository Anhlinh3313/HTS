{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Environment } from \"../environment\";\nimport { _getToken } from \"./authService\";\nvar url = Environment.apiPost;\nexport var getBudgetPlanningFast = function getBudgetPlanningFast(_year) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getBudgetPlanningFast$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Report/GetBudgetPlanningFast', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              Year: _year\n            })\n          }));\n\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](3);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getSupplier = function getSupplier(StringDateFrom, StringDateTo, SupplierCode) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getSupplier$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context2.sent;\n          _context2.prev = 3;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Report/GetSupplier', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              StringDateFrom: StringDateFrom,\n              StringDateTo: StringDateTo,\n              SupplierCode: SupplierCode\n            })\n          }));\n\n        case 6:\n          response = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context2.sent;\n          return _context2.abrupt(\"return\", json);\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](3);\n          console.error(_context2.t0);\n          return _context2.abrupt(\"return\", _context2.t0);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/fastService.tsx"],"names":["Environment","_getToken","url","apiPost","getBudgetPlanningFast","_year","token","fetch","method","headers","body","JSON","stringify","Year","response","json","console","error","getSupplier","StringDateFrom","StringDateTo","SupplierCode"],"mappings":";AAAA,SAASA,WAAT;AACA,SAASC,SAAT;AAEA,IAAIC,GAAG,GAAGF,WAAW,CAACG,OAAtB;AACA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbJ,SAAS,EADI;;AAAA;AAC3BK,UAAAA,KAD2B;AAAA;AAAA;AAAA,2CAGRC,KAAK,CAACL,GAAG,GAAG,mCAAP,EAA4C;AAClEM,YAAAA,MAAM,EAAE,MAD0D;AAElEC,YAAAA,OAAO,EAAE;AACL,wBAAU,kBADL;AAEL,8BAAgB,kBAFX;AAGL,+BAAiBH,KAAK,eAAaA,KAAb,GAAuB;AAHxC,aAFyD;AAOlEI,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,cAAAA,IAAI,EAAER;AADW,aAAf;AAP4D,WAA5C,CAHG;;AAAA;AAGzBS,UAAAA,QAHyB;AAAA;AAAA,2CAcZA,QAAQ,CAACC,IAAT,EAdY;;AAAA;AAczBA,UAAAA,IAdyB;AAAA,2CAetBA,IAfsB;;AAAA;AAAA;AAAA;AAiB7BC,UAAAA,OAAO,CAACC,KAAR;AAjB6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;AAqBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,cAAP,EAA6BC,YAA7B,EAAiDC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHpB,SAAS,EADN;;AAAA;AACjBK,UAAAA,KADiB;AAAA;AAAA;AAAA,2CAGEC,KAAK,CAACL,GAAG,GAAG,yBAAP,EAAkC;AACxDM,YAAAA,MAAM,EAAE,MADgD;AAExDC,YAAAA,OAAO,EAAE;AACL,wBAAU,kBADL;AAEL,8BAAgB,kBAFX;AAGL,+BAAiBH,KAAK,eAAaA,KAAb,GAAuB;AAHxC,aAF+C;AAOxDI,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBO,cAAAA,cAAc,EAAdA,cADiB;AAEjBC,cAAAA,YAAY,EAAZA,YAFiB;AAGjBC,cAAAA,YAAY,EAAZA;AAHiB,aAAf;AAPkD,WAAlC,CAHP;;AAAA;AAGfP,UAAAA,QAHe;AAAA;AAAA,2CAgBFA,QAAQ,CAACC,IAAT,EAhBE;;AAAA;AAgBfA,UAAAA,IAhBe;AAAA,4CAiBZA,IAjBY;;AAAA;AAAA;AAAA;AAmBnBC,UAAAA,OAAO,CAACC,KAAR;AAnBmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import { Environment } from \"../environment\";\r\nimport { _getToken } from \"./authService\";\r\n\r\nlet url = Environment.apiPost;\r\nexport const getBudgetPlanningFast = async (_year: any) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Report/GetBudgetPlanningFast', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                Year: _year\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\nexport const getSupplier = async (StringDateFrom:string,StringDateTo:string,SupplierCode:string) => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Report/GetSupplier', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                StringDateFrom,\r\n                StringDateTo,\r\n                SupplierCode\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}