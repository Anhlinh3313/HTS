{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Environment } from \"../environment\";\nimport { _getToken, _getUserId } from \"./authService\";\nimport { fetchAPIGet, fetchAPIPost } from \"./baseService\";\nexport var CategoryService = function () {\n  function CategoryService() {\n    _classCallCheck(this, CategoryService);\n  }\n\n  _createClass(CategoryService, null, [{\n    key: \"cteateCategory\",\n    value: function cteateCategory(model) {\n      var data;\n      return _regeneratorRuntime.async(function cteateCategory$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Category/Create\",\n                body: model\n              }));\n\n            case 2:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"updateCategory\",\n    value: function updateCategory(model) {\n      var data;\n      return _regeneratorRuntime.async(function updateCategory$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIPost({\n                url: \"/api/Category/Update\",\n                body: model\n              }));\n\n            case 2:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getAllCategory\",\n    value: function getAllCategory() {\n      var data;\n      return _regeneratorRuntime.async(function getAllCategory$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(fetchAPIGet({\n                url: \"/api/Category/GetAllCategory\"\n              }));\n\n            case 2:\n              data = _context3.sent;\n              return _context3.abrupt(\"return\", data.data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return CategoryService;\n}();\nvar url = Environment.apiPost;\nexport var getAllCategory = function getAllCategory() {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getAllCategory$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context4.sent;\n          _context4.prev = 3;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Category/GetAllCategory', {\n            method: 'Get',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            }\n          }));\n\n        case 6:\n          response = _context4.sent;\n          _context4.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context4.sent;\n          return _context4.abrupt(\"return\", json);\n\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](3);\n          console.error(_context4.t0);\n          return _context4.abrupt(\"return\", _context4.t0);\n\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var updateCategory = function updateCategory(_categoryIdEdit, _categoryName) {\n  var token, getUserId, response, json;\n  return _regeneratorRuntime.async(function updateCategory$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context5.sent;\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(_getUserId());\n\n        case 5:\n          getUserId = _context5.sent;\n          _context5.prev = 6;\n          _context5.next = 9;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Category/UpdateCategory', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              UserId: getUserId,\n              CategoryIdEdit: _categoryIdEdit,\n              CategoryName: _categoryName\n            })\n          }));\n\n        case 9:\n          response = _context5.sent;\n          _context5.next = 12;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 12:\n          json = _context5.sent;\n          return _context5.abrupt(\"return\", json);\n\n        case 16:\n          _context5.prev = 16;\n          _context5.t0 = _context5[\"catch\"](6);\n          console.error(_context5.t0);\n          return _context5.abrupt(\"return\", _context5.t0);\n\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[6, 16]], Promise);\n};\nexport var getCategoryFast = function getCategoryFast() {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getCategoryFast$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context6.sent;\n          _context6.prev = 3;\n          _context6.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + '/api/Category/GetCategoryFast', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': token ? \"Bearer \" + token : ''\n            },\n            body: JSON.stringify({\n              StringDateFrom: \"\",\n              StringDateTo: new Date(new Date().getFullYear(), 11, 31),\n              ItemGroupCode: \"\"\n            })\n          }));\n\n        case 6:\n          response = _context6.sent;\n          _context6.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context6.sent;\n          return _context6.abrupt(\"return\", json);\n\n        case 13:\n          _context6.prev = 13;\n          _context6.t0 = _context6[\"catch\"](3);\n          console.error(_context6.t0);\n          return _context6.abrupt(\"return\", _context6.t0);\n\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/categoryService.tsx"],"names":["Environment","_getToken","_getUserId","fetchAPIGet","fetchAPIPost","CategoryService","model","url","body","data","apiPost","getAllCategory","token","fetch","method","headers","response","json","console","error","updateCategory","_categoryIdEdit","_categoryName","getUserId","JSON","stringify","UserId","CategoryIdEdit","CategoryName","getCategoryFast","StringDateFrom","StringDateTo","Date","getFullYear","ItemGroupCode"],"mappings":"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","sourcesContent":["import { Environment } from \"../environment\";\r\nimport { ICategoryModel } from \"../models/IcategoryModel\";\r\nimport { IResponseModel } from \"../models/IResponseModel\";\r\nimport { _getToken, _getUserId } from \"./authService\";\r\nimport { fetchAPIGet, fetchAPIPost } from \"./baseService\";\r\n\r\nexport class CategoryService {\r\n\r\n    public static async cteateCategory(model:ICategoryModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Category/Create`,body:model}) as IResponseModel;\r\n        return data;\r\n    }\r\n\r\n    public static async updateCategory(model:ICategoryModel): Promise<IResponseModel> {\r\n        let data = await fetchAPIPost({ url: `/api/Category/Update`,body:model}) as IResponseModel;\r\n        return data;\r\n    }\r\n\r\n    public static async getAllCategory(): Promise<ICategoryModel[]> {\r\n        let data = await fetchAPIGet({ url: `/api/Category/GetAllCategory`}) as IResponseModel;\r\n        return data.data;\r\n    }\r\n\r\n}\r\nconst url = Environment.apiPost;\r\nexport const getAllCategory = async ():Promise<IResponseModel> => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Category/GetAllCategory', {\r\n            method: 'Get',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n        })\r\n        let json = await response.json();\r\n        return json ;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n\r\nexport const updateCategory = async (_categoryIdEdit: any, _categoryName: any) => {\r\n    const token = await _getToken();\r\n    const getUserId = await _getUserId();\r\n    try {\r\n        let response = await fetch(url + '/api/Category/UpdateCategory', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                UserId: getUserId,\r\n                CategoryIdEdit: _categoryIdEdit,\r\n                CategoryName: _categoryName,\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\nexport const getCategoryFast = async () => {\r\n    const token = await _getToken();\r\n    try {\r\n        let response = await fetch(url + '/api/Category/GetCategoryFast', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n            body: JSON.stringify({\r\n                StringDateFrom: \"\",\r\n                StringDateTo: new Date(new Date().getFullYear(), 11, 31),\r\n                ItemGroupCode: \"\"\r\n            })\r\n        })\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return (error);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}