{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\TabManagement\\\\StaffManagement\\\\Reports\\\\items\\\\itemPartTimeAvailability.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { colors } from \"../../../../../../utils/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { CheckBox } from \"react-native-elements\";\nimport TimePicker from \"../../../../../../components/management/TimePicker\";\nimport moment from \"moment\";\nimport { get12HourTime } from \"../../../../../../components/generalConvert/conVertMonDay\";\nimport { NO_RESTRICTION, NO_AVAILABILITY } from \"../../../../../../models/staffModel\";\nimport { useDispatch } from \"react-redux\";\nexport default function ItemPartTimeAvailability(props) {\n  var _props$data$roster,\n      _props$data,\n      _this = this;\n\n  var dispatch = useDispatch();\n  var dimensions = Dimensions.get(\"window\");\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSchedule = _useState2[0],\n      setIsSchedule = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isShowPickerTime = _useState4[0],\n      setIsShowPickerTime = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      itemChangeTime = _useState6[0],\n      setItemChangeTime = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataReqPart = _useState8[0],\n      setDataReqPart = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataStaff = _useState10[0],\n      setDataStaff = _useState10[1];\n\n  var onShowPickerTime = function onShowPickerTime(item) {\n    if (item.staffFreeTimeList[0].workingTimeId !== NO_AVAILABILITY && item.staffFreeTimeList[0].workingTimeId !== null) {\n      setItemChangeTime(item);\n      setIsShowPickerTime(!isShowPickerTime);\n    }\n  };\n\n  var HandleSend = function HandleSend(data) {\n    dispatch({\n      type: \"UPDATE_STAFF_PART_TIME\",\n      payload: {\n        StaffId: props.data.staffId,\n        dataUpdate: data\n      }\n    });\n  };\n\n  var checkManagementAgree = function checkManagementAgree(item) {\n    var index = item.staffFreeTimeList.findIndex(function (element) {\n      return element.managementAgree == true;\n    });\n\n    if (index !== -1) {\n      if (item.staffFreeTimeList[index].workingTimeId === NO_AVAILABILITY) {\n        return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var handleViewTime = function handleViewTime(item) {\n    var times = item.staffFreeTimeList;\n\n    if (times.length === 0) {\n      return \"NO AVAILABILITY\";\n    }\n\n    if (checkManagementAgree(item)) {\n      var _arrTimeDone = [];\n      times.forEach(function (item) {\n        if (item.managementAgree) {\n          _arrTimeDone.push(item);\n        }\n      });\n\n      if (_arrTimeDone[0].workingTimeId === NO_RESTRICTION) {\n        return _arrTimeDone[0].timeRange.toUpperCase();\n      }\n\n      return get12HourTime(_arrTimeDone[0].timeStart) + \" to \" + get12HourTime(_arrTimeDone[_arrTimeDone.length - 1].timeEnd);\n    } else {\n      if (times[times.length - 1].workingTimeId === NO_AVAILABILITY || times[times.length - 1].workingTimeId === NO_RESTRICTION) {\n        return times[times.length - 1].timeRange.toUpperCase();\n      }\n\n      if (times[0].workingTimeId === null) {\n        return \"NO AVAILABILITY\";\n      }\n\n      return get12HourTime(times[0].timeStart) + \" to \" + get12HourTime(times[times.length - 1].timeEnd);\n    }\n  };\n\n  useEffect(function () {\n    setDataStaff(props.data.staffFreeTimeInfo);\n  }, [props.data.staffFreeTimeInfo]);\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"#414141\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 16,\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.row_between, {}],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textGray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Position\"), React.createElement(Text, {\n    style: styles.textTitleHeader400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, (_props$data$roster = (_props$data = props.data) == null ? void 0 : _props$data.roster) != null ? _props$data$roster : \"-\")), React.createElement(View, {\n    style: [styles.row_between, {\n      paddingVertical: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textGray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Schedule\"), React.createElement(CheckBox, {\n    containerStyle: {\n      margin: 0,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 0\n    },\n    checkedIcon: React.createElement(View, {\n      style: styles.iconChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, React.createElement(Ionicons, {\n      name: \"checkmark\",\n      size: 14,\n      color: \"#DAB451\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    })),\n    uncheckedIcon: React.createElement(View, {\n      style: styles.iconUnCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }\n    }),\n    checked: isSchedule,\n    onPress: function onPress() {\n      return setIsSchedule(!isSchedule);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), isSchedule && React.createElement(View, {\n    style: [styles.staff],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      height: 41,\n      alignItems: \"center\",\n      backgroundColor: \"#878787\",\n      paddingLeft: 24,\n      marginBottom: 16,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.textTitleHeader400, {\n      flex: 3\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Date\"), React.createElement(Text, {\n    style: [styles.textTitleHeader400, {\n      flex: 4\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Timeline\")), dataStaff.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: {\n        flexDirection: \"row\",\n        height: 50,\n        paddingLeft: 24,\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: [{\n        width: dimensions.width / 3\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: [styles.row_between, {\n        width: 80,\n        justifyContent: \"space-between\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textWeekDays,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    }, moment(item.freeDate).format(\"ddd\")), React.createElement(View, {\n      style: {\n        width: 40,\n        height: 40,\n        backgroundColor: item.staffFreeTimeList.length > 0 ? !checkManagementAgree(item) ? item.staffFreeTimeList[item.staffFreeTimeList.length - 1].workingTimeId === NO_AVAILABILITY ? \"#8D7550\" : item.staffFreeTimeList[item.staffFreeTimeList.length - 1].workingTimeId === NO_RESTRICTION ? \"#76D146\" : \"#FDB441\" : \"#FDB441\" : \"#8D7550\",\n        padding: 8,\n        borderRadius: 99,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: styles.textNumber,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, item.day)))), React.createElement(View, {\n      style: {\n        paddingRight: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        borderColor: \"#DAB451\",\n        borderWidth: checkManagementAgree(item) ? 1 : 0,\n        borderRadius: 8,\n        paddingHorizontal: 8,\n        paddingVertical: 5\n      },\n      onPress: function onPress() {\n        return !checkManagementAgree(item) ? onShowPickerTime(item) : undefined;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: [styles.textTitleHeader400, {\n        color: item.staffFreeTimeList.length > 0 ? !checkManagementAgree(item) ? item.staffFreeTimeList[item.staffFreeTimeList.length - 1].workingTimeId === NO_AVAILABILITY ? \"#8D7550\" : item.staffFreeTimeList[item.staffFreeTimeList.length - 1].workingTimeId === NO_RESTRICTION ? \"#76D146\" : \"#FDB441\" : \"#FDB441\" : \"#8D7550\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }, handleViewTime(item)))));\n  }))), React.createElement(TimePicker, {\n    title: itemChangeTime == null ? void 0 : itemChangeTime.freeDate,\n    data: itemChangeTime,\n    visible: isShowPickerTime,\n    onRequestClose: function onRequestClose() {\n      setIsShowPickerTime(!isShowPickerTime);\n    },\n    onRequestSend: function onRequestSend(data) {\n      HandleSend(data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  row_between: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  iconChecked: {\n    borderRadius: 4,\n    backgroundColor: \"#fff\",\n    width: 18,\n    height: 18,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconUnCheck: {\n    borderRadius: 4,\n    backgroundColor: \"transparent\",\n    width: 18,\n    height: 18,\n    borderColor: \"#fff\",\n    borderWidth: 1\n  },\n  pickerWeek: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderBottomWidth: 1,\n    borderBottomColor: colors.colorLine,\n    width: 91,\n    paddingBottom: 8\n  },\n  textGray: {\n    color: colors.gray,\n    fontWeight: \"400\",\n    fontSize: 14\n  },\n  radius_top: {\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4\n  },\n  textTitleHeader400: {\n    color: colors.colorText,\n    fontWeight: \"400\",\n    fontSize: 13\n  },\n  textTitleHeader: {\n    color: colors.colorText,\n    fontWeight: \"500\",\n    fontSize: 14\n  },\n  textWeekDays: {\n    color: colors.colorText,\n    fontSize: 12\n  },\n  textNumber: {\n    color: colors.colorText,\n    fontSize: 16,\n    fontWeight: \"600\"\n  },\n  containerLegend: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  legend: {\n    backgroundColor: \"#414141\",\n    borderRadius: 4,\n    padding: 10,\n    width: \"80%\"\n  },\n  staff: {\n    backgroundColor: \"#675E50\",\n    borderRadius: 4,\n    marginBottom: 10,\n    paddingBottom: 10\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/TabManagement/StaffManagement/Reports/items/itemPartTimeAvailability.tsx"],"names":["React","useState","useEffect","colors","Ionicons","CheckBox","TimePicker","moment","get12HourTime","NO_RESTRICTION","NO_AVAILABILITY","useDispatch","ItemPartTimeAvailability","props","dispatch","dimensions","Dimensions","get","isSchedule","setIsSchedule","isShowPickerTime","setIsShowPickerTime","itemChangeTime","setItemChangeTime","dataReqPart","setDataReqPart","dataStaff","setDataStaff","onShowPickerTime","item","staffFreeTimeList","workingTimeId","HandleSend","data","type","payload","StaffId","staffId","dataUpdate","checkManagementAgree","index","findIndex","element","managementAgree","handleViewTime","times","length","_arrTimeDone","forEach","push","timeRange","toUpperCase","timeStart","timeEnd","staffFreeTimeInfo","backgroundColor","paddingHorizontal","paddingTop","styles","row_between","textGray","textTitleHeader400","roster","paddingVertical","margin","marginLeft","marginRight","padding","iconChecked","iconUnCheck","staff","flexDirection","height","alignItems","paddingLeft","marginBottom","borderTopLeftRadius","borderTopRightRadius","flex","map","width","justifyContent","textWeekDays","freeDate","format","borderRadius","textNumber","day","paddingRight","borderColor","borderWidth","undefined","color","StyleSheet","create","pickerWeek","borderBottomWidth","borderBottomColor","colorLine","paddingBottom","gray","fontWeight","fontSize","radius_top","colorText","textTitleHeader","containerLegend","legend"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions } from \"react-native\";\r\n\r\nimport { colors } from \"../../../../../../utils/Colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { CheckBox } from \"react-native-elements\";\r\nimport TimePicker from \"../../../../../../components/management/TimePicker\";\r\nimport TimePickerVer2 from \"../../../../../../components/TimePickerVer2\";\r\nimport moment from \"moment\";\r\nimport { get12HourTime } from \"../../../../../../components/generalConvert/conVertMonDay\";\r\nimport {\r\n  IUpdateStaffPartTime,\r\n  IWorkingSchedulePartTime,\r\n  NO_RESTRICTION,\r\n  NO_AVAILABILITY,\r\n} from \"../../../../../../models/staffModel\";\r\nimport { useDispatch } from \"react-redux\";\r\nexport default function ItemPartTimeAvailability(props: any) {\r\n  const dispatch = useDispatch();\r\n  const dimensions = Dimensions.get(\"window\");\r\n  const [isSchedule, setIsSchedule] = useState(false);\r\n  const [isShowPickerTime, setIsShowPickerTime] = useState(false);\r\n  const [itemChangeTime, setItemChangeTime] = useState<IWorkingSchedulePartTime>();\r\n  const [dataReqPart, setDataReqPart] = useState<{ FreeDate: string; Rank: string; WorkingTimeId: number[] }[]>([]);\r\n\r\n  const [dataStaff, setDataStaff] = useState([]);\r\n\r\n  const onShowPickerTime = (item: IWorkingSchedulePartTime) => {\r\n    if (item.staffFreeTimeList[0].workingTimeId !== NO_AVAILABILITY && item.staffFreeTimeList[0].workingTimeId !== null) {\r\n      setItemChangeTime(item);\r\n      setIsShowPickerTime(!isShowPickerTime);\r\n    }\r\n  };\r\n  const HandleSend = (data: IUpdateStaffPartTime) => {\r\n    dispatch({ type: \"UPDATE_STAFF_PART_TIME\", payload: { StaffId: props.data.staffId, dataUpdate: data } });\r\n  };\r\n\r\n  const checkManagementAgree = (item: IWorkingSchedulePartTime) => {\r\n    let index = item.staffFreeTimeList.findIndex(element => element.managementAgree == true);\r\n    if (index !== -1) {\r\n      if (item.staffFreeTimeList[index].workingTimeId === NO_AVAILABILITY) {\r\n        return false;\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const handleViewTime = (item: IWorkingSchedulePartTime) => {\r\n    let times = item.staffFreeTimeList;\r\n    if (times.length === 0) {\r\n      return \"NO AVAILABILITY\";\r\n    }\r\n    if (checkManagementAgree(item)) {\r\n      // if đã update time\r\n      let _arrTimeDone = [];\r\n      times.forEach(item => {\r\n        if (item.managementAgree) {\r\n          _arrTimeDone.push(item);\r\n        }\r\n      });\r\n      if (_arrTimeDone[0].workingTimeId === NO_RESTRICTION) {\r\n        return _arrTimeDone[0].timeRange.toUpperCase();\r\n      }\r\n      return `${get12HourTime(_arrTimeDone[0].timeStart)} to ${get12HourTime(_arrTimeDone[_arrTimeDone.length - 1].timeEnd)}`;\r\n    } else {\r\n      if (times[times.length - 1].workingTimeId === NO_AVAILABILITY || times[times.length - 1].workingTimeId === NO_RESTRICTION) {\r\n        return times[times.length - 1].timeRange.toUpperCase();\r\n      }\r\n      if (times[0].workingTimeId === null) {\r\n        return \"NO AVAILABILITY\";\r\n      }\r\n      return `${get12HourTime(times[0].timeStart)} to ${get12HourTime(times[times.length - 1].timeEnd)}`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDataStaff(props.data.staffFreeTimeInfo);\r\n  }, [props.data.staffFreeTimeInfo]);\r\n  return (\r\n    <View style={{ backgroundColor: \"#414141\" }}>\r\n      <View style={{ paddingHorizontal: 16, paddingTop: 10 }}>\r\n        <View style={[styles.row_between, {}]}>\r\n          <Text style={styles.textGray}>Position</Text>\r\n          <Text style={styles.textTitleHeader400}>{props.data?.roster ?? \"-\"}</Text>\r\n        </View>\r\n        <View style={[styles.row_between, { paddingVertical: 10 }]}>\r\n          <Text style={styles.textGray}>Schedule</Text>\r\n          <CheckBox\r\n            containerStyle={{\r\n              margin: 0,\r\n              marginLeft: 0,\r\n              marginRight: 0,\r\n              padding: 0,\r\n            }}\r\n            checkedIcon={\r\n              <View style={styles.iconChecked}>\r\n                <Ionicons name={\"checkmark\"} size={14} color=\"#DAB451\"></Ionicons>\r\n              </View>\r\n            }\r\n            uncheckedIcon={<View style={styles.iconUnCheck}></View>}\r\n            checked={isSchedule}\r\n            onPress={() => setIsSchedule(!isSchedule)}\r\n          />\r\n        </View>\r\n        {isSchedule && (\r\n          <View style={[styles.staff]}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                height: 41,\r\n                alignItems: \"center\",\r\n                backgroundColor: \"#878787\",\r\n                paddingLeft: 24,\r\n                marginBottom: 16,\r\n                borderTopLeftRadius: 4,\r\n                borderTopRightRadius: 4,\r\n              }}\r\n            >\r\n              <Text style={[styles.textTitleHeader400, { flex: 3 }]}>Date</Text>\r\n              <Text style={[styles.textTitleHeader400, { flex: 4 }]}>Timeline</Text>\r\n            </View>\r\n            {dataStaff.map((item, index) => {\r\n              return (\r\n                <View\r\n                  key={index}\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    height: 50,\r\n                    paddingLeft: 24,\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <View style={[{ width: dimensions.width / 3 }]}>\r\n                    <View style={[styles.row_between, { width: 80, justifyContent: \"space-between\" }]}>\r\n                      <Text style={styles.textWeekDays}>{moment(item.freeDate).format(\"ddd\")}</Text>\r\n                      <View\r\n                        style={{\r\n                          width: 40,\r\n                          height: 40,\r\n                          backgroundColor:\r\n                            item.staffFreeTimeList.length > 0\r\n                              ? !checkManagementAgree(item)\r\n                                ? item.staffFreeTimeList[item.staffFreeTimeList.length - 1].workingTimeId === NO_AVAILABILITY\r\n                                  ? \"#8D7550\"\r\n                                  : item.staffFreeTimeList[item.staffFreeTimeList.length - 1].workingTimeId === NO_RESTRICTION\r\n                                  ? \"#76D146\"\r\n                                  : \"#FDB441\"\r\n                                : \"#FDB441\"\r\n                              : \"#8D7550\",\r\n                          padding: 8,\r\n                          borderRadius: 99,\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Text style={styles.textNumber}>{item.day}</Text>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      paddingRight: 15,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderColor: \"#DAB451\",\r\n                        borderWidth: checkManagementAgree(item) ? 1 : 0,\r\n                        borderRadius: 8,\r\n                        paddingHorizontal: 8,\r\n                        paddingVertical: 5,\r\n                      }}\r\n                      onPress={() => (!checkManagementAgree(item) ? onShowPickerTime(item) : undefined)}\r\n                    >\r\n                      <Text\r\n                        style={[\r\n                          styles.textTitleHeader400,\r\n                          {\r\n                            color:\r\n                              item.staffFreeTimeList.length > 0\r\n                                ? !checkManagementAgree(item)\r\n                                  ? item.staffFreeTimeList[item.staffFreeTimeList.length - 1].workingTimeId === NO_AVAILABILITY\r\n                                    ? \"#8D7550\"\r\n                                    : item.staffFreeTimeList[item.staffFreeTimeList.length - 1].workingTimeId === NO_RESTRICTION\r\n                                    ? \"#76D146\"\r\n                                    : \"#FDB441\"\r\n                                  : \"#FDB441\"\r\n                                : \"#8D7550\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        {handleViewTime(item)}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n              );\r\n            })}\r\n          </View>\r\n        )}\r\n      </View>\r\n      <TimePicker\r\n        title={itemChangeTime?.freeDate}\r\n        data={itemChangeTime}\r\n        visible={isShowPickerTime}\r\n        onRequestClose={() => {\r\n          setIsShowPickerTime(!isShowPickerTime);\r\n        }}\r\n        onRequestSend={data => {\r\n          HandleSend(data);\r\n        }}\r\n      ></TimePicker>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row_between: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconChecked: {\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fff\",\r\n    width: 18,\r\n    height: 18,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconUnCheck: {\r\n    borderRadius: 4,\r\n    backgroundColor: \"transparent\",\r\n    width: 18,\r\n    height: 18,\r\n    borderColor: \"#fff\",\r\n    borderWidth: 1,\r\n  },\r\n  pickerWeek: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.colorLine,\r\n    width: 91,\r\n    paddingBottom: 8,\r\n  },\r\n  textGray: {\r\n    color: colors.gray,\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n  radius_top: {\r\n    borderTopLeftRadius: 4,\r\n    borderTopRightRadius: 4,\r\n  },\r\n  textTitleHeader400: {\r\n    color: colors.colorText,\r\n    fontWeight: \"400\",\r\n    fontSize: 13,\r\n  },\r\n  textTitleHeader: {\r\n    color: colors.colorText,\r\n    fontWeight: \"500\",\r\n    fontSize: 14,\r\n  },\r\n  textWeekDays: {\r\n    color: colors.colorText,\r\n    fontSize: 12,\r\n  },\r\n  textNumber: {\r\n    color: colors.colorText,\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n  },\r\n  containerLegend: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  legend: {\r\n    backgroundColor: \"#414141\",\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    width: \"80%\",\r\n  },\r\n\r\n  staff: {\r\n    backgroundColor: \"#675E50\",\r\n    borderRadius: 4,\r\n    marginBottom: 10,\r\n    paddingBottom: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}