{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Environment } from \"../environment\";\nimport { _getToken } from \"./authService\";\nvar url = Environment.apiPost;\nexport var getListTable = function getListTable() {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getListTable$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + \"/api/Speedpos/TableSetups\", {\n            method: \"GET\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? \"Bearer \" + token : \"\"\n            }\n          }));\n\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](3);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getTableSetupsGroundFloor = function getTableSetupsGroundFloor() {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getTableSetupsGroundFloor$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context2.sent;\n          _context2.prev = 3;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + \"/api/Speedpos/TableSetupsGroundFloor\", {\n            method: \"GET\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? \"Bearer \" + token : \"\"\n            }\n          }));\n\n        case 6:\n          response = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context2.sent;\n          return _context2.abrupt(\"return\", json);\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](3);\n          console.error(_context2.t0);\n          return _context2.abrupt(\"return\", _context2.t0);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getSections = function getSections() {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getSections$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context3.sent;\n          _context3.prev = 3;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + \"/api/Speedpos/GetSections\", {\n            method: \"GET\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? \"Bearer \" + token : \"\"\n            }\n          }));\n\n        case 6:\n          response = _context3.sent;\n          _context3.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context3.sent;\n          return _context3.abrupt(\"return\", json);\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](3);\n          console.error(_context3.t0);\n          return _context3.abrupt(\"return\", _context3.t0);\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var getTransactionDetail = function getTransactionDetail(_stringDateFrom, _stringDateTo, _memCode, _transact) {\n  var token, response, json;\n  return _regeneratorRuntime.async(function getTransactionDetail$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(_getToken());\n\n        case 2:\n          token = _context4.sent;\n          _context4.prev = 3;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url + \"/api/Speedpos/TransactionDetail\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? \"Bearer \" + token : \"\"\n            },\n            body: JSON.stringify({\n              StringDateFrom: _stringDateFrom,\n              StringDateTo: _stringDateTo,\n              MemCode: _memCode,\n              Transact: _transact\n            })\n          }));\n\n        case 6:\n          response = _context4.sent;\n          _context4.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          json = _context4.sent;\n          return _context4.abrupt(\"return\", json);\n\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](3);\n          console.error(_context4.t0);\n          return _context4.abrupt(\"return\", _context4.t0);\n\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/netWorking/tableService.ts"],"names":["Environment","_getToken","url","apiPost","getListTable","token","fetch","method","headers","Accept","Authorization","response","json","console","error","getTableSetupsGroundFloor","getSections","getTransactionDetail","_stringDateFrom","_stringDateTo","_memCode","_transact","body","JSON","stringify","StringDateFrom","StringDateTo","MemCode","Transact"],"mappings":"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","sourcesContent":["import { Environment } from \"../environment\";\r\nimport { _getToken } from \"./authService\";\r\n\r\nlet url = Environment.apiPost;\r\nexport const getListTable = async () => {\r\n  const token = await _getToken();\r\n  try {\r\n    let response = await fetch(url + \"/api/Speedpos/TableSetups\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    });\r\n    let json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error;\r\n  }\r\n};\r\nexport const getTableSetupsGroundFloor = async () => {\r\n  const token = await _getToken();\r\n  try {\r\n    let response = await fetch(url + \"/api/Speedpos/TableSetupsGroundFloor\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    });\r\n    let json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error;\r\n  }\r\n};\r\nexport const getSections = async () => {\r\n  const token = await _getToken();\r\n  try {\r\n    let response = await fetch(url + \"/api/Speedpos/GetSections\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    });\r\n    let json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error;\r\n  }\r\n};\r\nexport const getTransactionDetail = async (\r\n  _stringDateFrom: any,\r\n  _stringDateTo: any,\r\n  _memCode: any,\r\n  _transact: any\r\n) => {\r\n  const token = await _getToken();\r\n  try {\r\n    let response = await fetch(url + \"/api/Speedpos/TransactionDetail\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n      body: JSON.stringify({\r\n        StringDateFrom: _stringDateFrom,\r\n        StringDateTo: _stringDateTo,\r\n        MemCode: _memCode,\r\n        Transact: _transact,\r\n      }),\r\n    });\r\n    let json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}