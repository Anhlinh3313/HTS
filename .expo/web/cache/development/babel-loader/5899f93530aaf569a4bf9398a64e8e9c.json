{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar initialState = {\n  workPlace: {\n    value: 0,\n    label: \"\"\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"PICK_WORKPLACE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        workPlace: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/redux/reducers/workplace.ts"],"names":["initialState","workPlace","value","label","reducer","state","action","type","payload"],"mappings":";;;;;;AAIA,IAAMA,YAAsB,GAAG;AAC7BC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,KAAK,EAAE;AAAnB;AADkB,CAA/B;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA0D;AAAA,MAAzDC,KAAyD,uEAAvCL,YAAuC;AAAA,MAAzBM,MAAyB;;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,6CACKF,KADL;AAEEJ,QAAAA,SAAS,EAAEK,MAAM,CAACE;AAFpB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAWA,eAAeD,OAAf","sourcesContent":["import { PlaceActions } from \"../actions/workplace\";\r\ntype AppState = {\r\n  workPlace: {value:number, label:string};\r\n};\r\nconst initialState: AppState = {\r\n  workPlace: { value: 0, label: \"\" },\r\n};\r\nconst reducer = (state: AppState = initialState, action: PlaceActions) => {\r\n  switch (action.type) {\r\n    case \"PICK_WORKPLACE\":\r\n      return {\r\n        ...state,\r\n        workPlace: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}