{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\angular\\\\hts_reactnative\\\\src\\\\app\\\\screens\\\\details\\\\Tabreport\\\\revenueSummary.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { colors } from \"../../../utils/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport DateTimePicker from \"../../../components/datetimepicker\";\nimport ModalSendEmail from \"../../../components/management/items/modalSendEmail\";\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\nimport SendFail from \"../../../components/modalNotification/SendFail\";\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\nimport DropDownRank from \"../../../components/dropDown/DropDownRank\";\nimport { ReportService } from \"../../../netWorking/SpeedposService\";\nimport { getMonday } from \"../../../components/generalConvert/conVertMonDay\";\nimport DialogAwait from \"../../../components/dialogs/Loading\";\nimport MoneyText from \"../../../components/Money\";\n\nvar revenueSummary = function revenueSummary() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var toDate = new Date();\n  var endWeekDay = new Date().setDate(getMonday(toDate).getDate() + 6);\n\n  if (getMonday(toDate).getMonth() < toDate.getMonth()) {\n    endWeekDay = new Date(new Date().setMonth(toDate.getMonth() - 1)).setDate(getMonday(toDate).getDate() + 6);\n  }\n\n  var _useState3 = useState(moment(getMonday(toDate)).format(\"YYYY-MM-DD\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromDateTime = _useState4[0],\n      setFromDateTime = _useState4[1];\n\n  var _useState5 = useState(moment(endWeekDay).format(\"YYYY-MM-DD\")),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endDateTime = _useState6[0],\n      setEndDateTime = _useState6[1];\n\n  var model = {};\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      checKLoadDefault = _useState8[0],\n      setChecKLoadDefault = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalSendMail = _useState10[0],\n      setModalSendMail = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sentStatus = _useState12[0],\n      setSentStatus = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dataRevenueSummary = _useState14[0],\n      setDataRevenueSummary = _useState14[1];\n\n  var _useState15 = useState(moment(getMonday(toDate)).format(\"YYYY-MM-DD\")),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dateSendMail = _useState16[0],\n      setDateSendMail = _useState16[1];\n\n  var handleSendMail = function handleSendMail() {\n    setModalSendMail(!modalSendMail);\n    setSentStatus(\"success\");\n  };\n\n  var loadDataRevenueSummary = function loadDataRevenueSummary(dateTimeFrom, dateTimeTo, dateTime) {\n    var res;\n    return _regeneratorRuntime.async(function loadDataRevenueSummary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            model.DateTime = dateTimeFrom;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(ReportService.getRevenueSummary(dateTimeFrom, dateTimeTo, dateTime));\n\n          case 4:\n            res = _context.sent;\n\n            if (res.isSuccess == 1) {\n              setDataRevenueSummary(res.data);\n            }\n\n            setIsLoading(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var OnchangeFromDateTime = function OnchangeFromDateTime(date) {\n    var dateTime = new Date(date);\n    var fromDate = moment(getMonday(dateTime)).format(\"YYYY-MM-DD\");\n    var toDate = moment(dateTime.setDate(getMonday(dateTime).getDate() + 6)).format(\"YYYY-MM-DD\");\n    var toDateMonday = moment(getMonday(dateTime)).format(\"YYYY-MM-DD\");\n    setDateSendMail(fromDate);\n    setFromDateTime(fromDate);\n    setEndDateTime(toDate);\n    loadDataRevenueSummary(fromDate, toDate, toDateMonday);\n  };\n\n  var _onChangeDateTime = function onChangeDateTime(item) {\n    var fromDate = moment(item).format(\"YYYY-MM-DD\");\n    loadDataRevenueSummary(fromDateTime, endDateTime, fromDate);\n  };\n\n  useEffect(function () {\n    if (checKLoadDefault) {\n      var fromDate = fromDateTime;\n\n      var _toDate = moment(fromDateTime).format(\"YYYY-MM-DD\");\n\n      loadDataRevenueSummary(fromDate, _toDate, fromDateTime);\n    }\n  }, []);\n\n  var checkValue = function checkValue(value) {\n    if (value == \"NaN\" || value == undefined || value == 0 || value == null) {\n      return 0;\n    }\n\n    return value;\n  };\n\n  var ViewDom = function ViewDom(data) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        borderBottomColor: colors.colorLine,\n        borderBottomWidth: 0.5,\n        paddingHorizontal: 15,\n        paddingVertical: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: colors.colorText,\n        fontSize: 16,\n        fontWeight: \"600\",\n        textTransform: 'uppercase'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, data.workplaceName)), React.createElement(View, {\n      style: [styles.row, {\n        marginBottom: 10\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.rowItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Estimated Daily Sales\"), data.estimatedDailySales ? React.createElement(MoneyText, {\n      data: data.estimatedDailySales,\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 53\n      }\n    }) : React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 121\n      }\n    }, \"0\")), React.createElement(View, {\n      style: styles.rowItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Payroll hours\"), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, data.userWorkingHour ? Money(data.userWorkingHour) : 0)), React.createElement(View, {\n      style: styles.rowItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"Payroll $\"), data.payrollVND ? React.createElement(MoneyText, {\n      data: checkValue(data.payrollVND),\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 44\n      }\n    }) : React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 115\n      }\n    }, \"0\")), React.createElement(View, {\n      style: styles.rowItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"payroll %\"), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, data.payrollPercent ? Money(data.payrollPercent) : 0)), React.createElement(View, {\n      style: styles.rowItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, \"Customer count\"), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, data.customercount ? Money(data.customercount) : 0)), React.createElement(View, {\n      style: styles.rowItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Check ave.\"), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, data.checkave ? Money(checkValue(data.checkave)) : 0)), React.createElement(View, {\n      style: styles.rowItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textRowTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"SPMH\"), data.spmh ? React.createElement(MoneyText, {\n      data: checkValue(data.spmh),\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 38\n      }\n    }) : React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 103\n      }\n    }, \"0\"))), React.createElement(View, {\n      style: styles.line,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var ViewTotal = function ViewTotal() {\n    var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'money';\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: [styles.itemTotal, {\n        backgroundColor: \"#8D7550\"\n      }, style],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"500\",\n        color: colors.colorText,\n        textTransform: 'uppercase'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, title), type === 'money' ? React.createElement(Text, {\n      style: {\n        fontWeight: \"600\",\n        color: colors.colorText\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, data ? React.createElement(MoneyText, {\n      data: data,\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }) : 0) : React.createElement(Text, {\n      style: {\n        fontWeight: \"600\",\n        color: colors.colorText\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }\n    }, data ? Money(checkValue(data)) : 0)), React.createElement(View, {\n      style: styles.line,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 24\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, React.createElement(DateTimePicker, {\n    onSubmitFromDate: function onSubmitFromDate(date) {\n      return OnchangeFromDateTime(date);\n    },\n    onSubmitEndDate: function onSubmitEndDate(date) {\n      return setEndDateTime(date);\n    },\n    isShowTime: false,\n    checkkNotEndDate: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, React.createElement(DropDownRank, {\n    defaultValue: \"Monday\",\n    dateFrom: fromDateTime,\n    onChangeDateTime: function onChangeDateTime(value) {\n      _onChangeDateTime(value == null ? void 0 : value.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  })), isLoading ? React.createElement(DialogAwait, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 30\n    }\n  }) : React.createElement(React.Fragment, null, (dataRevenueSummary == null ? void 0 : dataRevenueSummary.dataRevenue) && dataRevenueSummary.dataRevenue.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, ViewDom(item));\n  }), ViewTotal('ESTIMATED DAILY SALES', checkValue(dataRevenueSummary == null ? void 0 : dataRevenueSummary.totalEstimatedDailySales)), ViewTotal('PAYROLL HOURS', checkValue(dataRevenueSummary == null ? void 0 : dataRevenueSummary.totalUserWorkingHour), {}, 'percent'), ViewTotal('PAYROLL $', checkValue(dataRevenueSummary == null ? void 0 : dataRevenueSummary.totalPayrollVND)), ViewTotal('PAYROLL %', checkValue(dataRevenueSummary == null ? void 0 : dataRevenueSummary.totalPayrollPercent), {}, 'percent'), ViewTotal('CUSTOMER COUNT', checkValue(dataRevenueSummary == null ? void 0 : dataRevenueSummary.totalCustomercount), {}, 'percent'), ViewTotal('CHECK AVE.', checkValue(dataRevenueSummary == null ? void 0 : dataRevenueSummary.totalCheckave)), ViewTotal('SPMH', checkValue(dataRevenueSummary == null ? void 0 : dataRevenueSummary.totalSPMH)), React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingVertical: 32\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, React.createElement(LinearGradient, {\n    style: styles.buttonSubmit,\n    colors: [\"#DAB451\", \"#988050\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableHighlight, {\n    underlayColor: colors.yellowishbrown,\n    onPress: function onPress() {\n      setModalSendMail(!modalSendMail);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 36,\n      width: 150,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      textAlign: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }, \"Send\"))))), React.createElement(ModalSendEmail, {\n    title: \"RevenueSummary\",\n    visible: modalSendMail,\n    isPickType: true,\n    dateTime: dateSendMail,\n    onRequestClose: function onRequestClose() {\n      setModalSendMail(!modalSendMail);\n    },\n    onRequestSend: function onRequestSend() {\n      handleSendMail();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }), React.createElement(SendSuccess, {\n    visible: sentStatus === \"success\",\n    onRequestClose: function onRequestClose() {\n      return setSentStatus(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }), React.createElement(SendFail, {\n    visible: sentStatus === \"fail\",\n    onRequestClose: function onRequestClose() {\n      return setSentStatus(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default revenueSummary;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.backgroundApp\n  },\n  line: {\n    height: 10,\n    backgroundColor: colors.backgroundTab\n  },\n  buttonSubmit: {\n    height: 36,\n    width: 150,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: colors.white\n  },\n  itemTotal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 15,\n    paddingVertical: 10\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'column',\n    alignContent: 'center',\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  rowItem: {\n    flex: 1,\n    height: 21,\n    marginTop: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignContent: 'center'\n  },\n  textRowTitle: {\n    color: colors.gray,\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  text: {\n    textAlign: 'left',\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: 15,\n    color: \"#fff\",\n    paddingLeft: 8\n  }\n});","map":{"version":3,"sources":["D:/angular/hts_reactnative/src/app/screens/details/Tabreport/revenueSummary.tsx"],"names":["React","useEffect","useState","moment","colors","LinearGradient","DateTimePicker","ModalSendEmail","SendSuccess","SendFail","Money","DropDownRank","ReportService","getMonday","DialogAwait","MoneyText","revenueSummary","isLoading","setIsLoading","toDate","Date","endWeekDay","setDate","getDate","getMonth","setMonth","format","fromDateTime","setFromDateTime","endDateTime","setEndDateTime","model","checKLoadDefault","setChecKLoadDefault","modalSendMail","setModalSendMail","sentStatus","setSentStatus","dataRevenueSummary","setDataRevenueSummary","dateSendMail","setDateSendMail","handleSendMail","loadDataRevenueSummary","dateTimeFrom","dateTimeTo","dateTime","DateTime","getRevenueSummary","res","isSuccess","data","OnchangeFromDateTime","date","fromDate","toDateMonday","onChangeDateTime","item","checkValue","value","undefined","ViewDom","borderBottomColor","colorLine","borderBottomWidth","paddingHorizontal","paddingVertical","color","colorText","fontSize","fontWeight","textTransform","workplaceName","styles","row","marginBottom","rowItem","textRowTitle","estimatedDailySales","text","userWorkingHour","payrollVND","payrollPercent","customercount","checkave","spmh","line","ViewTotal","title","style","type","itemTotal","backgroundColor","container","dataRevenue","map","index","totalEstimatedDailySales","totalUserWorkingHour","totalPayrollVND","totalPayrollPercent","totalCustomercount","totalCheckave","totalSPMH","justifyContent","alignItems","buttonSubmit","yellowishbrown","height","width","textAlign","StyleSheet","create","flex","backgroundApp","backgroundTab","borderRadius","white","flexDirection","alignContent","paddingLeft","paddingRight","marginTop","gray","fontStyle"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    View,\r\n    Text,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n} from \"react-native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { colors } from \"../../../utils/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport DateTimePicker from \"../../../components/datetimepicker\";\r\nimport ModalSendEmail from \"../../../components/management/items/modalSendEmail\";\r\nimport SendSuccess from \"../../../components/modalNotification/SendSuccess\";\r\nimport SendFail from \"../../../components/modalNotification/SendFail\";\r\nimport { Money } from \"../../../components/generalConvert/conVertmunberToMoney\";\r\nimport DropDownRank from \"../../../components/dropDown/DropDownRank\";\r\nimport { IRevenueSummary, IRevenue } from \"../../../models/reportModel\";\r\nimport { FilterViewModel } from \"../../../models/filterViewModel\";\r\nimport { ReportService } from \"../../../netWorking/SpeedposService\";\r\nimport { getMonday } from \"../../../components/generalConvert/conVertMonDay\";\r\nimport DialogAwait from \"../../../components/dialogs/Loading\";\r\nimport MoneyText from \"../../../components/Money\";\r\nconst revenueSummary = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const toDate = new Date();\r\n    let endWeekDay = new Date().setDate(getMonday(toDate).getDate() + 6);\r\n    if (getMonday(toDate).getMonth() < toDate.getMonth()) {\r\n        //check ngày đầu tuần và ngày hiện tại khác tháng\r\n        endWeekDay = new Date(new Date().setMonth(toDate.getMonth() - 1)).setDate(getMonday(toDate).getDate() + 6);\r\n    }\r\n    const [fromDateTime, setFromDateTime] = useState(\r\n        moment(getMonday(toDate)).format(\"YYYY-MM-DD\")\r\n    );\r\n    const [endDateTime, setEndDateTime] = useState(\r\n        moment(endWeekDay).format(\"YYYY-MM-DD\")\r\n    );\r\n    let model: FilterViewModel = {};\r\n    const [checKLoadDefault, setChecKLoadDefault] = useState(true);\r\n    const [modalSendMail, setModalSendMail] = useState(false);\r\n    const [sentStatus, setSentStatus] = useState(\"\");\r\n    const [dataRevenueSummary, setDataRevenueSummary] = useState<IRevenueSummary>(null);\r\n    const [dateSendMail, setDateSendMail] = useState(\r\n        moment(getMonday(toDate)).format(\"YYYY-MM-DD\")\r\n    );\r\n\r\n    const handleSendMail = () => {\r\n        setModalSendMail(!modalSendMail);\r\n        setSentStatus(\"success\");\r\n    };\r\n\r\n    const loadDataRevenueSummary = async (dateTimeFrom, dateTimeTo, dateTime) => {\r\n        setIsLoading(true);\r\n        model.DateTime = dateTimeFrom;\r\n        const res = await ReportService.getRevenueSummary(dateTimeFrom, dateTimeTo, dateTime);\r\n        if (res.isSuccess == 1) {\r\n            setDataRevenueSummary(res.data)\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const OnchangeFromDateTime = (date: any) => {\r\n        const dateTime = new Date(date);\r\n        const fromDate = moment(getMonday(dateTime)).format(\"YYYY-MM-DD\");\r\n        const toDate = moment(dateTime.setDate(getMonday(dateTime).getDate() + 6)).format(\"YYYY-MM-DD\");\r\n        const toDateMonday = moment(getMonday(dateTime)).format(\"YYYY-MM-DD\");\r\n        setDateSendMail(fromDate);\r\n        setFromDateTime(fromDate);\r\n        setEndDateTime(toDate);\r\n        loadDataRevenueSummary(fromDate, toDate, toDateMonday);\r\n    }\r\n\r\n    const onChangeDateTime = (item: any) => {\r\n        const fromDate = moment(item).format(\"YYYY-MM-DD\");\r\n        loadDataRevenueSummary(fromDateTime, endDateTime, fromDate);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (checKLoadDefault) {\r\n            let fromDate = fromDateTime;\r\n            let toDate = moment(fromDateTime).format(\"YYYY-MM-DD\");\r\n            loadDataRevenueSummary(fromDate, toDate, fromDateTime);\r\n        }\r\n    }, [])\r\n\r\n    const checkValue = (value: any) => {\r\n        if (value == \"NaN\" || value == undefined || value == 0 || value == null) {\r\n            return 0\r\n        }\r\n        return value\r\n    }\r\n    const ViewDom = (data: IRevenue) => {\r\n        return (\r\n            <View>\r\n                <View\r\n                    style={{\r\n                        borderBottomColor: colors.colorLine,\r\n                        borderBottomWidth: 0.5,\r\n                        paddingHorizontal: 15,\r\n                        paddingVertical: 10,\r\n                    }}\r\n                >\r\n                    <Text\r\n                        style={{\r\n                            color: colors.colorText,\r\n                            fontSize: 16,\r\n                            fontWeight: \"600\",\r\n                            textTransform: 'uppercase'\r\n                        }}\r\n                    >{data.workplaceName}</Text>\r\n                </View>\r\n                <View style={[styles.row, { marginBottom: 10 }]}>\r\n                    <View style={styles.rowItem}>\r\n                        <Text style={styles.textRowTitle}>Estimated Daily Sales</Text>\r\n                        {data.estimatedDailySales ? <MoneyText data={data.estimatedDailySales} style={styles.text} /> : <Text style={styles.text}>0</Text>}\r\n                    </View>\r\n                    <View style={styles.rowItem}>\r\n                        <Text style={styles.textRowTitle}>Payroll hours</Text>\r\n                        <Text style={styles.text}>{data.userWorkingHour ? Money(data.userWorkingHour) : 0}</Text>\r\n                    </View>\r\n                    <View style={styles.rowItem}>\r\n                        <Text style={styles.textRowTitle}>Payroll $</Text>\r\n                        {data.payrollVND ? <MoneyText data={checkValue(data.payrollVND)} style={styles.text} /> : <Text style={styles.text}>0</Text>}\r\n                    </View>\r\n                    <View style={styles.rowItem}>\r\n                        <Text style={styles.textRowTitle}>payroll %</Text>\r\n                        <Text style={styles.text}>{data.payrollPercent ? Money(data.payrollPercent) : 0}</Text>\r\n                    </View>\r\n                    <View style={styles.rowItem}>\r\n                        <Text style={styles.textRowTitle}>Customer count</Text>\r\n                        <Text style={styles.text}>{data.customercount ? Money(data.customercount) : 0}</Text>\r\n                    </View>\r\n                    <View style={styles.rowItem}>\r\n                        <Text style={styles.textRowTitle}>Check ave.</Text>\r\n                        <Text style={styles.text}>{data.checkave ? Money(checkValue(data.checkave)) : 0}</Text>\r\n                    </View>\r\n                    <View style={styles.rowItem}>\r\n                        <Text style={styles.textRowTitle}>SPMH</Text>\r\n                        {data.spmh ? <MoneyText data={checkValue(data.spmh)} style={styles.text} /> : <Text style={styles.text}>0</Text>}\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.line}></View>\r\n            </View>\r\n        )\r\n    }\r\n    const ViewTotal = (title = '', data = 0, style = {}, type = 'money') => {\r\n        return (\r\n            <>\r\n                <View style={[styles.itemTotal, { backgroundColor: \"#8D7550\" }, style]}>\r\n                    <Text style={{ fontWeight: \"500\", color: colors.colorText, textTransform: 'uppercase' }}>\r\n                        {title}\r\n                    </Text>\r\n                    {type === 'money' ? <Text style={{ fontWeight: \"600\", color: colors.colorText }}>\r\n                        {data ? <MoneyText data={data} style={styles.text} /> : 0}\r\n                    </Text> : <Text style={{ fontWeight: \"600\", color: colors.colorText }}>\r\n                        {data ? Money(checkValue(data)) : 0}\r\n                    </Text>}\r\n\r\n\r\n                </View><View style={styles.line}></View>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <DateTimePicker\r\n                onSubmitFromDate={date => OnchangeFromDateTime(date)}\r\n                onSubmitEndDate={date => setEndDateTime(date)}\r\n                isShowTime={false}\r\n                checkkNotEndDate={false}\r\n            ></DateTimePicker>\r\n            <View style={styles.line}></View>\r\n            <ScrollView>\r\n                <View style={{ marginBottom: 2 }}>\r\n                    <DropDownRank\r\n                        defaultValue=\"Monday\"\r\n                        dateFrom={fromDateTime}\r\n                        onChangeDateTime={value => {\r\n                            onChangeDateTime(value?.value);\r\n                        }}\r\n                    ></DropDownRank>\r\n                </View>\r\n                {isLoading ? <DialogAwait></DialogAwait> :\r\n                    <>\r\n                        {dataRevenueSummary?.dataRevenue && dataRevenueSummary.dataRevenue.map((item, index) => {\r\n                            return (<View key={index} >{ViewDom(item)}</View>)\r\n\r\n                        })}\r\n                        {ViewTotal('ESTIMATED DAILY SALES', checkValue(dataRevenueSummary?.totalEstimatedDailySales))}\r\n                        {ViewTotal('PAYROLL HOURS', checkValue(dataRevenueSummary?.totalUserWorkingHour), {}, 'percent')}\r\n                        {ViewTotal('PAYROLL $', checkValue(dataRevenueSummary?.totalPayrollVND))}\r\n                        {ViewTotal('PAYROLL %', checkValue(dataRevenueSummary?.totalPayrollPercent), {}, 'percent')}\r\n                        {ViewTotal('CUSTOMER COUNT', checkValue(dataRevenueSummary?.totalCustomercount), {}, 'percent')}\r\n                        {ViewTotal('CHECK AVE.', checkValue(dataRevenueSummary?.totalCheckave))}\r\n                        {ViewTotal('SPMH', checkValue(dataRevenueSummary?.totalSPMH))}\r\n                        <View\r\n                            style={{\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                paddingVertical: 32,\r\n                            }}\r\n                        >\r\n                            <LinearGradient\r\n                                style={styles.buttonSubmit}\r\n                                colors={[\"#DAB451\", \"#988050\"]}\r\n                            >\r\n                                <TouchableHighlight\r\n                                    underlayColor={colors.yellowishbrown}\r\n                                    onPress={() => {\r\n                                        setModalSendMail(!modalSendMail);\r\n                                    }}\r\n                                >\r\n                                    <View\r\n                                        style={{\r\n                                            height: 36,\r\n                                            width: 150,\r\n                                            justifyContent: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <Text style={[styles.title, { textAlign: \"center\" }]}>\r\n                                            Send\r\n                                        </Text>\r\n                                    </View>\r\n                                </TouchableHighlight>\r\n                            </LinearGradient>\r\n                        </View>\r\n                        <ModalSendEmail\r\n                            title={\"RevenueSummary\"}\r\n                            visible={modalSendMail}\r\n                            isPickType={true}\r\n                            dateTime={dateSendMail}\r\n                            onRequestClose={() => {\r\n                                setModalSendMail(!modalSendMail);\r\n                            }}\r\n                            onRequestSend={() => {\r\n                                handleSendMail();\r\n                            }}\r\n                        ></ModalSendEmail>\r\n                        <SendSuccess\r\n                            visible={sentStatus === \"success\"}\r\n                            onRequestClose={() => setSentStatus(\"\")}\r\n                        ></SendSuccess>\r\n                        <SendFail\r\n                            visible={sentStatus === \"fail\"}\r\n                            onRequestClose={() => setSentStatus(\"\")}\r\n                        ></SendFail>\r\n                    </>\r\n                }\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default revenueSummary\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: colors.backgroundApp,\r\n    },\r\n    line: {\r\n        height: 10,\r\n        backgroundColor: colors.backgroundTab,\r\n    },\r\n    buttonSubmit: {\r\n        height: 36,\r\n        width: 150,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 4,\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: \"500\",\r\n        color: colors.white,\r\n    },\r\n    itemTotal: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n    },\r\n    row: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n    },\r\n    rowItem: {\r\n        flex: 1,\r\n        height: 21,\r\n        marginTop: 15,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignContent: 'center',\r\n    },\r\n    textRowTitle: {\r\n        color: colors.gray,\r\n        fontSize: 14,\r\n        fontWeight: '500'\r\n    },\r\n    text: {\r\n        textAlign: 'left',\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"500\",\r\n        fontSize: 15,\r\n        color: \"#fff\",\r\n        paddingLeft: 8,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}